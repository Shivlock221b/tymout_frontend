{"version":3,"file":"static/js/293.e132d708.chunk.js","mappings":"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","sources":["data/mockPersonalizedData.js","services/eventDetailService.js","components/EventDetail/EventDetailLayout.js","components/EventDetail/EventDetailHeader.js","components/EventDetail/EventDetailHero.js","components/EventDetail/EventDetailInfo.js","components/EventDetail/EventDetailActions.js","components/EventDetail/EventDetailLoading.js","components/EventDetail/EventDetailError.js","pages/EventDetailPage.js","hooks/queries/useEventDetailQueries.js"],"sourcesContent":["/**\n * Mock data for Personalized events on OnlyForYou/TymOut page\n * Following Single Responsibility Principle - this file only contains mock data\n */\n\n// Personalized events mock data\nexport const personalizedEventsData = [\n  {\n    id: 'p1',\n    title: 'Tech Networking Lunch',\n    type: 'professional',\n    category: 'networking',\n    description: 'Connect with tech professionals from your industry over lunch in a casual setting.',\n    location: 'Bytes Cafe',\n    date: '2025-04-10',\n    time: '12:30',\n    distance: 1.8,\n    rating: 4.7,\n    participants: 12,\n    maxParticipants: 15,\n    tags: ['tech', 'networking', 'lunch'],\n    image: 'https://images.unsplash.com/photo-1517048676732-d65bc937f952?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\n    host: {\n      id: '201',\n      name: 'Rachel Chen',\n      image: 'https://randomuser.me/api/portraits/women/23.jpg',\n      verified: true\n    },\n    recommendation: {\n      reason: 'Based on your interest in technology',\n      score: 0.92\n    }\n  },\n  {\n    id: 'p2',\n    title: 'Evening Yoga in the Park',\n    type: 'fitness',\n    category: 'wellness',\n    description: 'Unwind after work with a relaxing yoga session in the park. All levels welcome.',\n    location: 'Sunset Park',\n    date: '2025-04-11',\n    time: '18:00',\n    distance: 0.7,\n    rating: 4.9,\n    participants: 8,\n    maxParticipants: 20,\n    tags: ['yoga', 'wellness', 'outdoors'],\n    image: 'https://images.unsplash.com/photo-1545205597-3d9d02c29597?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\n    host: {\n      id: '202',\n      name: 'Maya Patel',\n      image: 'https://randomuser.me/api/portraits/women/45.jpg',\n      verified: true\n    },\n    recommendation: {\n      reason: 'You attended similar wellness events',\n      score: 0.89\n    }\n  },\n  {\n    id: 'p3',\n    title: 'Photography Workshop',\n    type: 'educational',\n    category: 'creative',\n    description: 'Learn composition techniques and editing tips from professional photographers.',\n    location: 'Urban Studio',\n    date: '2025-04-12',\n    time: '14:00',\n    distance: 2.3,\n    rating: 4.6,\n    participants: 15,\n    maxParticipants: 20,\n    tags: ['photography', 'workshop', 'creative'],\n    image: 'https://images.unsplash.com/photo-1516035069371-29a1b244cc32?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\n    host: {\n      id: '203',\n      name: 'Jason Rivera',\n      image: 'https://randomuser.me/api/portraits/men/34.jpg',\n      verified: false\n    },\n    recommendation: {\n      reason: 'Based on your photography interests',\n      score: 0.85\n    }\n  },\n  {\n    id: 'p4',\n    title: 'Board Game Night',\n    type: 'social',\n    category: 'games',\n    description: 'Join us for a night of strategy board games, card games, and fun with new friends.',\n    location: 'Meeple Cafe',\n    date: '2025-04-13',\n    time: '19:00',\n    distance: 1.5,\n    rating: 4.8,\n    participants: 10,\n    maxParticipants: 16,\n    tags: ['board games', 'social', 'games'],\n    image: 'https://images.unsplash.com/photo-1610890716171-6b1bb98ffd09?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\n    host: {\n      id: '204',\n      name: 'Alex Morgan',\n      image: 'https://randomuser.me/api/portraits/men/52.jpg',\n      verified: true\n    },\n    recommendation: {\n      reason: 'Friends in your network are attending',\n      score: 0.94\n    }\n  },\n  {\n    id: 'p5',\n    title: 'Local Music Showcase',\n    type: 'entertainment',\n    category: 'music',\n    description: 'Discover talented local musicians in an intimate venue with great acoustics.',\n    location: 'The Sound Lounge',\n    date: '2025-04-14',\n    time: '20:00',\n    distance: 3.2,\n    rating: 4.5,\n    participants: 35,\n    maxParticipants: 50,\n    tags: ['music', 'live', 'local'],\n    image: 'https://images.unsplash.com/photo-1501612780327-45045538702b?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\n    host: {\n      id: '205',\n      name: 'Emma Taylor',\n      image: 'https://randomuser.me/api/portraits/women/67.jpg',\n      verified: true\n    },\n    recommendation: {\n      reason: 'Matches your music preferences',\n      score: 0.87\n    }\n  }\n];\n\n// Upcoming personalized events data\nexport const upcomingPersonalizedEventsData = [\n  {\n    id: 'u1',\n    title: 'Cooking Class: Asian Fusion',\n    type: 'culinary',\n    category: 'food',\n    description: 'Learn to prepare delicious Asian fusion dishes with a professional chef.',\n    location: 'Culinary Institute',\n    date: '2025-04-20',\n    time: '17:00',\n    distance: 4.1,\n    rating: 4.8,\n    participants: 6,\n    maxParticipants: 12,\n    tags: ['cooking', 'asian', 'culinary'],\n    image: 'https://images.unsplash.com/photo-1556910103-1c02745aae4d?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\n    host: {\n      id: '206',\n      name: 'David Kim',\n      image: 'https://randomuser.me/api/portraits/men/64.jpg',\n      verified: true\n    },\n    recommendation: {\n      reason: 'Based on your culinary interests',\n      score: 0.91\n    }\n  },\n  {\n    id: 'u2',\n    title: 'Entrepreneur Mastermind',\n    type: 'business',\n    category: 'professional',\n    description: 'Join fellow entrepreneurs to share ideas, challenges, and growth strategies.',\n    location: 'Innovation Hub',\n    date: '2025-04-22',\n    time: '18:30',\n    distance: 2.7,\n    rating: 4.7,\n    participants: 8,\n    maxParticipants: 10,\n    tags: ['business', 'entrepreneur', 'networking'],\n    image: 'https://images.unsplash.com/photo-1557804506-669a67965ba0?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\n    host: {\n      id: '207',\n      name: 'Mark Johnson',\n      image: 'https://randomuser.me/api/portraits/men/41.jpg',\n      verified: true\n    },\n    recommendation: {\n      reason: 'Aligns with your business interests',\n      score: 0.88\n    }\n  },\n  {\n    id: 'u3',\n    title: 'Weekend Hiking Adventure',\n    type: 'outdoor',\n    category: 'fitness',\n    description: 'Explore scenic trails and enjoy nature with a guided group hike.',\n    location: 'Mountain Trails Park',\n    date: '2025-04-26',\n    time: '09:00',\n    distance: 6.5,\n    rating: 4.9,\n    participants: 12,\n    maxParticipants: 20,\n    tags: ['hiking', 'outdoors', 'nature'],\n    image: 'https://images.unsplash.com/photo-1551632811-561732d1e306?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\n    host: {\n      id: '208',\n      name: 'Sarah Miller',\n      image: 'https://randomuser.me/api/portraits/women/32.jpg',\n      verified: true\n    },\n    recommendation: {\n      reason: 'Based on your outdoor activity preferences',\n      score: 0.93\n    }\n  }\n];\n\n// Helper function to generate filtered personalized results based on category and query\nexport const generatePersonalizedResults = (query = '', category = 'all') => {\n  // Combine all data for search\n  const allData = [...personalizedEventsData, ...upcomingPersonalizedEventsData];\n  \n  // Filter by search query if provided\n  let filteredData = allData;\n  if (query) {\n    const lowerQuery = query.toLowerCase();\n    filteredData = allData.filter(item => \n      item.title.toLowerCase().includes(lowerQuery) ||\n      item.description.toLowerCase().includes(lowerQuery) ||\n      item.tags.some(tag => tag.toLowerCase().includes(lowerQuery))\n    );\n  }\n  \n  // Filter by category if not 'all'\n  if (category !== 'all') {\n    filteredData = filteredData.filter(item => \n      item.category === category || item.type === category\n    );\n  }\n  \n  // Sort by recommendation score\n  return filteredData.sort((a, b) => \n    b.recommendation.score - a.recommendation.score\n  );\n};\n","import { \r\n  tablesData, \r\n  eventsData, \r\n  circlesData \r\n} from '../data/mockExploreData';\r\nimport { personalizedEventsData } from '../data/mockPersonalizedData';\r\nimport { useAuthStore } from '../stores/authStore';\r\n\r\n/**\r\n * EventDetail Service\r\n * \r\n * Following Single Responsibility Principle:\r\n * - This service is responsible for all event detail related API calls\r\n * - Each function handles a specific operation\r\n * - Mock implementation is provided for development\r\n */\r\nconst eventDetailService = {\r\n  /**\r\n   * Get details of a specific item by type and ID\r\n   * @param {string} type - The type of item (events, tables, circles)\r\n   * @param {string} id - The ID of the item\r\n   * @returns {Promise<Object>} - The item details\r\n   */\r\n  getItemDetails: async (type, id) => {\r\n    try {\r\n      // In a production environment, this would be an API call\r\n      // const response = await axios.get(`/api/${type}/${id}`);\r\n      // return response.data;\r\n      \r\n      // Using mock data for development\r\n      let foundItem = null;\r\n      \r\n      // Simulate API delay\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n      \r\n      // Search in different data sources based on type\r\n      switch (type) {\r\n        case 'tables':\r\n          foundItem = tablesData.find(item => item.id === id);\r\n          break;\r\n        case 'events':\r\n          foundItem = eventsData.find(item => item.id === id);\r\n          // If not found in explore events, check personalized events\r\n          if (!foundItem) {\r\n            foundItem = personalizedEventsData.find(item => item.id === id);\r\n          }\r\n          break;\r\n        case 'circles':\r\n          foundItem = circlesData.find(item => item.id === id);\r\n          break;\r\n        default:\r\n          // If type is not specified, search all data sources\r\n          foundItem = \r\n            tablesData.find(item => item.id === id) ||\r\n            eventsData.find(item => item.id === id) ||\r\n            circlesData.find(item => item.id === id) ||\r\n            personalizedEventsData.find(item => item.id === id);\r\n      }\r\n      \r\n      if (foundItem) {\r\n        return { ...foundItem, itemType: type };\r\n      } else {\r\n        throw new Error(`Item not found: ${type} ${id}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error fetching ${type} with id ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Take action on an item (RSVP, join, apply, etc.)\r\n   * @param {string} type - The type of item (events, tables, circles)\r\n   * @param {string} id - The ID of the item\r\n   * @param {string} action - The action to take (rsvp, join, apply)\r\n   * @returns {Promise<Object>} - The result of the action\r\n   */\r\n  takeAction: async (type, id, action) => {\r\n    try {\r\n      // For events, use the real API endpoint\r\n      if (type === 'events' && action === 'join') {\r\n        // Import dynamically to avoid circular dependencies\r\n        const eventService = (await import('./eventService')).default;\r\n        \r\n        // Get current user data from auth store\r\n        const authState = useAuthStore.getState();\r\n        const currentUser = authState.user;\r\n        \r\n        // Prepare user data with name from auth store if available\r\n        const userData = {\r\n          userId: currentUser?._id || localStorage.getItem('userId') || '1',\r\n          name: currentUser?.name || currentUser?.fullName || localStorage.getItem('userName') || 'Anonymous User'\r\n        };\r\n        \r\n        console.log('[eventDetailService] Joining event with user data:', userData);\r\n        \r\n        try {\r\n          const result = await eventService.joinEvent(id, userData);\r\n          \r\n          // Make sure the isRequested flag is set in the result\r\n          const updatedData = {\r\n            ...result,\r\n            isRequested: true // Ensure this flag is set for optimistic UI updates\r\n          };\r\n          \r\n          return {\r\n            success: true,\r\n            message: 'Your request to join this event has been sent to the host.',\r\n            data: updatedData,\r\n            timestamp: new Date().toISOString()\r\n          };\r\n        } catch (error) {\r\n          // If the error is because the user already requested to join,\r\n          // we want to treat this as a success with isRequested=true\r\n          if (error.response && \r\n              error.response.status === 400 && \r\n              error.response.data?.error?.includes('already requested')) {\r\n            \r\n            console.log('[eventDetailService] User has already requested to join this event');\r\n            \r\n            return {\r\n              success: true,\r\n              message: 'You have already requested to join this event.',\r\n              data: {\r\n                id,\r\n                isRequested: true\r\n              },\r\n              timestamp: new Date().toISOString()\r\n            };\r\n          }\r\n          \r\n          // Otherwise, re-throw the error\r\n          throw error;\r\n        }\r\n      }\r\n      \r\n      // For other types, use mock implementation for now\r\n      // Simulate API delay\r\n      await new Promise(resolve => setTimeout(resolve, 700));\r\n      \r\n      // Mock success response\r\n      const actionVerb = \r\n        action === 'rsvp' ? 'RSVP\\'d to' : \r\n        action === 'join' ? 'joined' : \r\n        'applied to';\r\n      \r\n      return {\r\n        success: true,\r\n        message: `You have successfully ${actionVerb} this ${type.slice(0, -1)}!`,\r\n        timestamp: new Date().toISOString()\r\n      };\r\n    } catch (error) {\r\n      console.error(`Error taking action ${action} on ${type} with id ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Cancel an action on an item (cancel RSVP, leave, withdraw, etc.)\r\n   * @param {string} type - The type of item (events, tables, circles)\r\n   * @param {string} id - The ID of the item\r\n   * @param {string} action - The action to cancel (rsvp, join, apply)\r\n   * @returns {Promise<Object>} - The result of the cancellation\r\n   */\r\n  cancelAction: async (type, id, action) => {\r\n    try {\r\n      // For events, use the real API endpoint\r\n      if (type === 'events' && action === 'join') {\r\n        // Import dynamically to avoid circular dependencies\r\n        const eventService = (await import('./eventService')).default;\r\n        const userId = localStorage.getItem('userId') || '1';\r\n        \r\n        const result = await eventService.leaveEvent(id, userId);\r\n        return {\r\n          success: true,\r\n          message: 'You have successfully left this event.',\r\n          data: result,\r\n          timestamp: new Date().toISOString()\r\n        };\r\n      }\r\n      \r\n      // For other types, use mock implementation for now\r\n      // Simulate API delay\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n      \r\n      // Mock success response\r\n      const actionVerb = \r\n        action === 'rsvp' ? 'RSVP' : \r\n        action === 'join' ? 'membership' : \r\n        'application';\r\n      \r\n      return {\r\n        success: true,\r\n        message: `You have successfully cancelled your ${actionVerb} for this ${type.slice(0, -1)}.`,\r\n        timestamp: new Date().toISOString()\r\n      };\r\n    } catch (error) {\r\n      console.error(`Error cancelling action ${action} on ${type} with id ${id}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default eventDetailService;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { EventDetailHeader, EventDetailHero, EventDetailInfo, EventDetailActions } from './index';\r\n\r\n/**\r\n * EventDetailLayout Component\r\n * \r\n * Following the Single Responsibility Principle:\r\n * This component handles the overall layout of the event detail page\r\n * and composes all the smaller components together\r\n */\r\nconst EventDetailLayout = ({ \r\n  item, \r\n  type, \r\n  isFromExplore,\r\n  handleGoBack,\r\n  handleMainAction,\r\n  isAuthenticated = true, // Default to true for backward compatibility\r\n  isActionLoading = false\r\n}) => {\r\n  const navigate = useNavigate();\r\n  // Handle null/undefined checks for properties\r\n  if (!item) return null;\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\r\n      <EventDetailHeader \r\n        isFromExplore={isFromExplore}\r\n        handleGoBack={handleGoBack}\r\n      />\r\n      \r\n      <div className=\"bg-white rounded-xl shadow-md overflow-hidden\">\r\n        <EventDetailHero \r\n          item={item} \r\n          type={type} \r\n        />\r\n        \r\n        <div className=\"p-6\">\r\n          {/* Host/Organizer Info */}\r\n          {(item.host || item.organizer) && (\r\n            <div \r\n              className=\"flex items-center mb-6 cursor-pointer hover:bg-gray-50 p-3 rounded-lg transition-colors duration-200\"\r\n              onClick={() => {\r\n                const hostData = item.host || item.organizer;\r\n                if (hostData && hostData.id) {\r\n                  console.log('Navigating to profile page for host/organizer:', hostData.id);\r\n                  navigate(`/profile/${hostData.id}`, { \r\n                    state: { \r\n                      from: 'eventDetail',\r\n                      returnTo: window.location.pathname,\r\n                      itemTitle: item.title\r\n                    }\r\n                  });\r\n                } else {\r\n                  console.warn('Host/organizer ID not available for navigation');\r\n                }\r\n              }}\r\n            >\r\n              <img\r\n                src={(item.host || item.organizer).image}\r\n                alt={(item.host || item.organizer).name}\r\n                className=\"w-12 h-12 rounded-full object-cover mr-4\"\r\n                onError={(e) => {\r\n                  e.target.onerror = null;\r\n                  e.target.src = 'https://via.placeholder.com/48?text=Host';\r\n                }}\r\n              />\r\n              <div>\r\n                <p className=\"font-medium\">{(item.host || item.organizer).name}</p>\r\n                <p className=\"text-gray-500 text-sm\">\r\n                  {type === 'circles' ? 'Admin' : type === 'tables' ? 'Host' : 'Organizer'}\r\n                  {(item.host || item.organizer).verified && (\r\n                    <span className=\"ml-1 text-indigo-600\">✓</span>\r\n                  )}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {/* Essential Details */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 mb-8\">\r\n            <EventDetailInfo \r\n              item={item} \r\n              type={type} \r\n            />\r\n            \r\n            <EventDetailActions\r\n              item={item}\r\n              type={type}\r\n              handleMainAction={handleMainAction}\r\n              isAuthenticated={isAuthenticated}\r\n              isActionLoading={isActionLoading}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nEventDetailLayout.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  isFromExplore: PropTypes.bool.isRequired,\r\n  handleGoBack: PropTypes.func.isRequired,\r\n  handleMainAction: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n  isActionLoading: PropTypes.bool\r\n};\r\n\r\nexport default EventDetailLayout;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaArrowLeft } from 'react-icons/fa';\n\n/**\n * EventDetailHeader Component\n * \n * Following the Single Responsibility Principle:\n * This component handles only the header section with back button\n */\nconst EventDetailHeader = ({ isFromExplore, handleGoBack }) => {\n  return (\n    <button\n      onClick={handleGoBack}\n      className=\"flex items-center text-indigo-600 mb-6 hover:text-indigo-800 transition\"\n    >\n      <FaArrowLeft className=\"mr-2\" /> Back to Explore\n    </button>\n  );\n};\n\nEventDetailHeader.propTypes = {\n  isFromExplore: PropTypes.bool.isRequired,\n  handleGoBack: PropTypes.func.isRequired\n};\n\nexport default EventDetailHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * EventDetailHero Component\n * \n * Following the Single Responsibility Principle:\n * This component handles only the hero image and title section\n */\nconst EventDetailHero = ({ item, type }) => {\n  // Determine the appropriate content label based on type\n  const getTypeLabel = () => {\n    switch (type) {\n      case 'tables':\n        return 'Table';\n      case 'events':\n        return 'Event';\n      case 'circles':\n        return 'Circle';\n      default:\n        return 'Item';\n    }\n  };\n\n  return (\n    <div className=\"relative h-72 md:h-96 w-full\">\n      <img\n        src={item.image || item.event_image} // Use event_image if image is not available\n        alt={item.title}\n        className=\"w-full h-full object-cover\"\n        onError={(e) => {\n          e.target.onerror = null;\n          e.target.src = 'https://via.placeholder.com/1200x600?text=No+Image';\n        }}\n      />\n      {/* Debug info */}\n      {process.env.NODE_ENV === 'development' && (\n        <div className=\"absolute top-0 left-0 bg-black/50 text-white text-xs p-1\">\n          Image source: {item.image ? 'image' : (item.event_image ? 'event_image' : 'none')}\n        </div>\n      )}\n      <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 to-transparent\"></div>\n      \n      {/* Category Badge */}\n      {item.category && (\n        <div className=\"absolute top-4 right-4 bg-indigo-600 text-white px-3 py-1 rounded-full text-sm font-medium\">\n          {item.category}\n        </div>\n      )}\n      \n      {/* Title overlay */}\n      <div className=\"absolute bottom-0 left-0 right-0 p-6 text-white\">\n        <div className=\"flex items-center mb-2\">\n          <span className=\"text-sm font-medium bg-white/20 backdrop-blur-sm px-3 py-1 rounded-full\">\n            {getTypeLabel()}\n          </span>\n        </div>\n        <h1 className=\"text-3xl md:text-4xl font-bold\">{item.title}</h1>\n      </div>\n    </div>\n  );\n};\n\nEventDetailHero.propTypes = {\n  item: PropTypes.object.isRequired,\n  type: PropTypes.string.isRequired\n};\n\nexport default EventDetailHero;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaMapMarkerAlt, FaUser, FaTag, FaClock, FaCalendarAlt, FaUsers, FaDirections, FaExternalLinkAlt } from 'react-icons/fa';\n\n/**\n * EventDetailInfo Component\n * \n * Following the Single Responsibility Principle:\n * This component handles displaying detailed information about an event/table/circle\n */\nconst EventDetailInfo = ({ item, type }) => {\n  // Determine the appropriate content label based on type\n  const getTypeLabel = () => {\n    switch (type) {\n      case 'tables':\n        return 'Table';\n      case 'events':\n        return 'Event';\n      case 'circles':\n        return 'Circle';\n      default:\n        return 'Item';\n    }\n  };\n\n  return (\n    <div>\n      <h2 className=\"text-xl font-semibold mb-4\">About this {getTypeLabel()}</h2>\n      <p className=\"text-gray-700 mb-6\">{item.description}</p>\n      \n      {/* Date and Time */}\n      {(item.date || item.time) && (\n        <div className=\"mb-4\">\n          <h3 className=\"font-medium mb-2\">When</h3>\n          <div className=\"flex flex-wrap gap-6\">\n            {item.date && (\n              <div className=\"flex items-center\">\n                <FaCalendarAlt className=\"text-indigo-600 mr-2\" />\n                <span>{item.date}</span>\n              </div>\n            )}\n            {item.time && (\n              <div className=\"flex items-center\">\n                <FaClock className=\"text-indigo-600 mr-2\" />\n                <span>{item.time}</span>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n      \n      {/* Location */}\n      <div className=\"mb-4\">\n        <h3 className=\"font-medium mb-2\">Location</h3>\n        <div className=\"flex flex-col\">\n          <div className=\"flex items-center mb-2\">\n            <FaMapMarkerAlt className=\"text-indigo-600 mr-2\" />\n            {item.place?.name ? (\n              <span className=\"font-medium\">{item.place.name}</span>\n            ) : (\n              <span>{item.location}</span>\n            )}\n            {item.distance && (\n              <span className=\"ml-2 text-sm text-gray-500\">({item.distance} km away)</span>\n            )}\n          </div>\n          \n          {/* Address if available */}\n          {item.place?.address && (\n            <div className=\"ml-6 text-gray-600 mb-2\">\n              {item.place.address}\n            </div>\n          )}\n          \n          {/* Google Maps Button */}\n          {(item.place?.coordinates?.latitude && item.place?.coordinates?.longitude) ? (\n            <a \n              href={`https://www.google.com/maps/search/?api=1&query=${item.place.coordinates.latitude},${item.place.coordinates.longitude}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"ml-6 inline-flex items-center px-3 py-1.5 text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 w-fit\"\n            >\n              <FaMapMarkerAlt className=\"mr-1.5\" />\n              Open in Google Maps\n              <FaExternalLinkAlt className=\"ml-1.5 h-3 w-3\" />\n            </a>\n          ) : item.place?.name ? (\n            <a \n              href={`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(`${item.place.name}, ${item.location}, India`)}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"ml-6 inline-flex items-center px-3 py-1.5 text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 w-fit\"\n            >\n              <FaMapMarkerAlt className=\"mr-1.5\" />\n              Open in Google Maps\n              <FaExternalLinkAlt className=\"ml-1.5 h-3 w-3\" />\n            </a>\n          ) : item.location ? (\n            <a \n              href={`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(`${item.location}, India`)}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"ml-6 inline-flex items-center px-3 py-1.5 text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 w-fit\"\n            >\n              <FaMapMarkerAlt className=\"mr-1.5\" />\n              Open in Google Maps\n              <FaExternalLinkAlt className=\"ml-1.5 h-3 w-3\" />\n            </a>\n          ) : null}\n        </div>\n      </div>\n      \n      {/* Participants */}\n      {(item.participants || item.maxParticipants || item.attendees) && (\n        <div className=\"mb-4\">\n          <h3 className=\"font-medium mb-2\">Participants</h3>\n          <div className=\"flex items-center\">\n            <FaUsers className=\"text-indigo-600 mr-2\" />\n            <span>\n              {item.participants || item.attendees || 0}\n              {item.maxParticipants ? ` / ${item.maxParticipants} max` : ''}\n            </span>\n          </div>\n        </div>\n      )}\n      \n      {/* Tags */}\n      {item.tags && item.tags.length > 0 && (\n        <div className=\"mb-4\">\n          <h3 className=\"font-medium mb-2\">Tags</h3>\n          <div className=\"flex flex-wrap gap-2\">\n            {item.tags.map((tag, index) => (\n              <span\n                key={index}\n                className=\"flex items-center bg-gray-100 px-3 py-1 rounded-full text-sm text-gray-700\"\n              >\n                <FaTag className=\"mr-1 text-indigo-600 text-xs\" />\n                {tag}\n              </span>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nEventDetailInfo.propTypes = {\n  item: PropTypes.object.isRequired,\n  type: PropTypes.string.isRequired\n};\n\nexport default EventDetailInfo;\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FaShare, FaCheck, FaCopy } from 'react-icons/fa';\r\n\r\n/**\r\n * EventDetailActions Component\r\n * \r\n * Following the Single Responsibility Principle:\r\n * This component handles the action buttons and recommendation information\r\n */\r\nconst EventDetailActions = ({ item, type, handleMainAction, isAuthenticated = true, isActionLoading = false }) => {\r\n  // State to track if the user has requested to join or is already joined\r\n  const [isJoined, setIsJoined] = useState(false);\r\n  const [isRequested, setIsRequested] = useState(false);\r\n  // Add a local state to persist the requested state even if the API response doesn't include it\r\n  const [hasRequestedLocally, setHasRequestedLocally] = useState(false);\r\n  \r\n  // Effect to check if the user has requested to join or is already joined\r\n  useEffect(() => {\r\n    if (!item) return;\r\n    \r\n    // Get the user ID from localStorage or generate a default one\r\n    let userId = localStorage.getItem('userId');\r\n    \r\n    // If no userId exists, create a default one and store it\r\n    if (!userId) {\r\n      // Generate a simple unique ID (in a real app, this would be more robust)\r\n      userId = 'anonymous-' + Date.now().toString();\r\n      localStorage.setItem('userId', userId);\r\n      console.log('[EventDetailActions] Created default user ID:', userId);\r\n    }\r\n    \r\n    // Check localStorage for this specific event's request status\r\n    const eventKey = `requested_${item.id}`;\r\n    const hasRequestedInStorage = localStorage.getItem(eventKey) === 'true';\r\n    \r\n    // If we have a record in localStorage, update our local state\r\n    if (hasRequestedInStorage) {\r\n      console.log('[EventDetailActions] Found requested status in localStorage for event:', item.id);\r\n      setHasRequestedLocally(true);\r\n    }\r\n    \r\n    // First check if we've locally requested to join\r\n    if (hasRequestedLocally) {\r\n      console.log('[EventDetailActions] User has locally requested to join');\r\n      setIsRequested(true);\r\n      return; // Skip further checks if we've already locally requested\r\n    }\r\n    \r\n    // Then check if the item has isRequested flag directly set (from optimistic updates)\r\n    if (item.isRequested) {\r\n      console.log('[EventDetailActions] Item has isRequested flag set to true');\r\n      setIsRequested(true);\r\n      setHasRequestedLocally(true); // Also set our local flag\r\n    } else if (item.attendees && item.requests) {\r\n      // Check if user is in attendees\r\n      const joined = item.attendees.some(attendee => {\r\n        const attendeeId = attendee.userId?._id?.toString() || attendee.userId?.toString();\r\n        return attendeeId === userId;\r\n      });\r\n      \r\n      // Check if user has a pending request\r\n      const requested = item.requests.some(request => {\r\n        const requesterId = request.userId?._id?.toString() || request.userId?.toString();\r\n        return requesterId === userId && request.status === 'pending';\r\n      });\r\n      \r\n      console.log('[EventDetailActions] Participation status check:', {\r\n        userId,\r\n        attendees: item.attendees,\r\n        requests: item.requests,\r\n        joined,\r\n        requested,\r\n        itemIsRequested: item.isRequested,\r\n        hasRequestedLocally\r\n      });\r\n      \r\n      setIsJoined(joined);\r\n      // Use our local state as a fallback\r\n      setIsRequested(requested || item.isRequested || hasRequestedLocally);\r\n      \r\n      // If we detect a request in the backend data, update our local state too\r\n      if (requested) {\r\n        setHasRequestedLocally(true);\r\n      }\r\n    }\r\n  }, [item, item.isRequested, hasRequestedLocally]);\r\n  \r\n  // Determine the appropriate content label based on type\r\n  const getTypeLabel = () => {\r\n    switch (type) {\r\n      case 'tables':\r\n        return 'Table';\r\n      case 'events':\r\n        return 'Event';\r\n      case 'circles':\r\n        return 'Circle';\r\n      default:\r\n        return 'Item';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Recommendation Reason */}\r\n      {item.recommendation && (\r\n        <div className=\"bg-indigo-50 p-4 rounded-lg mb-6\">\r\n          <h3 className=\"font-medium text-indigo-800 mb-2\">Why We Recommend This</h3>\r\n          <p className=\"text-indigo-700\">{item.recommendation.reason}</p>\r\n          <div className=\"mt-2 bg-white rounded-full h-2\">\r\n            <div\r\n              className=\"bg-indigo-600 h-2 rounded-full\"\r\n              style={{ width: `${item.recommendation.score * 100}%` }}\r\n            ></div>\r\n          </div>\r\n          <p className=\"text-xs text-right mt-1 text-indigo-600\">\r\n            {Math.round(item.recommendation.score * 100)}% match\r\n          </p>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Type-specific details */}\r\n      {type === 'tables' && item.topic && (\r\n        <div className=\"mb-6\">\r\n          <h3 className=\"font-medium mb-2\">Discussion Topic</h3>\r\n          <p>{item.topic}</p>\r\n        </div>\r\n      )}\r\n      \r\n      {type === 'circles' && item.memberCount && (\r\n        <div className=\"mb-6\">\r\n          <h3 className=\"font-medium mb-2\">Members</h3>\r\n          <p>{item.memberCount} members</p>\r\n        </div>\r\n      )}\r\n      \r\n      {type === 'events' && item.price !== undefined && (\r\n        <div className=\"mb-6\">\r\n          <h3 className=\"font-medium mb-2\">Price</h3>\r\n          <p>{item.price === 0 ? 'Free' : `$${item.price}`}</p>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Action Button */}\r\n      <button\r\n        onClick={() => {\r\n          // If not already joined or requested, handle the action\r\n          if (!isJoined && !isRequested) {\r\n            // If user is authenticated, proceed with join request\r\n            if (isAuthenticated) {\r\n              // Immediately update both UI states before API call\r\n              setIsRequested(true);\r\n              setHasRequestedLocally(true); // Set our persistent local state\r\n              \r\n              // Store in localStorage for persistence across page reloads\r\n              const eventKey = `requested_${item.id}`;\r\n              localStorage.setItem(eventKey, 'true');\r\n            }\r\n            \r\n            // Then call the action handler (which will handle redirect to login if not authenticated)\r\n            handleMainAction();\r\n            console.log('[EventDetailActions] Request to join button clicked, isAuthenticated:', isAuthenticated);\r\n          }\r\n        }}\r\n        disabled={isJoined || isRequested || isActionLoading}\r\n        className={`w-full py-3 px-6 rounded-lg font-medium transition mt-4 ${isJoined \r\n          ? 'bg-green-600 text-white cursor-default' \r\n          : isRequested \r\n            ? 'bg-gray-400 text-white cursor-default' \r\n            : isActionLoading\r\n              ? 'bg-indigo-400 text-white cursor-wait'\r\n              : 'bg-indigo-600 hover:bg-indigo-700 text-white'}`}\r\n      >\r\n        {isJoined \r\n          ? 'Joined' \r\n          : isRequested \r\n            ? 'Requested' \r\n            : isActionLoading\r\n              ? 'Processing...'\r\n              : isAuthenticated \r\n                ? 'Request to Join' \r\n                : 'Login to Join'}\r\n      </button>\r\n      \r\n      {/* Share Button */}\r\n      <ShareButton item={item} type={type} />\r\n    </div>\r\n  );\r\n};\r\n\r\nEventDetailActions.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  handleMainAction: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n  isActionLoading: PropTypes.bool\r\n};\r\n\r\n// Share Button Component\r\nconst ShareButton = ({ item, type }) => {\r\n  const [copied, setCopied] = useState(false);\r\n  \r\n  // Get the current URL to share\r\n  const shareUrl = window.location.href;\r\n  \r\n  // Handle copy to clipboard\r\n  const handleCopyLink = () => {\r\n    navigator.clipboard.writeText(shareUrl)\r\n      .then(() => {\r\n        setCopied(true);\r\n        // Reset copied state after 2 seconds\r\n        setTimeout(() => setCopied(false), 2000);\r\n      })\r\n      .catch(err => {\r\n        console.error('Failed to copy: ', err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-6\">\r\n      <div className=\"text-center text-gray-600 mb-2\">\r\n        Share this {type === 'events' ? 'event' : type === 'tables' ? 'table' : 'circle'} with friends\r\n      </div>\r\n      <button\r\n        onClick={handleCopyLink}\r\n        className={`w-full flex items-center justify-center py-2.5 px-6 rounded-lg font-medium transition ${copied ? 'bg-green-100 text-green-700 border border-green-300' : 'bg-gray-100 hover:bg-gray-200 text-gray-700 border border-gray-300'}`}\r\n      >\r\n        {copied ? (\r\n          <>\r\n            <FaCheck className=\"mr-2\" />\r\n            Link Copied!\r\n          </>\r\n        ) : (\r\n          <>\r\n            <FaShare className=\"mr-2\" />\r\n            Copy Link\r\n          </>\r\n        )}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventDetailActions;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaArrowLeft } from 'react-icons/fa';\n\n/**\n * EventDetailLoading Component\n * \n * Following the Single Responsibility Principle:\n * This component is solely responsible for displaying the loading state\n */\nconst EventDetailLoading = ({ handleGoBack }) => {\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <button\n        onClick={handleGoBack}\n        className=\"flex items-center text-indigo-600 mb-6 hover:text-indigo-800 transition\"\n      >\n        <FaArrowLeft className=\"mr-2\" /> Back\n      </button>\n      <div className=\"animate-pulse space-y-6\">\n        <div className=\"bg-gray-200 h-64 w-full rounded-lg\"></div>\n        <div className=\"bg-gray-200 h-8 w-3/4 rounded\"></div>\n        <div className=\"bg-gray-200 h-4 w-full rounded\"></div>\n        <div className=\"bg-gray-200 h-4 w-full rounded\"></div>\n        <div className=\"bg-gray-200 h-4 w-2/3 rounded\"></div>\n      </div>\n    </div>\n  );\n};\n\nEventDetailLoading.propTypes = {\n  handleGoBack: PropTypes.func.isRequired\n};\n\nexport default EventDetailLoading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaArrowLeft } from 'react-icons/fa';\n\n/**\n * EventDetailError Component\n * \n * Following the Single Responsibility Principle:\n * This component is solely responsible for displaying error states\n */\nconst EventDetailError = ({ error, handleGoBack }) => {\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <button\n        onClick={handleGoBack}\n        className=\"flex items-center text-indigo-600 mb-6 hover:text-indigo-800 transition\"\n      >\n        <FaArrowLeft className=\"mr-2\" /> Back\n      </button>\n      <div className=\"text-center py-12\">\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Oops!</h2>\n        <p className=\"text-gray-600 mb-6\">{error}</p>\n        <button\n          onClick={handleGoBack}\n          className=\"px-6 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition\"\n        >\n          Go Back\n        </button>\n      </div>\n    </div>\n  );\n};\n\nEventDetailError.propTypes = {\n  error: PropTypes.string.isRequired,\n  handleGoBack: PropTypes.func.isRequired\n};\n\nexport default EventDetailError;\n","import React from 'react';\r\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\r\nimport { useEventDetail, useEventAction, useCancelEventAction } from '../hooks/queries/useEventDetailQueries';\r\nimport { useAuthStore } from '../stores/authStore';\r\n\r\n// Import the new modular components\r\nimport {\r\n  EventDetailLayout,\r\n  EventDetailLoading,\r\n  EventDetailError\r\n} from '../components/EventDetail';\r\n\r\n/**\r\n * EventDetailPage Component\r\n * \r\n * Displays detailed information about a specific event, table, or circle\r\n * Following Single Responsibility Principle & Composition Over Inheritance:\r\n * - This component handles routing and state management\r\n * - Data fetching is delegated to custom React Query hooks\r\n * - Optimistic updates are implemented for actions\r\n * - UI is delegated to specialized child components\r\n */\r\nconst EventDetailPage = (props) => {\r\n  const params = useParams();\r\n  // Use type from props (from PublicRoute/ProtectedRoute) if present, else from params\r\n  const type = props.type || params.type;\r\n  const id = params.id;\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  \r\n  // Check if user is authenticated\r\n  const isAuthenticated = useAuthStore(state => state.isAuthenticated);\r\n\r\n  // DEBUG: Log received props and resolved type/id\r\n  console.log('[EventDetailPage] received props:', props);\r\n  console.log('[EventDetailPage] resolved type:', type, 'id:', id);\r\n  \r\n  // Use React Query hook for data fetching\r\n  const { \r\n    data: item, \r\n    isLoading,\r\n    error\r\n  } = useEventDetail(type, id);\r\n\r\n  // DEBUG: Log the fetched item\r\n  console.log('[EventDetailPage] fetched item:', item);\r\n\r\n  \r\n  // Use React Query mutations for actions with optimistic updates\r\n  const eventAction = useEventAction(type);\r\n  const cancelEventAction = useCancelEventAction(type);\r\n\r\n  // Track the page we came from (always Explore now, as OnlyForYou was removed)\r\n  const isFromExplore = true;\r\n  \r\n  // Get the card element ID for scroll position restoration\r\n  const cardElementId = location.state?.cardElementId;\r\n\r\n  // Handle going back to previous page\r\n  const handleGoBack = () => {\r\n    // Navigate back to the explore page with scroll position information\r\n    navigate('/explore', { \r\n      state: { \r\n        scrollToElementId: cardElementId \r\n      } \r\n    });\r\n  };\r\n  \r\n  // Handle RSVP/Join/Apply action with optimistic updates\r\n  const handleMainAction = () => {\r\n    // If not authenticated, redirect to login\r\n    if (!isAuthenticated) {\r\n      navigate('/login', { state: { from: location } });\r\n      return;\r\n    }\r\n    \r\n    // Use 'join' for events to match our backend implementation\r\n    const action = type === 'events' ? 'join' : \r\n                   type === 'tables' ? 'join' : 'apply';\r\n    \r\n    console.log(`[EventDetailPage] Taking action: ${action} for ${type} with id ${id}`);\r\n    \r\n    // If already participated or requested, cancel the action\r\n    if ((type === 'events' && (item.isJoined || item.isRequested)) ||\r\n        (type === 'tables' && item.isJoined) ||\r\n        (type === 'circles' && item.isApplied)) {\r\n      \r\n      // Log the current status and raw data\r\n      console.log(`[EventDetailPage] Current status for ${type} with id ${id}:`, {\r\n        isJoined: item.isJoined,\r\n        isRequested: item.isRequested,\r\n        isApplied: item.isApplied,\r\n        attendees: item.attendees,\r\n        requests: item.requests\r\n      });\r\n      \r\n      cancelEventAction.mutate({ \r\n        id, \r\n        action \r\n      }, {\r\n        onSuccess: (data) => {\r\n          // Show success message (in a real app would use a toast notification)\r\n          console.log(data.message);\r\n        }\r\n      });\r\n      \r\n    } else {\r\n      // Otherwise, take the action\r\n      eventAction.mutate({ \r\n        id, \r\n        action \r\n      }, {\r\n        onSuccess: (data) => {\r\n          // Show success message (in a real app would use a toast notification)\r\n          console.log(data.message);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  // Loading state\r\n  if (isLoading) {\r\n    return <EventDetailLoading handleGoBack={handleGoBack} />;\r\n  }\r\n\r\n  // Error state\r\n  if (error) {\r\n    return <EventDetailError \r\n      error={error.message || \"Failed to load item details. Please try again later.\"} \r\n      handleGoBack={handleGoBack} \r\n    />;\r\n  }\r\n  \r\n  // No item found\r\n  if (!item) {\r\n    return <EventDetailError \r\n      error=\"Item not found. It may have been removed or you may have followed an invalid link.\" \r\n      handleGoBack={handleGoBack} \r\n    />;\r\n  }\r\n\r\n  return (\r\n    <EventDetailLayout\r\n      item={item}\r\n      type={type}\r\n      isFromExplore={isFromExplore}\r\n      handleGoBack={handleGoBack}\r\n      handleMainAction={handleMainAction}\r\n      isActionLoading={eventAction.isPending || cancelEventAction.isPending}\r\n      isAuthenticated={isAuthenticated}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EventDetailPage;\r\n","import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport eventDetailService from '../../services/eventDetailService';\nimport eventService from '../../services/eventService';\n\n/**\n * Custom hook for fetching event details\n * Following Single Responsibility Principle and Interface Segregation Principle\n * \n * @param {string} type - The type of item (events, tables, circles)\n * @param {string} id - The ID of the item\n * @param {Object} options - React Query options\n * @returns {Object} - React Query result object\n */\nexport const useEventDetail = (type, id, options = {}) => {\n  return useQuery({\n    queryKey: ['eventDetail', type, id],\n    queryFn: async () => {\n      // Use the real-time event service for events\n      // Note: The type from URL params is 'events' (plural) as defined in App.js routes\n      if (type === 'events' || type === 'event') {\n        try {\n          return await eventService.getEventById(id);\n        } catch (error) {\n          console.error('Error fetching event details:', error);\n          throw new Error('Failed to load event details. Please try again.');\n        }\n      } else {\n        // Use the existing service for other types\n        return eventDetailService.getItemDetails(type, id);\n      }\n    },\n    enabled: !!type && !!id,\n    ...options\n  });\n};\n\n/**\n * Custom hook for taking action on an event (RSVP, join, apply)\n * Includes optimistic updates for better UX\n * \n * @param {string} type - The type of item (events, tables, circles)\n * @param {Object} options - React Query options\n * @returns {Object} - React Query mutation object\n */\nexport const useEventAction = (type, options = {}) => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: ({ id, action }) => eventDetailService.takeAction(type, id, action),\n    \n    // When mutate is called:\n    onMutate: async ({ id, action }) => {\n      // Cancel any outgoing refetches to avoid overwriting optimistic update\n      await queryClient.cancelQueries({ queryKey: ['eventDetail', type, id] });\n      \n      // Snapshot the previous value\n      const previousData = queryClient.getQueryData(['eventDetail', type, id]);\n      \n      // Optimistically update the UI\n      queryClient.setQueryData(['eventDetail', type, id], old => {\n        if (!old) return old;\n        \n        // Create optimistic update based on action type\n        const newData = { ...old };\n        \n        if (action === 'rsvp') {\n          newData.isRsvpd = true;\n          newData.attendeeCount = (newData.attendeeCount || 0) + 1;\n        } else if (action === 'join') {\n          // For events, we should set isRequested to true instead of isJoined\n          // since joining an event requires approval\n          if (type === 'events') {\n            newData.isRequested = true;\n            // Don't change isJoined status as that happens after approval\n          } else {\n            // For tables, we can join directly\n            newData.isJoined = true;\n            newData.memberCount = (newData.memberCount || 0) + 1;\n          }\n        } else if (action === 'apply') {\n          newData.isApplied = true;\n        }\n        \n        return newData;\n      });\n      \n      // Return the snapshot to use in case of rollback\n      return { previousData };\n    },\n    \n    // If the mutation fails, use the snapshot to rollback\n    onError: (err, { id }, context) => {\n      if (context?.previousData) {\n        queryClient.setQueryData(['eventDetail', type, id], context.previousData);\n      }\n      console.error('Error taking action:', err);\n    },\n    \n    // Always refetch after mutation to ensure data is in sync\n    onSettled: (_, __, { id }) => {\n      queryClient.invalidateQueries({ queryKey: ['eventDetail', type, id] });\n    },\n    \n    ...options\n  });\n};\n\n/**\n * Custom hook for cancelling an action on an event (cancel RSVP, leave, withdraw)\n * Includes optimistic updates for better UX\n * \n * @param {string} type - The type of item (events, tables, circles)\n * @param {Object} options - React Query options\n * @returns {Object} - React Query mutation object\n */\nexport const useCancelEventAction = (type, options = {}) => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: ({ id, action }) => eventDetailService.cancelAction(type, id, action),\n    \n    // When mutate is called:\n    onMutate: async ({ id, action }) => {\n      // Cancel any outgoing refetches\n      await queryClient.cancelQueries({ queryKey: ['eventDetail', type, id] });\n      \n      // Snapshot the previous value\n      const previousData = queryClient.getQueryData(['eventDetail', type, id]);\n      \n      // Optimistically update the UI\n      queryClient.setQueryData(['eventDetail', type, id], old => {\n        if (!old) return old;\n        \n        // Create optimistic update based on action type\n        const newData = { ...old };\n        \n        if (action === 'rsvp') {\n          newData.isRsvpd = false;\n          newData.attendeeCount = Math.max(0, (newData.attendeeCount || 1) - 1);\n        } else if (action === 'join') {\n          // For events, we need to handle both isJoined and isRequested\n          if (type === 'events') {\n            // Reset both flags since we're cancelling any participation\n            newData.isJoined = false;\n            newData.isRequested = false;\n            // Only reduce member count if they were actually joined\n            if (old.isJoined) {\n              newData.memberCount = Math.max(0, (newData.memberCount || 1) - 1);\n            }\n          } else {\n            // For tables, just handle isJoined\n            newData.isJoined = false;\n            newData.memberCount = Math.max(0, (newData.memberCount || 1) - 1);\n          }\n        } else if (action === 'apply') {\n          newData.isApplied = false;\n        }\n        \n        return newData;\n      });\n      \n      // Return the snapshot for rollback\n      return { previousData };\n    },\n    \n    // If the mutation fails, use the snapshot to rollback\n    onError: (err, { id }, context) => {\n      if (context?.previousData) {\n        queryClient.setQueryData(['eventDetail', type, id], context.previousData);\n      }\n      console.error('Error cancelling action:', err);\n    },\n    \n    // Always refetch after mutation to ensure data is in sync\n    onSettled: (_, __, { id }) => {\n      queryClient.invalidateQueries({ queryKey: ['eventDetail', type, id] });\n    },\n    \n    ...options\n  });\n};\n"],"names":["personalizedEventsData","id","title","type","category","description","location","date","time","distance","rating","participants","maxParticipants","tags","image","host","name","verified","recommendation","reason","score","eventDetailService","getItemDetails","async","foundItem","Promise","resolve","setTimeout","tablesData","find","item","eventsData","circlesData","_objectSpread","itemType","Error","concat","error","takeAction","action","eventService","default","currentUser","useAuthStore","getState","user","userData","userId","_id","localStorage","getItem","fullName","result","joinEvent","success","message","data","isRequested","timestamp","Date","toISOString","_error$response$data","_error$response$data$","response","status","includes","slice","cancelAction","leaveEvent","_ref","isFromExplore","handleGoBack","handleMainAction","isAuthenticated","isActionLoading","navigate","useNavigate","_jsxs","className","children","_jsx","EventDetailHeader","EventDetailHero","organizer","onClick","hostData","state","from","returnTo","window","pathname","itemTitle","src","alt","onError","e","target","onerror","EventDetailInfo","EventDetailActions","FaArrowLeft","event_image","process","getTypeLabel","_item$place","_item$place2","_item$place3","_item$place3$coordina","_item$place4","_item$place4$coordina","_item$place5","FaCalendarAlt","FaClock","FaMapMarkerAlt","place","address","coordinates","latitude","longitude","href","rel","FaExternalLinkAlt","encodeURIComponent","attendees","FaUsers","length","map","tag","index","FaTag","ShareButton","_ref2","copied","setCopied","useState","shareUrl","handleCopyLink","navigator","clipboard","writeText","then","catch","err","_Fragment","FaCheck","FaShare","isJoined","setIsJoined","setIsRequested","hasRequestedLocally","setHasRequestedLocally","useEffect","now","toString","setItem","eventKey","requests","joined","some","attendee","_attendee$userId","_attendee$userId$_id","_attendee$userId2","requested","request","_request$userId","_request$userId$_id","_request$userId2","style","width","Math","round","topic","memberCount","undefined","price","disabled","props","_location$state","params","useParams","useLocation","isLoading","options","arguments","useQuery","queryKey","queryFn","getEventById","enabled","useEventDetail","eventAction","queryClient","useQueryClient","useMutation","mutationFn","onMutate","cancelQueries","previousData","getQueryData","setQueryData","old","newData","isRsvpd","attendeeCount","isApplied","_ref3","context","onSettled","_","__","_ref4","invalidateQueries","useEventAction","cancelEventAction","_ref5","_ref6","max","_ref7","_ref8","useCancelEventAction","cardElementId","scrollToElementId","EventDetailLoading","EventDetailError","EventDetailLayout","mutate","onSuccess","isPending"],"sourceRoot":""}