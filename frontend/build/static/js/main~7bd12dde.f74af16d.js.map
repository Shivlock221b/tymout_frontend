{"version":3,"file":"static/js/main~7bd12dde.f74af16d.js","mappings":"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","sources":["query/queryClient.js","shop/pages/TemplatePage.js","stores/middleware.js","shop/stores/categoryStore.js","shop/components/CategoryCard.js","shop/components/CategoryForm.js","shop/components/CategoryModal.js","shop/components/ConfirmDialog.js","shop/pages/CategoriesPage.js","services/googlePlacesService.js","shop/pages/FeedbackPage.js","shop/pages/InventoryPage.js","shop/components/CategoryScrollbar.js","shop/components/FeedbackButton.js","shop/components/ProductShopPage.js","shop/pages/ShopPage.js","shop/components/BusinessInfo.js","shop/pages/BusinessInfoPage.js","shop/router/ShopRouter.js","services/eventService.js","pages/ExplorePage.js","shop/pages/CatalogueEditPage.js","stores/authStore.js","services/profileService.js","services/exploreService.js","services/authService.js","shop/services/productService.js","shop/queries/productQueries.js","shop/services/categoryService.js","shop/queries/categoryQueries.js","services/eventImageService.js","shop/stores/shopStore.js","stores/hostStore.js","shop/components/ProductCard.js","shop/components/ProductForm.js","shop/components/ProductModal.js","shop/pages/ProductsPage.js","shop/pages/ShopEditPage.js"],"sourcesContent":["import { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\n\n// Create a client\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      staleTime: 60000, // 1 minute\n      cacheTime: 300000, // 5 minutes\n      retry: 1,\n    },\n  },\n});\n\nexport { queryClient, QueryClientProvider, ReactQueryDevtools };\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FaArrowLeft, FaPlus } from 'react-icons/fa';\nimport { useAuthStore } from '../../stores/authStore';\nimport { useShopByUserId } from '../stores/shopStore';\n\n/**\n * TemplatePage Component\n * \n * Single Responsibility: Provides interface for business owners to manage their templates\n */\nconst TemplatePage = () => {\n  const navigate = useNavigate();\n  const { user } = useAuthStore();\n  \n  // Fetch the shop data for the current user\n  const { \n    data: shopData, \n    isLoading, \n    error \n  } = useShopByUserId(user?._id);\n  \n  const handleBack = () => {\n    navigate('/shop/catalogue');\n  };\n  \n  // Render loading state\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n        <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n          <div className=\"flex items-center mb-6\">\n            <button \n              onClick={handleBack}\n              className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n              aria-label=\"Go back\"\n            >\n              <FaArrowLeft className=\"text-gray-600\" />\n            </button>\n            <h1 className=\"text-2xl font-bold\">Templates</h1>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            <div className=\"animate-pulse\">\n              <div className=\"h-8 bg-gray-200 rounded w-1/3 mb-6\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-full mb-4\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-full mb-4\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-8\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  // Render error state\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n        <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n          <div className=\"flex items-center mb-6\">\n            <button \n              onClick={handleBack}\n              className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n              aria-label=\"Go back\"\n            >\n              <FaArrowLeft className=\"text-gray-600\" />\n            </button>\n            <h1 className=\"text-2xl font-bold\">Templates</h1>\n          </div>\n          \n          <div className=\"bg-red-50 border-l-4 border-red-500 p-4 mb-6\">\n            <div className=\"flex\">\n              <p className=\"text-red-700\">\n                Error loading shop data: {error.message || 'Unable to load shop data'}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  // Render no shop state\n  if (!shopData) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n        <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n          <div className=\"flex items-center mb-6\">\n            <button \n              onClick={handleBack}\n              className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n              aria-label=\"Go back\"\n            >\n              <FaArrowLeft className=\"text-gray-600\" />\n            </button>\n            <h1 className=\"text-2xl font-bold\">Templates</h1>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow-md overflow-hidden p-6 text-center\">\n            <h2 className=\"text-xl font-semibold mb-2\">No Shop Found</h2>\n            <p className=\"text-gray-600 mb-6\">You need to set up your shop before you can manage your templates.</p>\n            \n            <button\n              onClick={() => navigate('/shop/edit')}\n              className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\n            >\n              Set Up Your Shop\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n      <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n        {/* Header */}\n        <div className=\"flex items-center mb-6\">\n          <button \n            onClick={handleBack}\n            className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n            aria-label=\"Go back\"\n          >\n            <FaArrowLeft className=\"text-gray-600\" />\n          </button>\n          <div>\n            <h1 className=\"text-2xl font-bold\">Templates</h1>\n            <p className=\"text-gray-600\">{shopData.name}</p>\n          </div>\n        </div>\n        \n        {/* Main Content */}\n        <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n          <div className=\"p-6\">\n            <div className=\"flex justify-between items-center mb-6\">\n              <h2 className=\"text-xl font-semibold\">Templates</h2>\n              <button\n                className=\"flex items-center px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\n              >\n                <FaPlus className=\"mr-2\" />\n                Create Template\n              </button>\n            </div>\n            \n            {/* Placeholder for templates */}\n            <div className=\"bg-gray-50 border border-dashed border-gray-300 rounded-lg p-8 text-center\">\n              <p className=\"text-gray-500 mb-4\">No templates created yet.</p>\n              <p className=\"text-gray-500\">Templates help you quickly create standardized products or services.</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TemplatePage;\n","import { persist } from 'zustand/middleware';\nimport { immer } from 'zustand/middleware/immer';\nimport { devtools } from 'zustand/middleware';\n\n/**\n * Creates a persisted store with Immer and Redux DevTools integration\n * @param {string} name - Unique name for the store (used for persistence and devtools)\n * @param {Function} createState - Function that defines the store's initial state and actions\n * @param {Object} options - Additional options for persist middleware\n * @returns {Function} - The created store\n */\nexport const createPersistedStore = (name, createState, options = {}) => {\n  return (set, get, api) => {\n    return devtools(\n      persist(\n        immer(createState),\n        {\n          name: `${name}-storage`,\n          getStorage: () => localStorage,\n          partialize: (state) => {\n            // Default behavior: exclude functions from persistence\n            const persistedState = {};\n            Object.keys(state).forEach((key) => {\n              if (typeof state[key] !== 'function') {\n                persistedState[key] = state[key];\n              }\n            });\n            return persistedState;\n          },\n          ...options\n        }\n      ),\n      { name }\n    )(set, get, api);\n  };\n};\n\n/**\n * Creates a store with Immer and Redux DevTools integration (no persistence)\n * @param {string} name - Unique name for the store (used for devtools)\n * @param {Function} createState - Function that defines the store's initial state and actions\n * @returns {Function} - The created store\n */\nexport const createStore = (name, createState) => {\n  return (set, get, api) => {\n    return devtools(\n      immer(createState),\n      { name }\n    )(set, get, api);\n  };\n};\n","import { create } from 'zustand';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport axios from 'axios';\n\n// API base URL from environment\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3008';\nconst CATEGORY_SERVICE_URL = `${API_URL}/api/shop/categories`;\n\n/**\n * Category API Service\n * Contains all API calls related to category functionality\n */\nconst categoryApiService = {\n  // Fetch categories by shop ID\n  fetchCategoriesByShopId: async (shopId) => {\n    try {\n      const response = await axios.get(`${CATEGORY_SERVICE_URL}/shop/${shopId}`);\n      return response.data;\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        // No categories found is a valid case\n        return [];\n      }\n      throw error;\n    }\n  },\n\n  // Fetch category by ID\n  fetchCategoryById: async (categoryId) => {\n    const response = await axios.get(`${CATEGORY_SERVICE_URL}/${categoryId}`);\n    return response.data;\n  },\n\n  // Create a new category\n  createCategory: async (categoryData) => {\n    const response = await axios.post(`${CATEGORY_SERVICE_URL}`, categoryData);\n    return response.data;\n  },\n\n  // Update an existing category\n  updateCategory: async ({ id, ...categoryData }) => {\n    const response = await axios.put(`${CATEGORY_SERVICE_URL}/${id}`, categoryData);\n    return response.data;\n  },\n\n  // Delete a category (soft delete)\n  deleteCategory: async (categoryId) => {\n    const response = await axios.delete(`${CATEGORY_SERVICE_URL}/${categoryId}`);\n    return response.data;\n  },\n\n  // Update display order for multiple categories\n  updateCategoriesOrder: async (categories) => {\n    const response = await axios.put(`${CATEGORY_SERVICE_URL}/order/batch`, { categories });\n    return response.data;\n  }\n};\n\n/**\n * Category Store\n * Manages category-related state and operations\n */\nexport const useCategoryStore = create((set, get) => ({\n  // Local state\n  categories: [],\n  currentCategory: null,\n  isLoading: false,\n  error: null,\n\n  // Actions\n  setCategories: (categories) => set({ categories }),\n  setCurrentCategory: (category) => set({ currentCategory: category }),\n  clearCurrentCategory: () => set({ currentCategory: null }),\n  \n  // API Methods that wrap React Query hooks\n  fetchCategoriesByShopId: async (shopId) => {\n    set({ isLoading: true, error: null });\n    try {\n      const data = await categoryApiService.fetchCategoriesByShopId(shopId);\n      set({ categories: data, isLoading: false });\n      return data;\n    } catch (error) {\n      set({ error: error.message, isLoading: false });\n      throw error;\n    }\n  }\n}));\n\n/**\n * React Query Hooks for Category Data\n */\n\n// Hook to fetch categories by shop ID\nexport const useCategoriesByShopId = (shopId) => {\n  return useQuery({\n    queryKey: ['categories', 'shop', shopId],\n    queryFn: () => categoryApiService.fetchCategoriesByShopId(shopId),\n    enabled: !!shopId,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n};\n\n// Hook to fetch a category by ID\nexport const useCategoryById = (categoryId) => {\n  return useQuery({\n    queryKey: ['category', categoryId],\n    queryFn: () => categoryApiService.fetchCategoryById(categoryId),\n    enabled: !!categoryId,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n};\n\n// Hook to create a category\nexport const useCreateCategory = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (categoryData) => categoryApiService.createCategory(categoryData),\n    onSuccess: (data, variables) => {\n      // Invalidate relevant queries\n      queryClient.invalidateQueries({ queryKey: ['categories', 'shop', variables.shopId] });\n      \n      // Update the cache with the new category\n      queryClient.setQueryData(['category', data._id], data);\n    }\n  });\n};\n\n// Hook to update a category\nexport const useUpdateCategory = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (categoryData) => categoryApiService.updateCategory(categoryData),\n    onSuccess: (data) => {\n      // Invalidate relevant queries\n      queryClient.invalidateQueries({ queryKey: ['categories', 'shop', data.shopId] });\n      queryClient.invalidateQueries({ queryKey: ['category', data._id] });\n      \n      // Update the cache with the updated category\n      queryClient.setQueryData(['category', data._id], data);\n    }\n  });\n};\n\n// Hook to delete a category\nexport const useDeleteCategory = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (categoryId) => categoryApiService.deleteCategory(categoryId),\n    onSuccess: (_, categoryId) => {\n      // Invalidate relevant queries\n      queryClient.invalidateQueries({ queryKey: ['categories'] });\n      \n      // Remove the category from the cache\n      queryClient.removeQueries({ queryKey: ['category', categoryId] });\n    }\n  });\n};\n\n// Hook to update categories order\nexport const useUpdateCategoriesOrder = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (categories) => categoryApiService.updateCategoriesOrder(categories),\n    onSuccess: (_, variables) => {\n      // Get the shopId from the first category in the array\n      const shopId = variables[0]?.shopId;\n      if (shopId) {\n        // Invalidate relevant queries\n        queryClient.invalidateQueries({ queryKey: ['categories', 'shop', shopId] });\n      } else {\n        // If no shopId is available, invalidate all category queries\n        queryClient.invalidateQueries({ queryKey: ['categories'] });\n      }\n    }\n  });\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaEdit, FaTrash } from 'react-icons/fa';\n\n/**\n * CategoryCard Component\n * \n * Single Responsibility: Displays a single category with actions\n */\nconst CategoryCard = ({ \n  category, \n  onEdit, \n  onDelete \n}) => {\n  return (\n    <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow\">\n      <div className=\"flex\">\n        {/* Category Image */}\n        {category.image ? (\n          <div className=\"w-24 h-24 flex-shrink-0\">\n            <img \n              src={category.image} \n              alt={category.name} \n              className=\"w-full h-full object-cover\"\n            />\n          </div>\n        ) : (\n          <div className=\"w-24 h-24 bg-gray-100 flex items-center justify-center flex-shrink-0\">\n            <span className=\"text-gray-400 text-xs text-center px-2\">No Image</span>\n          </div>\n        )}\n        \n        {/* Category Details */}\n        <div className=\"p-4 flex-grow flex flex-col justify-between\">\n          <div>\n            <h3 className=\"font-medium text-gray-900\">{category.name}</h3>\n            {category.description && (\n              <p className=\"text-sm text-gray-600 mt-1 line-clamp-2\">{category.description}</p>\n            )}\n          </div>\n          \n          {/* Display Order */}\n          <div className=\"mt-2\">\n            <span className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-gray-100 text-gray-800\">\n              Order: {category.displayOrder || 0}\n            </span>\n          </div>\n        </div>\n        \n        {/* Actions */}\n        <div className=\"p-4 flex flex-col justify-center space-y-2\">\n          <button\n            onClick={() => onEdit(category)}\n            className=\"p-2 text-indigo-600 hover:bg-indigo-50 rounded-full transition-colors\"\n            aria-label={`Edit ${category.name}`}\n          >\n            <FaEdit />\n          </button>\n          <button\n            onClick={() => onDelete(category)}\n            className=\"p-2 text-red-600 hover:bg-red-50 rounded-full transition-colors\"\n            aria-label={`Delete ${category.name}`}\n          >\n            <FaTrash />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCategoryCard.propTypes = {\n  category: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    image: PropTypes.string,\n    displayOrder: PropTypes.number\n  }).isRequired,\n  onEdit: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired\n};\n\nexport default CategoryCard;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { FaImage, FaTimes } from 'react-icons/fa';\n\n/**\n * CategoryForm Component\n * \n * Single Responsibility: Provides form for creating and editing categories\n */\nconst CategoryForm = ({ \n  category = null, \n  onSubmit, \n  onCancel, \n  isSubmitting = false \n}) => {\n  // Form state\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    image: '',\n    displayOrder: 0\n  });\n  \n  // Preview image state\n  const [imagePreview, setImagePreview] = useState('');\n  \n  // Initialize form with category data if editing\n  useEffect(() => {\n    if (category) {\n      setFormData({\n        name: category.name || '',\n        description: category.description || '',\n        image: category.image || '',\n        displayOrder: category.displayOrder || 0\n      });\n      \n      if (category.image) {\n        setImagePreview(category.image);\n      }\n    }\n  }, [category]);\n  \n  // Handle input changes\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  \n  // Handle image upload\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      // For now, we'll just create a local preview\n      // In a real app, you'd upload to a storage service\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        setImagePreview(event.target.result);\n        setFormData(prev => ({\n          ...prev,\n          image: event.target.result // In production, this would be a URL\n        }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  \n  // Clear image\n  const handleClearImage = () => {\n    setImagePreview('');\n    setFormData(prev => ({\n      ...prev,\n      image: ''\n    }));\n  };\n  \n  // Handle form submission\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(formData);\n  };\n  \n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      {/* Category Name */}\n      <div>\n        <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Category Name*\n        </label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          value={formData.name}\n          onChange={handleChange}\n          required\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n          placeholder=\"e.g., Electronics, Clothing, Services\"\n        />\n      </div>\n      \n      {/* Category Description */}\n      <div>\n        <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Description\n        </label>\n        <textarea\n          id=\"description\"\n          name=\"description\"\n          value={formData.description}\n          onChange={handleChange}\n          rows=\"3\"\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n          placeholder=\"Describe this category...\"\n        ></textarea>\n      </div>\n      \n      {/* Category Image */}\n      <div>\n        <label htmlFor=\"image\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Category Image\n        </label>\n        <div className=\"mt-1 flex items-center\">\n          {imagePreview ? (\n            <div className=\"relative\">\n              <img \n                src={imagePreview} \n                alt=\"Category preview\" \n                className=\"h-32 w-32 object-cover rounded-md\"\n              />\n              <button\n                type=\"button\"\n                onClick={handleClearImage}\n                className=\"absolute top-0 right-0 bg-red-500 text-white p-1 rounded-full\"\n                aria-label=\"Remove image\"\n              >\n                <FaTimes size={12} />\n              </button>\n            </div>\n          ) : (\n            <div className=\"flex items-center justify-center h-32 w-32 border-2 border-dashed border-gray-300 rounded-md\">\n              <label htmlFor=\"file-upload\" className=\"cursor-pointer\">\n                <div className=\"flex flex-col items-center\">\n                  <FaImage className=\"h-8 w-8 text-gray-400\" />\n                  <span className=\"mt-1 text-xs text-gray-500\">Upload image</span>\n                </div>\n                <input\n                  id=\"file-upload\"\n                  name=\"file-upload\"\n                  type=\"file\"\n                  accept=\"image/*\"\n                  onChange={handleImageChange}\n                  className=\"sr-only\"\n                />\n              </label>\n            </div>\n          )}\n        </div>\n        <p className=\"text-xs text-gray-500 mt-1\">\n          Recommended: Square image, at least 300x300px\n        </p>\n      </div>\n      \n      {/* Display Order */}\n      <div>\n        <label htmlFor=\"displayOrder\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Display Order\n        </label>\n        <input\n          type=\"number\"\n          id=\"displayOrder\"\n          name=\"displayOrder\"\n          value={formData.displayOrder}\n          onChange={handleChange}\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n          min=\"0\"\n        />\n        <p className=\"text-xs text-gray-500 mt-1\">\n          Lower numbers appear first\n        </p>\n      </div>\n      \n      {/* Form Actions */}\n      <div className=\"flex justify-end space-x-3 pt-4\">\n        <button\n          type=\"button\"\n          onClick={onCancel}\n          className=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n          disabled={isSubmitting}\n        >\n          Cancel\n        </button>\n        <button\n          type=\"submit\"\n          className=\"px-4 py-2 bg-indigo-600 text-white rounded-md text-sm font-medium hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n          disabled={isSubmitting}\n        >\n          {isSubmitting ? 'Saving...' : (category ? 'Update Category' : 'Create Category')}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nCategoryForm.propTypes = {\n  category: PropTypes.shape({\n    _id: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n    displayOrder: PropTypes.number\n  }),\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  isSubmitting: PropTypes.bool\n};\n\nexport default CategoryForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaTimes } from 'react-icons/fa';\nimport CategoryForm from './CategoryForm';\n\n/**\n * CategoryModal Component\n * \n * Single Responsibility: Provides a modal dialog for creating/editing categories\n */\nconst CategoryModal = ({ \n  isOpen, \n  onClose, \n  category = null, \n  onSubmit, \n  isSubmitting = false \n}) => {\n  if (!isOpen) return null;\n  \n  const handleSubmit = (formData) => {\n    // If we have a category, we're editing, otherwise creating\n    if (category) {\n      onSubmit({\n        ...formData,\n        id: category._id\n      });\n    } else {\n      onSubmit(formData);\n    }\n  };\n  \n  return (\n    <div className=\"fixed inset-0 z-50 overflow-y-auto\">\n      {/* Backdrop */}\n      <div \n        className=\"fixed inset-0 bg-black bg-opacity-50 transition-opacity\"\n        onClick={onClose}\n        aria-hidden=\"true\"\n      ></div>\n      \n      {/* Modal */}\n      <div className=\"flex items-center justify-center min-h-screen p-4\">\n        <div \n          className=\"bg-white rounded-lg shadow-xl max-w-md w-full mx-auto z-10 relative\"\n          onClick={e => e.stopPropagation()}\n        >\n          {/* Header */}\n          <div className=\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\">\n            <h3 className=\"text-lg font-medium text-gray-900\">\n              {category ? 'Edit Category' : 'Add New Category'}\n            </h3>\n            <button\n              onClick={onClose}\n              className=\"text-gray-400 hover:text-gray-500\"\n              aria-label=\"Close\"\n            >\n              <FaTimes />\n            </button>\n          </div>\n          \n          {/* Body */}\n          <div className=\"px-6 py-4\">\n            <CategoryForm\n              category={category}\n              onSubmit={handleSubmit}\n              onCancel={onClose}\n              isSubmitting={isSubmitting}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCategoryModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  category: PropTypes.object,\n  onSubmit: PropTypes.func.isRequired,\n  isSubmitting: PropTypes.bool\n};\n\nexport default CategoryModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaExclamationTriangle } from 'react-icons/fa';\n\n/**\n * ConfirmDialog Component\n * \n * Single Responsibility: Provides a confirmation dialog for destructive actions\n */\nconst ConfirmDialog = ({ \n  isOpen, \n  onClose, \n  onConfirm, \n  title = 'Confirm Action', \n  message = 'Are you sure you want to proceed?',\n  confirmText = 'Confirm',\n  cancelText = 'Cancel',\n  isProcessing = false,\n  type = 'danger' // 'danger', 'warning', 'info'\n}) => {\n  if (!isOpen) return null;\n  \n  // Determine color scheme based on type\n  const colorScheme = {\n    danger: {\n      icon: 'text-red-600',\n      button: 'bg-red-600 hover:bg-red-700',\n      border: 'border-red-300'\n    },\n    warning: {\n      icon: 'text-yellow-600',\n      button: 'bg-yellow-600 hover:bg-yellow-700',\n      border: 'border-yellow-300'\n    },\n    info: {\n      icon: 'text-blue-600',\n      button: 'bg-blue-600 hover:bg-blue-700',\n      border: 'border-blue-300'\n    }\n  }[type];\n  \n  return (\n    <div className=\"fixed inset-0 z-50 overflow-y-auto\">\n      {/* Backdrop */}\n      <div \n        className=\"fixed inset-0 bg-black bg-opacity-50 transition-opacity\"\n        onClick={onClose}\n        aria-hidden=\"true\"\n      ></div>\n      \n      {/* Dialog */}\n      <div className=\"flex items-center justify-center min-h-screen p-4\">\n        <div \n          className=\"bg-white rounded-lg shadow-xl max-w-md w-full mx-auto z-10 relative\"\n          onClick={e => e.stopPropagation()}\n        >\n          {/* Header */}\n          <div className=\"px-6 pt-6 pb-4 flex items-center\">\n            <div className={`mr-4 flex-shrink-0 ${colorScheme.icon}`}>\n              <FaExclamationTriangle size={24} />\n            </div>\n            <h3 className=\"text-lg font-medium text-gray-900\">\n              {title}\n            </h3>\n          </div>\n          \n          {/* Body */}\n          <div className=\"px-6 py-2\">\n            <p className=\"text-sm text-gray-600\">\n              {message}\n            </p>\n          </div>\n          \n          {/* Footer */}\n          <div className=\"px-6 py-4 bg-gray-50 rounded-b-lg flex justify-end space-x-3\">\n            <button\n              onClick={onClose}\n              className=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              disabled={isProcessing}\n            >\n              {cancelText}\n            </button>\n            <button\n              onClick={onConfirm}\n              className={`px-4 py-2 rounded-md text-sm font-medium text-white focus:outline-none focus:ring-2 focus:ring-offset-2 ${colorScheme.button}`}\n              disabled={isProcessing}\n            >\n              {isProcessing ? 'Processing...' : confirmText}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nConfirmDialog.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n  title: PropTypes.string,\n  message: PropTypes.string,\n  confirmText: PropTypes.string,\n  cancelText: PropTypes.string,\n  isProcessing: PropTypes.bool,\n  type: PropTypes.oneOf(['danger', 'warning', 'info'])\n};\n\nexport default ConfirmDialog;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FaArrowLeft, FaPlus } from 'react-icons/fa';\nimport { useAuthStore } from '../../stores/authStore';\nimport { useShopByUserId } from '../stores/shopStore';\nimport { useCategoriesByShopId, useCreateCategory, useUpdateCategory, useDeleteCategory } from '../stores/categoryStore';\nimport CategoryCard from '../components/CategoryCard';\nimport CategoryModal from '../components/CategoryModal';\nimport ConfirmDialog from '../components/ConfirmDialog';\n\n/**\n * CategoriesPage Component\n * \n * Single Responsibility: Provides interface for business owners to manage their product categories\n */\nconst CategoriesPage = () => {\n  const navigate = useNavigate();\n  const { user } = useAuthStore();\n  \n  // State for modals\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isConfirmDialogOpen, setIsConfirmDialogOpen] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [categoryToDelete, setCategoryToDelete] = useState(null);\n  \n  // Fetch the shop data for the current user\n  const { \n    data: shopData, \n    isLoading: shopLoading, \n    error: shopError \n  } = useShopByUserId(user?._id);\n  \n  // Fetch categories for the shop\n  const {\n    data: categories,\n    isLoading: categoriesLoading,\n    error: categoriesError\n  } = useCategoriesByShopId(shopData?._id);\n  \n  // Mutations for CRUD operations\n  const createCategory = useCreateCategory();\n  const updateCategory = useUpdateCategory();\n  const deleteCategory = useDeleteCategory();\n  \n  const handleBack = () => {\n    navigate('/shop/catalogue');\n  };\n  \n  // Handle opening the add/edit modal\n  const handleOpenModal = (category = null) => {\n    setSelectedCategory(category);\n    setIsModalOpen(true);\n  };\n  \n  // Handle closing the modal\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedCategory(null);\n  };\n  \n  // Handle form submission\n  const handleSubmitCategory = async (formData) => {\n    try {\n      if (selectedCategory) {\n        // Update existing category\n        await updateCategory.mutateAsync({\n          ...formData,\n          id: selectedCategory._id,\n          shopId: shopData._id\n        });\n      } else {\n        // Create new category\n        await createCategory.mutateAsync({\n          ...formData,\n          shopId: shopData._id\n        });\n      }\n      handleCloseModal();\n    } catch (error) {\n      console.error('Error saving category:', error);\n      // Error handling would be implemented here\n    }\n  };\n  \n  // Handle delete confirmation\n  const handleDeleteConfirm = (category) => {\n    setCategoryToDelete(category);\n    setIsConfirmDialogOpen(true);\n  };\n  \n  // Handle actual deletion\n  const handleDeleteCategory = async () => {\n    try {\n      await deleteCategory.mutateAsync(categoryToDelete._id);\n      setIsConfirmDialogOpen(false);\n      setCategoryToDelete(null);\n    } catch (error) {\n      console.error('Error deleting category:', error);\n      // Error handling would be implemented here\n    }\n  };\n  \n  // Render loading state\n  if (shopLoading || categoriesLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n        <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n          <div className=\"flex items-center mb-6\">\n            <button \n              onClick={handleBack}\n              className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n              aria-label=\"Go back\"\n            >\n              <FaArrowLeft className=\"text-gray-600\" />\n            </button>\n            <h1 className=\"text-2xl font-bold\">Categories</h1>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            <div className=\"animate-pulse\">\n              <div className=\"h-8 bg-gray-200 rounded w-1/3 mb-6\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-full mb-4\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-full mb-4\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-8\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  // Render error state\n  if (shopError || categoriesError) {\n    const error = shopError || categoriesError;\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n        <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n          <div className=\"flex items-center mb-6\">\n            <button \n              onClick={handleBack}\n              className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n              aria-label=\"Go back\"\n            >\n              <FaArrowLeft className=\"text-gray-600\" />\n            </button>\n            <h1 className=\"text-2xl font-bold\">Categories</h1>\n          </div>\n          \n          <div className=\"bg-red-50 border-l-4 border-red-500 p-4 mb-6\">\n            <div className=\"flex\">\n              <p className=\"text-red-700\">\n                Error loading shop data: {error.message || 'Unable to load shop data'}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  // Render no shop state\n  if (!shopData) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n        <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n          <div className=\"flex items-center mb-6\">\n            <button \n              onClick={handleBack}\n              className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n              aria-label=\"Go back\"\n            >\n              <FaArrowLeft className=\"text-gray-600\" />\n            </button>\n            <h1 className=\"text-2xl font-bold\">Categories</h1>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow-md overflow-hidden p-6 text-center\">\n            <h2 className=\"text-xl font-semibold mb-2\">No Shop Found</h2>\n            <p className=\"text-gray-600 mb-6\">You need to set up your shop before you can manage your categories.</p>\n            \n            <button\n              onClick={() => navigate('/shop/edit')}\n              className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\n            >\n              Set Up Your Shop\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  // Main render with modals\n  return (\n    <>\n      {/* Main content */}\n      <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n        <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n          {/* Header */}\n          <div className=\"flex items-center mb-6\">\n            <button \n              onClick={handleBack}\n              className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n              aria-label=\"Go back\"\n            >\n              <FaArrowLeft className=\"text-gray-600\" />\n            </button>\n            <div>\n              <h1 className=\"text-2xl font-bold\">Categories</h1>\n              <p className=\"text-gray-600\">{shopData.name}</p>\n            </div>\n          </div>\n          \n          {/* Main Content */}\n          <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n            <div className=\"p-6\">\n              <div className=\"flex justify-between items-center mb-6\">\n                <h2 className=\"text-xl font-semibold\">Categories</h2>\n                <button\n                  onClick={() => handleOpenModal()}\n                  className=\"flex items-center px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\n                >\n                  <FaPlus className=\"mr-2\" />\n                  Add Category\n                </button>\n              </div>\n              \n              {/* Categories list */}\n              {categories && categories.length > 0 ? (\n                <div className=\"space-y-4\">\n                  {categories.map(category => (\n                    <CategoryCard\n                      key={category._id}\n                      category={category}\n                      onEdit={() => handleOpenModal(category)}\n                      onDelete={() => handleDeleteConfirm(category)}\n                    />\n                  ))}\n                </div>\n              ) : (\n                <div className=\"bg-gray-50 border border-dashed border-gray-300 rounded-lg p-8 text-center\">\n                  <p className=\"text-gray-500 mb-4\">No categories created yet.</p>\n                  <p className=\"text-gray-500\">Categories help organize your products and services.</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Category Modal */}\n      <CategoryModal\n        isOpen={isModalOpen}\n        onClose={handleCloseModal}\n        category={selectedCategory}\n        onSubmit={handleSubmitCategory}\n        isSubmitting={createCategory.isPending || updateCategory.isPending}\n      />\n      \n      {/* Confirm Delete Dialog */}\n      <ConfirmDialog\n        isOpen={isConfirmDialogOpen}\n        onClose={() => setIsConfirmDialogOpen(false)}\n        onConfirm={handleDeleteCategory}\n        title=\"Delete Category\"\n        message={`Are you sure you want to delete the category \"${categoryToDelete?.name}\"? This action cannot be undone.`}\n        confirmText=\"Delete\"\n        cancelText=\"Cancel\"\n        isProcessing={deleteCategory.isPending}\n        type=\"danger\"\n      />\n    </>\n  );\n};\n\nexport default CategoriesPage;\n","/**\n * Google Places API Service\n * \n * Handles interactions with the Google Places API for place search and autocomplete\n */\n\nconst GOOGLE_API_KEY = process.env.REACT_APP_GOOGLE_API_KEY;\n\n// Load Google Maps JavaScript API script dynamically\nconst loadGoogleMapsScript = () => {\n  return new Promise((resolve, reject) => {\n    // Check if script is already loaded\n    if (window.google && window.google.maps) {\n      resolve(window.google);\n      return;\n    }\n    \n    // Create script element\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_API_KEY}&libraries=places`;\n    script.async = true;\n    script.defer = true;\n    \n    script.onload = () => {\n      if (window.google && window.google.maps) {\n        resolve(window.google);\n      } else {\n        reject(new Error('Google Maps script loaded but google.maps is not available'));\n      }\n    };\n    \n    script.onerror = () => {\n      reject(new Error('Failed to load Google Maps script'));\n    };\n    \n    document.head.appendChild(script);\n  });\n};\n\n/**\n * Search for places in a specific city\n * \n * @param {string} query - The search query\n * @param {string} city - The city to search in (e.g., 'Agra', 'Gurugram')\n * @returns {Promise<Array>} - Array of place results\n */\nexport const searchPlaces = async (query, city) => {\n  try {\n    if (!query || !city) return [];\n    \n    // Load Google Maps script if not already loaded\n    await loadGoogleMapsScript();\n    \n    return new Promise((resolve) => {\n      const service = new window.google.maps.places.PlacesService(document.createElement('div'));\n      \n      const request = {\n        query: `${query} in ${city}, India`,\n        fields: ['place_id', 'name', 'formatted_address', 'geometry', 'types'],\n      };\n      \n      service.textSearch(request, (results, status) => {\n        if (status === window.google.maps.places.PlacesServiceStatus.OK && results) {\n          // Transform the response to a simpler format\n          const formattedResults = results.map(result => ({\n            id: result.place_id,\n            name: result.name || 'Unknown Place',\n            address: result.formatted_address || '',\n            category: result.types?.[0] || '',\n            coordinates: {\n              latitude: result.geometry?.location.lat(),\n              longitude: result.geometry?.location.lng()\n            }\n          }));\n          resolve(formattedResults);\n        } else {\n          console.error('Google Places API error:', status);\n          resolve([]);\n        }\n      });\n    });\n  } catch (error) {\n    console.error('Error searching places:', error);\n    return [];\n  }\n};\n\n/**\n * Get place details by ID\n * \n * @param {string} placeId - The Google place ID\n * @returns {Promise<Object>} - Place details\n */\nexport const getPlaceDetails = async (placeId) => {\n  try {\n    if (!placeId) return null;\n    \n    // Load Google Maps script if not already loaded\n    await loadGoogleMapsScript();\n    \n    return new Promise((resolve) => {\n      const service = new window.google.maps.places.PlacesService(document.createElement('div'));\n      \n      const request = {\n        placeId: placeId,\n        fields: ['name', 'formatted_address', 'geometry', 'types', 'formatted_phone_number', 'website']\n      };\n      \n      service.getDetails(request, (result, status) => {\n        if (status === window.google.maps.places.PlacesServiceStatus.OK && result) {\n          resolve({\n            id: result.place_id,\n            name: result.name || 'Unknown Place',\n            address: result.formatted_address || '',\n            category: result.types?.[0] || '',\n            phone: result.formatted_phone_number || '',\n            url: result.website || '',\n            coordinates: {\n              latitude: result.geometry?.location.lat(),\n              longitude: result.geometry?.location.lng()\n            }\n          });\n        } else {\n          console.error('Google Places API error:', status);\n          resolve(null);\n        }\n      });\n    });\n  } catch (error) {\n    console.error('Error getting place details:', error);\n    return null;\n  }\n};\n\nexport default {\n  searchPlaces,\n  getPlaceDetails\n};\n","import React from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { FaArrowLeft, FaStar, FaSearch, FaInfoCircle } from 'react-icons/fa';\nimport { useShopById } from '../stores/shopStore';\n\n/**\n * FeedbackPage Component\n * \n * Single Responsibility: Display and collect feedback for a shop\n * This component handles:\n * 1. Displaying existing reviews for a shop\n * 2. Allowing users to submit new reviews (to be implemented)\n */\nconst FeedbackPage = () => {\n  const navigate = useNavigate();\n  const { shopId } = useParams();\n  \n  // Use the shop ID directly from the URL params with the correct hook\n  const { \n    data: shopData, \n    isLoading, \n    error \n  } = useShopById(shopId);\n  \n  const handleBack = () => {\n    navigate(-1);\n  };\n  \n  // We'll implement the reviews data fetching later\n  \n  \n\n  \n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n        <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n          <div className=\"flex items-center mb-6\">\n            <button \n              onClick={handleBack}\n              className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n              aria-label=\"Go back\"\n            >\n              <FaArrowLeft className=\"text-gray-600\" />\n            </button>\n            <h1 className=\"text-2xl font-bold\">Shop Feedback</h1>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            <div className=\"animate-pulse\">\n              <div className=\"h-8 bg-gray-200 rounded w-1/3 mb-6\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-full mb-2\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-full mb-2\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-6\"></div>\n              \n              <div className=\"h-24 bg-gray-200 rounded w-full mb-6\"></div>\n              \n              <div className=\"h-32 bg-gray-200 rounded w-full mb-4\"></div>\n              <div className=\"h-32 bg-gray-200 rounded w-full mb-4\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  if (error || !shopData) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n        <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n          <div className=\"flex items-center mb-6\">\n            <button \n              onClick={handleBack}\n              className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n              aria-label=\"Go back\"\n            >\n              <FaArrowLeft className=\"text-gray-600\" />\n            </button>\n            <h1 className=\"text-2xl font-bold\">Shop Feedback</h1>\n          </div>\n          \n          <div className=\"bg-red-50 border-l-4 border-red-500 p-4 mb-6\">\n            <div className=\"flex\">\n              <p className=\"text-red-700\">\n                {error ? `Error loading shop: ${error.message || 'Unable to load shop data'}` : 'Shop not found'}\n              </p>\n            </div>\n            <button \n              onClick={handleBack}\n              className=\"mt-3 px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700\"\n            >\n              Go Back\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n      <div className=\"container mx-auto px-4 py-4 max-w-4xl\">\n        {/* Header with back button and shop name */}\n        <div className=\"flex items-center justify-between mb-6\">\n          <button\n            onClick={handleBack}\n            className=\"p-2\"\n            aria-label=\"Go back\"\n          >\n            <FaArrowLeft className=\"text-gray-800 text-xl\" />\n          </button>\n          <h1 className=\"text-2xl font-bold text-center flex-grow\">\n            {isLoading ? 'Loading...' : shopData?.name || 'Shop Feedback'}\n          </h1>\n          <div className=\"w-8\"></div> {/* Empty div for balance */}\n        </div>\n        \n        {/* Rating Card */}\n        <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\n          <div className=\"flex justify-center\">\n            {/* Overall Rating */}\n            <div className=\"flex flex-col items-center\">\n              <div className=\"bg-green-600 text-white rounded-full px-4 py-1 mb-2 flex items-center\">\n                <span className=\"text-lg font-bold mr-1\">4.0</span>\n                <FaStar className=\"text-sm\" />\n              </div>\n              <div className=\"flex items-center text-gray-600 text-xs\">\n                <span>Overall rating (6.8K)</span>\n                <FaInfoCircle className=\"ml-1 text-gray-400 text-xs\" />\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        {/* Search Bar */}\n        <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\n          <div className=\"relative\">\n            <FaSearch className=\"absolute left-3 top-3 text-red-400\" />\n            <input \n              type=\"text\" \n              className=\"w-full pl-10 pr-4 py-2 border border-gray-200 rounded-lg\" \n              placeholder=\"Search within reviews\"\n            />\n          </div>\n        </div>\n        \n        {/* Filter Options */}\n        <div className=\"flex gap-2 mb-6 overflow-x-auto pb-2\">\n          <button className=\"flex items-center gap-1 px-2 py-0.5 border border-red-300 rounded-full text-red-500 text-xs\">\n            <span className=\"bg-red-500 text-white rounded-full w-3.5 h-3.5 flex items-center justify-center text-xs\">1</span>\n            <span>Filters</span>\n          </button>\n          \n          <button className=\"flex items-center gap-1 px-2 py-0.5 border border-gray-300 rounded-full text-xs\">\n            <span>High Rating</span>\n            <span>▼</span>\n          </button>\n          \n          <button className=\"px-2 py-0.5 border border-gray-300 rounded-full text-xs\">\n            Verified\n          </button>\n          \n          <button className=\"px-2 py-0.5 border border-gray-300 rounded-full whitespace-nowrap text-xs\">\n            With Photos\n          </button>\n        </div>\n        \n        {/* Reviews will be added here later */}\n        <div className=\"bg-white rounded-lg shadow-sm p-6 text-center text-gray-500\">\n          <p>Reviews will be implemented in the next phase</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FeedbackPage;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FaArrowLeft, FaPlus } from 'react-icons/fa';\nimport { useAuthStore } from '../../stores/authStore';\nimport { useShopByUserId } from '../stores/shopStore';\n\n/**\n * InventoryPage Component\n * \n * Single Responsibility: Provides interface for business owners to manage their inventory\n */\nconst InventoryPage = () => {\n  const navigate = useNavigate();\n  const { user } = useAuthStore();\n  \n  // Fetch the shop data for the current user\n  const { \n    data: shopData, \n    isLoading, \n    error \n  } = useShopByUserId(user?._id);\n  \n  const handleBack = () => {\n    navigate('/shop/catalogue');\n  };\n  \n  // Render loading state\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n        <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n          <div className=\"flex items-center mb-6\">\n            <button \n              onClick={handleBack}\n              className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n              aria-label=\"Go back\"\n            >\n              <FaArrowLeft className=\"text-gray-600\" />\n            </button>\n            <h1 className=\"text-2xl font-bold\">Inventory Management</h1>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            <div className=\"animate-pulse\">\n              <div className=\"h-8 bg-gray-200 rounded w-1/3 mb-6\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-full mb-4\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-full mb-4\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-8\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  // Render error state\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n        <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n          <div className=\"flex items-center mb-6\">\n            <button \n              onClick={handleBack}\n              className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n              aria-label=\"Go back\"\n            >\n              <FaArrowLeft className=\"text-gray-600\" />\n            </button>\n            <h1 className=\"text-2xl font-bold\">Inventory Management</h1>\n          </div>\n          \n          <div className=\"bg-red-50 border-l-4 border-red-500 p-4 mb-6\">\n            <div className=\"flex\">\n              <p className=\"text-red-700\">\n                Error loading shop data: {error.message || 'Unable to load shop data'}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  // Render no shop state\n  if (!shopData) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n        <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n          <div className=\"flex items-center mb-6\">\n            <button \n              onClick={handleBack}\n              className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n              aria-label=\"Go back\"\n            >\n              <FaArrowLeft className=\"text-gray-600\" />\n            </button>\n            <h1 className=\"text-2xl font-bold\">Inventory Management</h1>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow-md overflow-hidden p-6 text-center\">\n            <h2 className=\"text-xl font-semibold mb-2\">No Shop Found</h2>\n            <p className=\"text-gray-600 mb-6\">You need to set up your shop before you can manage your inventory.</p>\n            \n            <button\n              onClick={() => navigate('/shop/edit')}\n              className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\n            >\n              Set Up Your Shop\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n      <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n        {/* Header */}\n        <div className=\"flex items-center mb-6\">\n          <button \n            onClick={handleBack}\n            className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n            aria-label=\"Go back\"\n          >\n            <FaArrowLeft className=\"text-gray-600\" />\n          </button>\n          <div>\n            <h1 className=\"text-2xl font-bold\">Inventory Management</h1>\n            <p className=\"text-gray-600\">{shopData.name}</p>\n          </div>\n        </div>\n        \n        {/* Main Content */}\n        <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n          <div className=\"p-6\">\n            <div className=\"flex justify-between items-center mb-6\">\n              <h2 className=\"text-xl font-semibold\">Inventory Management</h2>\n              <button\n                className=\"flex items-center px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\n              >\n                <FaPlus className=\"mr-2\" />\n                Update Stock\n              </button>\n            </div>\n            \n            {/* Placeholder for inventory management */}\n            <div className=\"bg-gray-50 border border-dashed border-gray-300 rounded-lg p-8 text-center\">\n              <p className=\"text-gray-500 mb-4\">No inventory items to manage.</p>\n              <p className=\"text-gray-500\">Add products first to manage your inventory.</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InventoryPage;\n","import React, { useState, useEffect, useMemo, useRef } from 'react';\nimport { FaTag } from 'react-icons/fa';\nimport { useCategoriesByShopId } from '../queries/categoryQueries';\n\n/**\n * CategoryScrollbar Component\n * Displays a horizontally scrollable list of shop categories with selection functionality\n */\nconst CategoryScrollbar = ({ shopId, onCategorySelect }) => {\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  \n  // Fetch categories using React Query\n  const {\n    data: fetchedCategories,\n    isLoading: loading\n  } = useCategoriesByShopId(shopId);\n  \n  // Fallback categories if API fails\n  const mockCategories = useMemo(() => [\n    { _id: '1', name: 'Category A' },\n    { _id: '2', name: 'Category B' },\n    { _id: '3', name: 'Category C' },\n    { _id: '4', name: 'Category D' },\n    { _id: '5', name: 'Category E' },\n    { _id: '6', name: 'Category F' }\n  ], []);\n\n  // Ref for the scrollable container\n  const scrollRef = useRef(null);\n\n  // Use the fetched categories or fall back to mock data if none are available\n  const categories = useMemo(() => {\n    if (fetchedCategories && fetchedCategories.length > 0) {\n      return fetchedCategories;\n    }\n    return mockCategories;\n  }, [fetchedCategories, mockCategories]);\n\n  useEffect(() => {\n    const el = scrollRef.current;\n    if (!el) return;\n\n    const onWheel = (e) => {\n      // Only handle if the scroll area can scroll horizontally\n      const canScroll = el.scrollWidth > el.clientWidth;\n      if (!canScroll) return;\n      e.preventDefault();\n      // Prefer horizontal scroll, fallback to vertical\n      if (e.deltaY !== 0) {\n        el.scrollLeft += e.deltaY;\n      } else if (e.deltaX !== 0) {\n        el.scrollLeft += e.deltaX;\n      }\n    };\n\n    el.addEventListener('wheel', onWheel, { passive: false });\n    return () => el.removeEventListener('wheel', onWheel);\n  }, []);\n\n  const handleCategoryClick = (category) => {\n    setSelectedCategory(category._id);\n    if (onCategorySelect) {\n      onCategorySelect(category);\n    }\n  };\n  \n  // Reset selected category (All)\n  const handleResetSelection = () => {\n    setSelectedCategory(null);\n    if (onCategorySelect) {\n      onCategorySelect(null);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex overflow-x-auto py-2 no-scrollbar\">\n        {[1, 2, 3, 4].map(i => (\n          <div key={i} className=\"flex flex-col items-center min-w-[80px] mx-3 flex-shrink-0\">\n            <div className=\"w-[60px] h-[60px] rounded-full bg-gray-200 mb-2\"></div>\n            <div className=\"w-[50px] h-[8px] bg-gray-200 rounded\"></div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  if (!categories.length) return null;\n\n  return (\n    <div\n      ref={scrollRef}\n      className=\"flex overflow-x-auto py-3 no-scrollbar space-x-4\" \n    >\n      {/* \"All\" option */}\n      <div \n        className={`flex flex-col items-center min-w-[80px] cursor-pointer flex-shrink-0 ${\n          !selectedCategory ? 'opacity-100' : 'opacity-70 hover:opacity-100'\n        }`}\n        onClick={handleResetSelection}\n      >\n        <div className={`w-[60px] h-[60px] rounded-full flex items-center justify-center mb-2 ${\n          !selectedCategory ? 'bg-indigo-600 text-white' : 'bg-gray-100 text-gray-700'\n        }`}>\n          <span className=\"text-lg\">All</span>\n        </div>\n        <span className=\"text-xs text-center truncate w-full\">All Items</span>\n      </div>\n      \n      {categories.map(category => {\n        const isSelected = selectedCategory === category._id;\n        return (\n          <div \n            key={category._id} \n            onClick={() => handleCategoryClick(category)}\n            className={`flex flex-col items-center min-w-[80px] mx-3 flex-shrink-0 cursor-pointer transition-transform duration-200 hover:-translate-y-1`}\n          >\n            <div \n              className={`w-[60px] h-[60px] rounded-full bg-gray-100 flex items-center justify-center mb-2 shadow-sm transition-all duration-200 ${isSelected ? 'ring-2 ring-indigo-600 scale-105' : ''}`}\n            >\n              <FaTag className={`${isSelected ? 'text-indigo-600' : 'text-gray-500'}`} size={20} />\n            </div>\n            <span \n              className={`text-xs ${isSelected ? 'text-indigo-600 font-semibold' : 'text-gray-600'} text-center truncate max-w-[80px]`}\n            >\n              {category.name}\n            </span>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CategoryScrollbar;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FaStar } from 'react-icons/fa';\n\n/**\n * FeedbackButton Component\n * \n * Single Responsibility: Display a button that allows users to provide feedback for a shop\n * This component handles:\n * 1. Rendering a star icon with rating display\n * 2. Handling click events for the feedback action (to be implemented later)\n */\nconst FeedbackButton = ({ shopId, rating = 4.0, reviewCount = 0 }) => {\n  const navigate = useNavigate();\n  \n  const handleClick = () => {\n    // Make sure shopId is defined before navigating\n    if (shopId) {\n      navigate(`/shop/${shopId}/feedback`);\n    } else {\n      console.error('Shop ID is undefined');\n    }\n  };\n  // Format the rating to display with one decimal place\n  const formattedRating = parseFloat(rating).toFixed(1);\n  \n  // Format the review count (e.g., 6.8K+)\n  const formatReviewCount = (count) => {\n    if (count >= 1000) {\n      return `${(count / 1000).toFixed(1)}K+`;\n    }\n    return `${count}+`;\n  };\n  \n  return (\n    <button \n      onClick={handleClick} \n      className=\"flex items-center bg-green-100 text-green-800 rounded-full px-3 py-1 hover:bg-green-200 transition-colors\"\n      aria-label=\"View shop feedback\"\n    >\n      <FaStar className=\"text-green-600 mr-1\" />\n      <span className=\"font-bold\">{formattedRating}</span>\n      <span className=\"text-xs ml-2 text-gray-600\">\n        By {formatReviewCount(reviewCount)}\n      </span>\n    </button>\n  );\n};\n\nexport default FeedbackButton;\n","import React, { useState, useEffect } from 'react';\nimport { FaShoppingCart } from 'react-icons/fa';\nimport { useProductsByShopId } from '../queries/productQueries';\nimport { useCategoriesByShopId } from '../queries/categoryQueries';\n\n/**\n * ProductShopPage Component\n * \n * Single Responsibility: Display products organized by categories for shop customers\n */\nconst ProductShopPage = ({ shopId, selectedCategoryId }) => {\n  const [groupedProducts, setGroupedProducts] = useState({});\n  \n  // Fetch products for the shop with optional category filtering\n  const {\n    data: products,\n    isLoading: productsLoading,\n    error: productsError\n  } = useProductsByShopId(shopId, selectedCategoryId);\n  \n  // Fetch categories for the shop\n  const {\n    data: categories,\n    isLoading: categoriesLoading,\n    error: categoriesError\n  } = useCategoriesByShopId(shopId);\n  \n  // Group products by category\n  useEffect(() => {\n    if (products && products.length > 0) {\n      console.log('Products received:', products);\n      console.log('Selected category ID:', selectedCategoryId);\n      \n      const grouped = products.reduce((acc, product) => {\n        // Skip products that aren't active\n        if (!product.isActive) return acc;\n        \n        // For products without a category, use \"Uncategorized\"\n        // Check both possible category ID field names (categoryId or category)\n        const categoryId = product.categoryId || product.category || 'uncategorized';\n        console.log('Product:', product.name, 'Category ID:', categoryId);\n        \n        if (!acc[categoryId]) {\n          acc[categoryId] = [];\n        }\n        \n        acc[categoryId].push(product);\n        return acc;\n      }, {});\n      \n      console.log('Grouped products:', grouped);\n      setGroupedProducts(grouped);\n    }\n  }, [products, selectedCategoryId]);\n  \n  // Format price display\n  const formatPrice = (price) => {\n    return new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 2\n    }).format(price);\n  };\n  \n  // Get category name by ID\n  const getCategoryName = (categoryId) => {\n    if (categoryId === 'uncategorized') return 'Uncategorized';\n    const category = categories?.find(cat => cat._id === categoryId);\n    return category ? category.name : '';\n  };\n  \n  // Display loading state\n  if (productsLoading || categoriesLoading) {\n    return (\n      <div className=\"py-6\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-8 bg-gray-200 rounded w-1/3 mb-6\"></div>\n          <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n            {[1, 2, 3, 4].map(i => (\n              <div key={i} className=\"bg-gray-100 rounded-lg h-48\"></div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  // Display error state\n  if (productsError || categoriesError) {\n    return (\n      <div className=\"py-6\">\n        <div className=\"bg-red-50 border-l-4 border-red-500 p-4 mb-6\">\n          <p className=\"text-red-700\">\n            Error loading products. Please try again later.\n          </p>\n        </div>\n      </div>\n    );\n  }\n  \n  // If no products available\n  if (!products || products.length === 0) {\n    return (\n      <div className=\"py-6\">\n        <p className=\"text-gray-500 text-center py-8\">\n          No products available at this time.\n        </p>\n      </div>\n    );\n  }\n  \n  // Show all products if 'All' is selected (null selectedCategoryId)\n  \n  // Filter categories to display based on selection\n  let categoriesToDisplay = Object.keys(groupedProducts);\n  if (selectedCategoryId) {\n    // Some products might have categoryId field instead of category field\n    // We also handle products that might have the category stored as an object {_id: '123'}\n    console.log('Filtering by category ID:', selectedCategoryId);\n    console.log('Available category IDs in products:', categoriesToDisplay);\n    \n    // Make sure we have a string comparison and check for both possible category field names\n    categoriesToDisplay = categoriesToDisplay.filter(id => {\n      return id === selectedCategoryId || \n             id === String(selectedCategoryId) ||\n             // Sometimes the ID might be nested in a stored object reference\n             (id && id._id && (id._id === selectedCategoryId || id._id === String(selectedCategoryId)));\n    });\n    \n    // If no results after filtering, something went wrong with the category field matching\n    if (categoriesToDisplay.length === 0) {\n      console.warn('No matching products found for category ID:', selectedCategoryId);\n      // Fall back to all categories if the filtering doesn't match anything\n      categoriesToDisplay = Object.keys(groupedProducts);\n    }\n  }\n  \n  return (\n    <div className=\"py-6\">\n      {/* Products by Category */}\n      <div className=\"space-y-8\">\n        {categoriesToDisplay.map(categoryId => (\n          <div key={categoryId}>\n            {getCategoryName(categoryId) && (\n              <h3 className=\"text-xl font-semibold mb-4 text-gray-800\">\n                {getCategoryName(categoryId)}\n              </h3>\n            )}\n            \n            <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n              {groupedProducts[categoryId].map(product => (\n                <div \n                  key={product._id} \n                  className=\"bg-white rounded-lg shadow-sm overflow-hidden border border-gray-200 hover:shadow-md transition-shadow\"\n                >\n                  {/* Product Image */}\n                  <div className=\"h-40 overflow-hidden bg-gray-100\">\n                    {product.images && product.images.length > 0 ? (\n                      <img \n                        src={product.images[0]} \n                        alt={product.name}\n                        className=\"w-full h-full object-cover\"\n                        onError={(e) => {\n                          e.target.onerror = null;\n                          e.target.src = \"https://via.placeholder.com/300?text=Product\";\n                        }}\n                      />\n                    ) : (\n                      <div className=\"w-full h-full flex items-center justify-center bg-gray-100 text-gray-400\">\n                        No Image\n                      </div>\n                    )}\n                  </div>\n                  \n                  {/* Product Info */}\n                  <div className=\"p-3\">\n                    <h4 className=\"font-medium text-gray-800 line-clamp-1\">\n                      {product.name}\n                    </h4>\n                    \n                    {product.description && (\n                      <p className=\"text-gray-600 text-sm mt-1 line-clamp-2\">\n                        {product.description}\n                      </p>\n                    )}\n                    \n                    <div className=\"mt-2 flex justify-between items-center\">\n                      <div>\n                        {product.discountPrice ? (\n                          <div className=\"flex flex-col\">\n                            <span className=\"font-semibold text-indigo-600\">\n                              {formatPrice(product.discountPrice)}\n                            </span>\n                            <span className=\"text-xs text-gray-500 line-through\">\n                              {formatPrice(product.price)}\n                            </span>\n                          </div>\n                        ) : (\n                          <span className=\"font-semibold text-indigo-600\">\n                            {formatPrice(product.price)}\n                          </span>\n                        )}\n                      </div>\n                      \n                      <button \n                        className=\"p-2 rounded-full text-indigo-600 hover:bg-indigo-50 transition-colors\"\n                        aria-label=\"Add to cart\"\n                      >\n                        <FaShoppingCart />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ProductShopPage;","import React, { useRef, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { FaArrowLeft, FaStore, FaEdit, FaInfoCircle } from 'react-icons/fa';\nimport { useShopByUserId } from '../stores/shopStore';\nimport { useAuthStore } from '../../stores/authStore';\nimport CategoryScrollbar from '../components/CategoryScrollbar';\nimport FeedbackButton from '../components/FeedbackButton';\nimport ProductShopPage from '../components/ProductShopPage';\nimport { Link } from 'react-router-dom';\n/**\n * ShopPage Component\n * \n * Single Responsibility: Display shop information to users\n * This component handles:\n * 1. Fetching and displaying shop data\n * 2. Showing shop name, photo, and description at the top\n * 3. Providing navigation to edit the shop (for shop owners)\n */\nconst ShopPage = () => {\n  const navigate = useNavigate();\n  const { shopId } = useParams(); // Get the userId from URL params if available\n  const { user } = useAuthStore();\n  const productsRef = useRef(null);\n  \n  // Determine which user's shop to display\n  const targetUserId = shopId || user?._id;\n  \n  // Use React Query to fetch shop data for the target user\n  const { \n    data: shopData, \n    isLoading, \n    error,\n    refetch \n  } = useShopByUserId(targetUserId);\n  \n  // Check if the current user is the owner of this shop\n  const isOwner = user && shopData && user._id === shopData.ownerId;\n  \n  const handleBack = () => {\n    navigate(-1);\n  };\n  \n  const handleEdit = () => {\n    navigate('/shop/edit');\n  };\n  \n  // Component state\n  const [selectedCategory, setSelectedCategory] = useState(null);\n\n  // Handle category selection\n  const handleCategorySelect = (category) => {\n    console.log('Category selected in ShopPage:', category);\n    setSelectedCategory(category);\n    // Scroll to products section\n    if (productsRef.current) {\n      window.scrollTo({\n        top: productsRef.current.offsetTop - 20,\n        behavior: 'smooth'\n      });\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n        <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n          <div className=\"flex items-center mb-6\">\n            <button \n              onClick={handleBack}\n              className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n              aria-label=\"Go back\"\n            >\n              <FaArrowLeft className=\"text-gray-600\" />\n            </button>\n            <h1 className=\"text-2xl font-bold\">Shop</h1>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow-md overflow-hidden mb-8\">\n            <div className=\"animate-pulse\">\n              {/* Banner placeholder */}\n              <div className=\"h-48 bg-gray-200 w-full\"></div>\n              \n              <div className=\"p-6\">\n                {/* Shop name placeholder */}\n                <div className=\"h-8 bg-gray-200 rounded w-1/3 mb-4\"></div>\n                \n                {/* Description placeholder */}\n                <div className=\"h-4 bg-gray-200 rounded w-full mb-2\"></div>\n                <div className=\"h-4 bg-gray-200 rounded w-full mb-2\"></div>\n                <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-4\"></div>\n                \n                {/* Contact info placeholder */}\n                <div className=\"h-4 bg-gray-200 rounded w-1/2 mb-2\"></div>\n                <div className=\"h-4 bg-gray-200 rounded w-1/2 mb-2\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n        <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n          <div className=\"flex items-center mb-6\">\n            <button \n              onClick={handleBack}\n              className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n              aria-label=\"Go back\"\n            >\n              <FaArrowLeft className=\"text-gray-600\" />\n            </button>\n            <h1 className=\"text-2xl font-bold\">Shop</h1>\n          </div>\n          \n          <div className=\"bg-red-50 border-l-4 border-red-500 p-4 mb-6\">\n            <div className=\"flex\">\n              <p className=\"text-red-700\">\n                Error loading shop: {error.message || 'Unable to load shop data'}\n              </p>\n            </div>\n            <button \n              onClick={() => refetch()}\n              className=\"mt-3 px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700\"\n            >\n              Try Again\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  if (!shopData) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n        <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n          <div className=\"flex items-center mb-6\">\n            <button \n              onClick={handleBack}\n              className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n              aria-label=\"Go back\"\n            >\n              <FaArrowLeft className=\"text-gray-600\" />\n            </button>\n            <h1 className=\"text-2xl font-bold\">Shop</h1>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow-md overflow-hidden p-6 text-center\">\n            <FaStore className=\"mx-auto text-gray-300 text-5xl mb-4\" />\n            <h2 className=\"text-xl font-semibold mb-2\">Shop Not Found</h2>\n            <p className=\"text-gray-600 mb-6\">The shop you're looking for doesn't exist or has been removed.</p>\n            \n            <button\n              onClick={() => navigate('/explore')}\n              className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\n            >\n              Explore Shops\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n      <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n        {/* Back Button */}\n        <button\n          onClick={handleBack}\n          className=\"flex items-center text-indigo-600 hover:text-indigo-800 mb-6 group\"\n        >\n          <FaArrowLeft className=\"mr-2 group-hover:-translate-x-1 transition-transform duration-200\" />\n          <span>Back</span>\n        </button>\n        \n        {/* Shop Header */}\n        <div className=\"bg-white mb-8\">\n          \n          <div>\n            <div className=\"flex flex-col md:flex-row md:items-center justify-between mb-4\">\n              <div className=\"flex items-center\">\n                {shopData.logo && (\n                  <div className=\"mr-4 flex-shrink-0\">\n                    <img \n                      src={shopData.logo} \n                      alt={`${shopData.name} logo`}\n                      className=\"w-16 h-16 object-cover rounded-full border-2 border-white shadow\"\n                      onError={(e) => {\n                        e.target.onerror = null;\n                        e.target.src = 'https://via.placeholder.com/150?text=Logo';\n                      }}\n                    />\n                  </div>\n                )}\n                <div className=\"flex flex-col\">\n                  <div className=\"flex items-center gap-3\">\n                    <h1 className=\"text-2xl font-bold text-gray-800\">\n                      {shopData.name}\n                    </h1>\n                    <FeedbackButton \n                      shopId={shopData._id}\n                      rating={shopData.rating || 4.0} \n                      reviewCount={shopData.reviewCount || 6800} \n                    />\n                  </div>\n                  {/* Business Information Link - Directly Below Name */}\n                  <div className=\"mt-2 mb-1\">\n                    <Link \n                      to={`/shop/${shopData._id}/business-info`}\n                      className=\"inline-flex items-center gap-2 px-3 py-1.5 bg-gray-50 border border-gray-200 text-gray-700 rounded-md hover:bg-gray-100 transition-colors text-sm\"\n                    >\n                      <FaInfoCircle className=\"text-indigo-600\" size={16} />\n                      <span>Business Information</span>\n                    </Link>\n                  </div>\n                </div>\n              </div>\n              \n              {isOwner && (\n                <button\n                  onClick={handleEdit}\n                  className=\"mt-4 md:mt-0 flex items-center px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\n                >\n                  <FaEdit className=\"mr-2\" />\n                  Edit Shop\n                </button>\n              )}\n            </div>\n            \n\n            \n            {/* Shop Category */}\n            {shopData.category && (\n              <div className=\"mb-4\">\n                <span className=\"inline-block bg-indigo-100 text-indigo-800 text-sm px-3 py-1 rounded-full\">\n                  {shopData.category}\n                </span>\n              </div>\n            )}\n            \n            {/* Shop Description */}\n            <p className=\"text-gray-600 mb-6\" style={{ whiteSpace: 'pre-wrap' }}>\n              {shopData.description}\n            </p>\n            \n            {/* Categories Section */}\n            <div className=\"mt-6\">\n              <CategoryScrollbar shopId={shopData._id} onCategorySelect={handleCategorySelect} />\n            </div>\n\n            {/* Products Section */}\n            <div ref={productsRef} className=\"mt-8\">\n              <ProductShopPage \n                shopId={shopData._id} \n                selectedCategoryId={selectedCategory ? selectedCategory._id : null} \n              />\n            </div>\n\n\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ShopPage;","import React from 'react';\nimport { FaMapMarkerAlt, FaPhone, FaEnvelope } from 'react-icons/fa';\n\n/**\n * BusinessInfo Component\n * \n * Single Responsibility: Display business contact information for a shop\n * This component handles:\n * 1. Displaying shop address, phone, and email\n * 2. Providing a consistent layout for business information\n */\nconst BusinessInfo = ({ shopData }) => {\n  if (!shopData) {\n    return null;\n  }\n  \n  return (\n    <div className=\"border-t border-gray-200 pt-4 mt-4\" id=\"business-info\">\n      <h2 className=\"text-lg font-semibold mb-2\">Contact Information</h2>\n      <div className=\"space-y-2\">\n        {shopData.address && (\n          <div className=\"flex items-center text-gray-600\">\n            <FaMapMarkerAlt className=\"mr-2 text-indigo-600\" />\n            <span>{shopData.address}</span>\n          </div>\n        )}\n        \n        {shopData.contactPhone && (\n          <div className=\"flex items-center text-gray-600\">\n            <FaPhone className=\"mr-2 text-indigo-600\" />\n            <span>{shopData.contactPhone}</span>\n          </div>\n        )}\n        \n        {shopData.contactEmail && (\n          <div className=\"flex items-center text-gray-600\">\n            <FaEnvelope className=\"mr-2 text-indigo-600\" />\n            <span>{shopData.contactEmail}</span>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default BusinessInfo;\n","import React from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { FaArrowLeft } from 'react-icons/fa';\nimport { useShopById } from '../stores/shopStore';\nimport BusinessInfo from '../components/BusinessInfo';\n\n/**\n * BusinessInfoPage Component\n * \n * Displays detailed business information and additional components\n * in a dedicated page rather than embedded in ShopPage\n */\nconst BusinessInfoPage = () => {\n  const navigate = useNavigate();\n  const { shopId } = useParams();\n  \n  // Use React Query to fetch shop data directly by shop ID\n  const { \n    data: shopData,\n    isLoading,\n    isError,\n    error\n  } = useShopById(shopId);\n  \n  // Handle navigation back\n  const handleBack = () => {\n    navigate(-1);\n  };\n  \n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n        <div className=\"p-4 bg-white shadow-sm\">\n          <button \n            onClick={handleBack}\n            className=\"p-2 rounded-full hover:bg-gray-100 transition-colors\"\n            aria-label=\"Back\"\n          >\n            <FaArrowLeft />\n          </button>\n        </div>\n        <div className=\"flex-1 flex items-center justify-center\">\n          <div className=\"animate-pulse\">\n            <div className=\"h-8 bg-gray-200 rounded w-48 mb-4\"></div>\n            <div className=\"h-4 bg-gray-200 rounded w-64 mb-2.5\"></div>\n            <div className=\"h-4 bg-gray-200 rounded w-56 mb-2.5\"></div>\n            <div className=\"h-4 bg-gray-200 rounded w-72\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  if (isError) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n        <div className=\"p-4 bg-white shadow-sm\">\n          <button \n            onClick={handleBack}\n            className=\"p-2 rounded-full hover:bg-gray-100 transition-colors\"\n            aria-label=\"Back\"\n          >\n            <FaArrowLeft />\n          </button>\n        </div>\n        <div className=\"flex-1 flex items-center justify-center\">\n          <div className=\"text-center p-6\">\n            <h2 className=\"text-lg font-medium text-red-600 mb-2\">Error Loading Business Information</h2>\n            <p className=\"text-gray-600\">{error?.message || 'Could not load business details'}</p>\n            <button \n              onClick={handleBack}\n              className=\"mt-4 px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\n            >\n              Go Back\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  if (!shopData) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n        <div className=\"p-4 bg-white shadow-sm\">\n          <button \n            onClick={handleBack}\n            className=\"p-2 rounded-full hover:bg-gray-100 transition-colors\"\n            aria-label=\"Back\"\n          >\n            <FaArrowLeft />\n          </button>\n        </div>\n        <div className=\"flex-1 flex items-center justify-center\">\n          <div className=\"text-center p-6\">\n            <h2 className=\"text-lg font-medium text-gray-800 mb-2\">No Business Found</h2>\n            <p className=\"text-gray-600\">Could not find business information.</p>\n            <button \n              onClick={handleBack}\n              className=\"mt-4 px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\n            >\n              Go Back\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n      {/* Header */}\n      <div className=\"p-4 bg-white shadow-sm flex items-center justify-between\">\n        <button \n          onClick={handleBack}\n          className=\"p-2 rounded-full hover:bg-gray-100 transition-colors\"\n          aria-label=\"Back\"\n        >\n          <FaArrowLeft />\n        </button>\n        <h1 className=\"text-xl font-semibold\">Business Information</h1>\n        <div className=\"w-10\"></div> {/* Spacer for balance */}\n      </div>\n      \n      {/* Main Content */}\n      <div className=\"flex-1 p-4\">\n        <div className=\"max-w-2xl mx-auto\">\n          {/* Main Business Info */}\n          <div className=\"bg-white rounded-lg shadow-sm overflow-hidden mb-6\">\n            <BusinessInfo shopData={shopData} />\n          </div>\n          \n          {/* Location Map */}\n          <div className=\"bg-white rounded-lg shadow-sm overflow-hidden mb-6\">\n            <div className=\"p-6\">\n              <h2 className=\"text-lg font-medium text-gray-800 mb-4 flex items-center\">\n                <svg className=\"w-5 h-5 mr-2 text-indigo-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                </svg>\n                Location\n              </h2>\n              \n              {/* Map placeholder - in a real app, integrate with Google Maps or similar */}\n              <div className=\"bg-gray-100 rounded-lg w-full h-48 mb-3 flex items-center justify-center\">\n                {shopData.location ? (\n                  <div className=\"text-center\">\n                    <p className=\"text-gray-500\">Interactive map would be displayed here</p>\n                    <p className=\"text-gray-700 mt-2 font-medium\">{shopData.location}</p>\n                  </div>\n                ) : (\n                  <p className=\"text-gray-500\">No location information available</p>\n                )}\n              </div>\n              \n              {shopData.address && (\n                <div className=\"flex items-start mt-4\">\n                  <svg className=\"w-5 h-5 text-gray-500 mt-0.5 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\n                  </svg>\n                  <span className=\"text-gray-700\">{shopData.address}</span>\n                </div>\n              )}\n            </div>\n          </div>\n          \n          {/* Business Hours */}\n          <div className=\"bg-white rounded-lg shadow-sm overflow-hidden mb-6\">\n            <div className=\"p-6\">\n              <h2 className=\"text-lg font-medium text-gray-800 mb-4 flex items-center\">\n                <svg className=\"w-5 h-5 mr-2 text-indigo-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                Business Hours\n              </h2>\n              \n              {shopData.businessHours ? (\n                <div className=\"space-y-2\">\n                  {/* Sample business hours - in a real app, parse from shopData */}\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600\">Monday - Friday</span>\n                    <span className=\"text-gray-800 font-medium\">9:00 AM - 6:00 PM</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600\">Saturday</span>\n                    <span className=\"text-gray-800 font-medium\">10:00 AM - 4:00 PM</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600\">Sunday</span>\n                    <span className=\"text-gray-800 font-medium\">Closed</span>\n                  </div>\n                </div>\n              ) : (\n                <p className=\"text-gray-500\">Business hours not specified</p>\n              )}\n            </div>\n          </div>\n          \n          {/* Social Media & External Links */}\n          <div className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\n            <div className=\"p-6\">\n              <h2 className=\"text-lg font-medium text-gray-800 mb-4 flex items-center\">\n                <svg className=\"w-5 h-5 mr-2 text-indigo-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1\" />\n                </svg>\n                Connect\n              </h2>\n              \n              <div className=\"grid grid-cols-2 gap-4\">\n                {/* Social media links */}\n                {shopData.website && (\n                  <a \n                    href={shopData.website} \n                    target=\"_blank\" \n                    rel=\"noopener noreferrer\"\n                    className=\"flex items-center p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors\"\n                  >\n                    <svg className=\"w-5 h-5 text-indigo-600 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9\" />\n                    </svg>\n                    <span>Website</span>\n                  </a>\n                )}\n                \n                {/* More social links would be added based on business data */}\n                <a \n                  href=\"https://github.com\" \n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"flex items-center p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors\"\n                >\n                  <svg className=\"w-5 h-5 text-indigo-600 mr-3\" fill=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M12 2C6.477 2 2 6.477 2 12c0 4.42 2.865 8.166 6.84 9.49.5.09.68-.22.68-.48v-1.69c-2.782.6-3.37-1.34-3.37-1.34-.454-1.16-1.11-1.47-1.11-1.47-.91-.62.07-.61.07-.61 1 .07 1.53 1.03 1.53 1.03.9 1.52 2.34 1.08 2.91.83.09-.65.35-1.09.63-1.34-2.22-.25-4.55-1.11-4.55-4.94 0-1.09.39-1.98 1.03-2.68-.1-.25-.45-1.28.1-2.66 0 0 .84-.27 2.75 1.02.8-.22 1.65-.33 2.5-.33.85 0 1.7.11 2.5.33 1.91-1.29 2.75-1.02 2.75-1.02.55 1.38.2 2.41.1 2.66.64.7 1.03 1.59 1.03 2.68 0 3.84-2.34 4.68-4.57 4.93.36.31.68.92.68 1.85v2.74c0 .27.18.58.69.48A10.02 10.02 0 0022 12C22 6.477 17.523 2 12 2z\" />\n                  </svg>\n                  <span>GitHub</span>\n                </a>\n                \n                <a \n                  href=\"https://facebook.com\" \n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"flex items-center p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors\"\n                >\n                  <svg className=\"w-5 h-5 text-indigo-600 mr-3\" fill=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M22.675 0H1.325C.593 0 0 .593 0 1.325v21.351C0 23.407.593 24 1.325 24H12.82v-9.294H9.692v-3.622h3.128V8.413c0-3.1 1.893-4.788 4.659-4.788 1.325 0 2.463.099 2.795.143v3.24l-1.918.001c-1.504 0-1.795.715-1.795 1.763v2.313h3.587l-.467 3.622h-3.12V24h6.116c.73 0 1.323-.593 1.323-1.325V1.325C24 .593 23.407 0 22.675 0z\" />\n                  </svg>\n                  <span>Facebook</span>\n                </a>\n                \n                <a \n                  href=\"https://instagram.com\" \n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"flex items-center p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors\"\n                >\n                  <svg className=\"w-5 h-5 text-indigo-600 mr-3\" fill=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zM12 0C8.741 0 8.333.014 7.053.072 2.695.272.273 2.69.073 7.052.014 8.333 0 8.741 0 12c0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98C8.333 23.986 8.741 24 12 24c3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98C15.668.014 15.259 0 12 0zm0 5.838a6.162 6.162 0 100 12.324 6.162 6.162 0 000-12.324zM12 16a4 4 0 110-8 4 4 0 010 8zm6.406-11.845a1.44 1.44 0 100 2.881 1.44 1.44 0 000-2.881z\" />\n                  </svg>\n                  <span>Instagram</span>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BusinessInfoPage;\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport ShopPage from '../pages/ShopPage';\nimport ShopEditPage from '../pages/ShopEditPage';\nimport BusinessInfoPage from '../pages/BusinessInfoPage';\nimport ProductsPage from '../pages/ProductsPage';\n\n/**\n * ShopRouter Component\n * \n * Manages all shop-related routes in a centralized location.\n * This follows the Convention over Configuration principle from our guidelines\n * by using consistent route naming and organization.\n */\nconst ShopRouter = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<ShopPage />} />\n      <Route path=\"/edit\" element={<ShopEditPage />} />\n      <Route path=\"/:shopId\" element={<ShopPage />} />\n      <Route path=\"/:shopId/business-info\" element={<BusinessInfoPage />} />\n      <Route path=\"/products\" element={<ProductsPage />} />\n    </Routes>\n  );\n};\n\nexport default ShopRouter;\n","/**\r\n * Event Service\r\n * \r\n * Following Single Responsibility Principle:\r\n * - This service is responsible for all event-related API calls\r\n * - Each function handles a specific operation related to events\r\n */\r\nimport axios from 'axios';\r\nimport { useAuthStore } from '../stores/authStore';\r\n\r\nconst eventService = {\r\n  /**\r\n   * Get event details by ID\r\n   * @param {string} eventId - Event ID\r\n   * @returns {Promise<Object>} Event details\r\n   */\r\n  getEventById: async (eventId) => {\r\n    try {\r\n      console.log('[eventService] Fetching event by ID:', eventId);\r\n      \r\n      // Get current user ID from token if available or use localStorage as fallback\r\n      const token = localStorage.getItem('token');\r\n      let currentUserId = localStorage.getItem('userId'); // Fallback to localStorage userId\r\n      \r\n      if (token && !currentUserId) {\r\n        try {\r\n          // Parse JWT token to get user ID\r\n          const base64Url = token.split('.')[1];\r\n          const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n          const payload = JSON.parse(window.atob(base64));\r\n          currentUserId = payload.id;\r\n        } catch (e) {\r\n          console.error('[eventService] Error parsing token:', e);\r\n        }\r\n      }\r\n      \r\n      console.log('[eventService] Current user ID:', currentUserId);\r\n      \r\n      // Directly call event-service backend (bypassing API gateway)\r\n      const response = await axios.get(`${process.env.REACT_APP_EVENT_SERVICE_URL || 'http://localhost:3002'}/events/${eventId}`);\r\n      console.log('[eventService] Backend response:', response.data);\r\n      \r\n      // The backend returns { success: true, data: event }\r\n      // Transform the response to match frontend expectations\r\n      const event = response.data.data;\r\n      \r\n      if (!event) {\r\n        throw new Error(`Event not found: ${eventId}`);\r\n      }\r\n      \r\n      // Format date from MongoDB date object to string\r\n      const startDate = event.date?.start ? new Date(event.date.start) : new Date();\r\n      const formattedDate = startDate.toLocaleDateString('en-US', { \r\n        year: 'numeric', month: 'short', day: 'numeric' \r\n      });\r\n      \r\n      // Format location from object to string\r\n      const locationStr = event.location?.city || 'Unknown Location';\r\n      \r\n      // Check if the current user has joined or requested to join this event\r\n      let isJoined = false;\r\n      let isRequested = false;\r\n      \r\n      // Store userId in localStorage for consistency\r\n      if (currentUserId) {\r\n        localStorage.setItem('userId', currentUserId);\r\n        \r\n        console.log('[eventService] Raw event data:', {\r\n          attendees: event.attendees,\r\n          requests: event.requests\r\n        });\r\n        \r\n        // Check if user is in the attendees list\r\n        isJoined = event.attendees?.some(attendee => {\r\n          const attendeeId = attendee.userId?._id?.toString() || attendee.userId?.toString();\r\n          const match = attendeeId === currentUserId;\r\n          console.log('[eventService] Comparing attendee:', { attendeeId, currentUserId, match });\r\n          return match;\r\n        });\r\n        \r\n        // Check if user has a pending request\r\n        isRequested = event.requests?.some(request => {\r\n          const requesterId = request.userId?._id?.toString() || request.userId?.toString();\r\n          const statusMatch = request.status === 'pending';\r\n          const idMatch = requesterId === currentUserId;\r\n          console.log('[eventService] Comparing request:', { \r\n            requesterId, \r\n            currentUserId, \r\n            status: request.status,\r\n            idMatch,\r\n            statusMatch,\r\n            fullMatch: idMatch && statusMatch\r\n          });\r\n          return idMatch && statusMatch;\r\n        });\r\n        \r\n        console.log('[eventService] FINAL User participation status:', { \r\n          currentUserId,\r\n          isJoined, \r\n          isRequested \r\n        });\r\n      }\r\n      \r\n      // Return the transformed event\r\n      return {\r\n        ...event,\r\n        id: event._id, // Add id field based on MongoDB's _id\r\n        type: event.type || 'event',\r\n        image: event.image || null,\r\n        location: locationStr,\r\n        date: formattedDate,\r\n        participants: event.attendees?.length || 0,\r\n        maxParticipants: event.capacity || event.maxAttendees || 10,\r\n        tags: event.tags || [],\r\n        isJoined,\r\n        isRequested,\r\n        host: {\r\n          id: event.host?.userId || 'unknown',\r\n          name: event.host?.name || 'Anonymous Host',\r\n          image: `https://ui-avatars.com/api/?name=${encodeURIComponent(event.host?.name || 'User')}&background=random&color=fff&size=128`\r\n        }\r\n      };\r\n    } catch (error) {\r\n      console.error('[eventService] Error fetching event details:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Join an event\r\n   * @param {string} eventId - Event ID\r\n   * @param {Object} userData - User data\r\n   * @returns {Promise<Object>} Updated event\r\n   */\r\n  joinEvent: async (eventId, userData) => {\r\n    try {\r\n      // Get current user from auth store if available\r\n      const authState = useAuthStore.getState();\r\n      const currentUser = authState.user;\r\n      \r\n      // Ensure we have a consistent user ID\r\n      const userId = currentUser?._id || localStorage.getItem('userId') || userData.userId || '1';\r\n      // Store it for future use\r\n      localStorage.setItem('userId', userId);\r\n      \r\n      // Get user's name from auth store if available\r\n      const userName = currentUser?.name || currentUser?.fullName || userData.name || 'Anonymous User';\r\n      \r\n      // Update userData with consistent ID and name\r\n      const updatedUserData = {\r\n        ...userData,\r\n        userId: userId,\r\n        name: userName\r\n      };\r\n      \r\n      console.log('[eventService] Requesting to join event:', { eventId, userData: updatedUserData });\r\n      console.log('[eventService] Making POST request to:', `http://localhost:3002/events/${eventId}/join`);\r\n      \r\n      // Add authorization header if available\r\n      const token = localStorage.getItem('token');\r\n      const headers = {};\r\n      if (token) {\r\n        headers['Authorization'] = `Bearer ${token}`;\r\n        console.log('[eventService] Added authorization header');\r\n      } else {\r\n        console.log('[eventService] No token found, request will be unauthorized');\r\n      }\r\n      \r\n      // Make the API request\r\n      const response = await axios.post(`${process.env.REACT_APP_EVENT_SERVICE_URL || 'http://localhost:3002'}/events/${eventId}/join`, updatedUserData, { headers });\r\n      console.log('[eventService] Join event response:', response.data);\r\n      \r\n      // Handle the case where we get a 400 error because we've already requested\r\n      // In this case, we still want to show the \"Requested\" state in the UI\r\n      const updatedEvent = response.data.data;\r\n      \r\n      // Force the isRequested flag to be true regardless of the response\r\n      // This ensures the UI shows the correct state even if there's an error\r\n      return {\r\n        ...updatedEvent,\r\n        isRequested: true // Explicitly mark as requested\r\n      };\r\n    } catch (error) {\r\n      // Check if the error is because we've already requested to join\r\n      if (error.response && \r\n          error.response.status === 400 && \r\n          error.response.data.error.includes('already requested')) {\r\n        console.log('[eventService] User has already requested to join this event');\r\n        // Return an object with isRequested set to true to maintain UI state\r\n        return {\r\n          id: eventId,\r\n          isRequested: true\r\n        };\r\n      }\r\n      \r\n      console.error(`[eventService] Error joining event:`, error.response ? error.response.data : error.message);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Leave an event\r\n   * @param {string} eventId - Event ID\r\n   * @param {string} userId - User ID\r\n   * @returns {Promise<Object>} Updated event\r\n   */\r\n  leaveEvent: async (eventId, userId) => {\r\n    try {\r\n      console.log('[eventService] Leaving event:', { eventId, userId });\r\n      console.log('[eventService] Making POST request to:', `http://localhost:3002/events/${eventId}/leave`);\r\n      \r\n      // Add authorization header if available\r\n      const token = localStorage.getItem('token');\r\n      const headers = {};\r\n      if (token) {\r\n        headers['Authorization'] = `Bearer ${token}`;\r\n        console.log('[eventService] Added authorization header');\r\n      } else {\r\n        console.log('[eventService] No token found, request will be unauthorized');\r\n      }\r\n      \r\n      const response = await axios.post(`${process.env.REACT_APP_EVENT_SERVICE_URL || 'http://localhost:3002'}/events/${eventId}/leave`, { userId }, { headers });\r\n      console.log('[eventService] Leave event response:', response.data);\r\n      return response.data.data;\r\n    } catch (error) {\r\n      console.error(`[eventService] Error leaving event:`, error.response ? error.response.data : error.message);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Submit feedback for an event\r\n   * @param {string} eventId - Event ID\r\n   * @param {Object} feedbackData - Feedback data (hostRating, eventRating, comment)\r\n   * @returns {Promise<Object>} Updated event\r\n   */\r\n  submitFeedback: async (eventId, feedbackData) => {\r\n    try {\r\n      console.log('[eventService] Submitting feedback for event:', { eventId, feedbackData });\r\n      console.log('[eventService] Making POST request to:', `http://localhost:3002/events/${eventId}/feedback`);\r\n      \r\n      // Add authorization header if available\r\n      const token = localStorage.getItem('token');\r\n      const headers = {};\r\n      if (token) {\r\n        headers['Authorization'] = `Bearer ${token}`;\r\n        console.log('[eventService] Added authorization header');\r\n      } else {\r\n        console.log('[eventService] No token found, request will be unauthorized');\r\n      }\r\n      \r\n      const response = await axios.post(`${process.env.REACT_APP_EVENT_SERVICE_URL || 'http://localhost:3002'}/events/${eventId}/feedback`, feedbackData, { headers });\r\n      console.log('[eventService] Submit feedback response:', response.data);\r\n      return response.data.data;\r\n    } catch (error) {\r\n      console.error(`[eventService] Error submitting feedback:`, error.response ? error.response.data : error.message);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default eventService;\r\n","import React, { useEffect, useRef, useState, lazy, Suspense } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\n\nimport { useExploreSearch } from '../hooks/queries/useExploreQueries';\nimport { useUserData } from '../hooks/stores/useAuthStoreHooks';\n\n// Import critical components directly\nimport ExploreSearch from '../components/explore/ExploreSearch';\n\n// Lazy load non-critical components\nconst ExploreResults = lazy(() => import('../components/explore/ExploreResults'));\nconst TagFilter = lazy(() => import('../components/explore/TagFilter'));\nconst CitySelector = lazy(() => import('../components/explore/CitySelector'));\nconst SpotlightEvents = lazy(() => import('../components/explore/SpotlightEvents'));\n\n/**\n * ExplorePage Component\n * \n * Following Single Responsibility Principle:\n * - This component handles the layout and state management for Explore page\n * - Data fetching logic is delegated to custom React Query hooks\n * - UI state is managed with URL query parameters\n * - Display logic is delegated to specialized components\n */\nconst ExplorePage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const { user } = useUserData();\n  const pageRef = useRef(null);\n  \n  // State for user interests\n  const [userInterests, setUserInterests] = useState([]);\n\n  // Extract filter parameters from URL\n  const searchQuery = searchParams.get('q') || '';\n  const selectedTags = searchParams.getAll('tag');\n  const activeSpecialTag = searchParams.get('view') || 'Explore';\n  const timeFilter = searchParams.get('timeFilter') || 'all';\n  const distance = parseInt(searchParams.get('distance') || '10', 10);\n  const sortBy = searchParams.get('sort') || 'relevance';\n  const [selectedCity, setSelectedCity] = useState(searchParams.get('city') || 'Agra');\n  const location = useLocation();\n  \n  // Fetch user interests when component mounts\n  useEffect(() => {\n    const fetchUserInterests = async () => {\n      if (user && user._id) {\n        try {\n          console.log('Fetching user interests for user:', user._id);\n          // Use the user's interests directly from the user object if available\n          if (user.interests && Array.isArray(user.interests) && user.interests.length > 0) {\n            setUserInterests(user.interests);\n            console.log('Using interests from user object:', user.interests);\n          }\n        } catch (error) {\n          console.error('Error fetching user interests:', error);\n          // Set some default interests if we can't fetch the user's interests\n          setUserInterests(['Food', 'Tech', 'Networking']);\n        }\n      } else {\n        console.log('No user logged in or missing user ID');\n      }\n    };\n    \n    fetchUserInterests();\n  }, [user]);\n  \n  // Use React Query hook for data fetching with filters from URL parameters\n  const { \n    data: results = [], \n    isLoading, \n    updateFilters \n  } = useExploreSearch({\n    query: searchQuery,\n    tags: selectedTags,\n    distance,\n    sortBy,\n    city: selectedCity, // Include the city parameter in the initial filters\n    view: activeSpecialTag, // Include the view parameter for special tags\n    userInterests: activeSpecialTag === 'Only For You' ? userInterests : [], // Include user interests if 'Only For You' is selected\n    timeFilter: timeFilter // Include the time filter parameter\n  });\n  \n  // Handle city selection coming back from CitySelectPage\n  useEffect(() => {\n    if (location.state && location.state.selectedCity) {\n      // Update the selected city when returning from city select page\n      const newCity = location.state.selectedCity;\n      setSelectedCity(newCity);\n      \n      // Update URL parameters\n      const newParams = new URLSearchParams(searchParams);\n      newParams.set('city', newCity);\n      setSearchParams(newParams);\n      \n      // Update filters with new city\n      updateFilters({ city: newCity });\n      \n      // Clear the location state to prevent reapplying on future rerenders\n      window.history.replaceState({}, document.title);\n    }\n  }, [location.state, searchParams, setSearchParams, updateFilters]);\n\n  // Update URL parameters and trigger data fetch when search changes\n  const handleSearch = (query) => {\n    const newParams = new URLSearchParams(searchParams);\n    if (query) {\n      newParams.set('q', query);\n    } else {\n      newParams.delete('q');\n    }\n    setSearchParams(newParams);\n    \n    // Pre-fetch data with new query\n    updateFilters({ query });\n  };\n  \n  // Handle city change\n  const handleCityChange = (city) => {\n    setSelectedCity(city);\n    const newParams = new URLSearchParams(searchParams);\n    newParams.set('city', city);\n    setSearchParams(newParams);\n    \n    // Update filters with new city\n    updateFilters({ city });\n  };\n\n  // Update URL parameters and trigger data fetch when tags change\n  const handleTagSelect = (tags) => {\n    // Update URL parameters\n    const newParams = new URLSearchParams(searchParams);\n    \n    // Remove existing tag parameters\n    newParams.delete('tag');\n    \n    // Add new tag parameters\n    tags.forEach(tag => {\n      newParams.append('tag', tag);\n    });\n    \n    // Clear the 'view' parameter if it was set to 'Only For You'\n    if (activeSpecialTag === 'Only For You') {\n      newParams.delete('view');\n    }\n    \n    setSearchParams(newParams);\n    \n    // Pre-fetch data with new tags\n    updateFilters({ tags, city: selectedCity }); // Include city in filter update\n  };\n  \n  // Apply time filter (All, Today, This Week)\n  const handleTimeFilterChange = (filter) => {\n    const newParams = new URLSearchParams(searchParams);\n    newParams.set('timeFilter', filter);\n    setSearchParams(newParams);\n    \n    // Update filters with new time filter\n    updateFilters({ timeFilter: filter });\n  };\n\n  // Note: Time-based filtering is now handled directly in the exploreService\n\n  // Handle special tag selection (Only For You and All)\n  const handleSpecialTagSelect = (tag) => {\n    if (tag === 'Only For You' || tag === 'All') {\n      // Clear any selected tags\n      const newParams = new URLSearchParams(searchParams);\n      newParams.delete('tag');\n      newParams.set('view', tag);\n      setSearchParams(newParams);\n      \n      if (tag === 'Only For You') {\n        // For 'Only For You', pass user interests to the backend\n        console.log('Filtering by user interests:', userInterests);\n        updateFilters({ \n          view: tag, \n          userInterests: userInterests.length > 0 ? userInterests : ['Food', 'Tech', 'Networking'], \n          city: selectedCity,\n          tags: [] // Clear any category filters\n        });\n      } else if (tag === 'All') {\n        // For 'All', don't apply any tag filters\n        console.log('Showing all events without tag filters');\n        updateFilters({ \n          view: tag,\n          city: selectedCity,\n          tags: [] // Clear any category filters\n        });\n      }\n    }\n  };\n\n  // State for tag scroll animation control\n  const [hasAutoScrolled, setHasAutoScrolled] = useState(false);\n  const tagScrollRef = useRef(null);\n  \n  // Auto-scroll the tag container once on initial render\n  useEffect(() => {\n    if (!hasAutoScrolled && tagScrollRef.current) {\n      // Delay to ensure the component is fully rendered\n      const timer = setTimeout(() => {\n        const scrollContainer = tagScrollRef.current;\n        \n        // Get the max scroll width\n        const maxScrollWidth = scrollContainer.scrollWidth - scrollContainer.clientWidth;\n        \n        // Only auto-scroll if there's overflow content\n        if (maxScrollWidth > 0) {\n          // Create smooth scroll animation to middle then back\n          const scrollToMiddle = () => {\n            // Scroll to approximately middle (adjusted based on container width)\n            const scrollTarget = Math.min(maxScrollWidth * 0.4, 200);\n            \n            // Smooth scroll animation\n            scrollContainer.scrollTo({\n              left: scrollTarget,\n              behavior: 'smooth'\n            });\n            \n            // After scrolling to middle, scroll back to start\n            setTimeout(() => {\n              scrollContainer.scrollTo({\n                left: 0,\n                behavior: 'smooth'\n              });\n              setHasAutoScrolled(true);\n            }, 1200);\n          };\n          \n          scrollToMiddle();\n        } else {\n          setHasAutoScrolled(true);\n        }\n      }, 800);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [hasAutoScrolled]);\n\n  return (\n    <>\n      <style jsx>{`        \n        /* City selector style */\n        .city-selector-container {\n          background-color: #ffffff;\n          border-radius: 12px;\n          padding: 8px 16px;\n          display: flex;\n          align-items: center;\n          cursor: pointer;\n          transition: all 0.3s ease;\n          border: 1px solid rgba(100, 116, 139, 0.2);\n          box-shadow: 0 2px 10px rgba(100, 116, 139, 0.1);\n        }\n        \n        .city-selector-container:hover {\n          box-shadow: 0 4px 12px rgba(100, 116, 139, 0.15);\n          border: 1px solid rgba(100, 116, 139, 0.3);\n        }\n\n        /* Horizontal scrolling for tag filter */\n        .tag-scroll-container {\n          display: flex;\n          overflow-x: auto;\n          overflow-y: hidden;\n          white-space: nowrap;\n          -webkit-overflow-scrolling: touch;\n          scrollbar-width: none; /* Firefox */\n          padding: 0 !important;\n          margin: 0 !important;\n          max-width: 100%;\n        }\n        \n        .tag-scroll-container::-webkit-scrollbar {\n          display: none; /* Chrome, Safari */\n        }\n        \n        .tag-item {\n          display: inline-block;\n          flex-shrink: 0;\n        }\n\n        /* Ensure the page does not horizontally scroll at all */\n        body, html { \n          overflow-x: hidden !important;\n          width: 100%;\n          max-width: 100vw;\n          position: relative;\n          box-sizing: border-box;\n          margin: 0;\n          padding: 0;\n        }\n        \n        /* Force all content to stay within viewport */\n        .explore-container {\n          width: 100%;\n          max-width: 100vw;\n          overflow-x: hidden !important;\n          position: relative;\n          box-sizing: border-box;\n        }\n        \n        /* Prevent any children from causing overflow */\n        .explore-container > * {\n          max-width: 100vw;\n          overflow-x: hidden !important;\n          box-sizing: border-box;\n        }\n      `}</style>\n      <div className=\"explore-container container w-full pt-0 pb-8 overflow-x-hidden max-w-full\" ref={pageRef} style={{ margin: 0, padding: 0, backgroundColor: '#FFFFFF', width: '100%', maxWidth: '100vw', overflowX: 'hidden' }}>\n      \n      {/* City Selector - positioned with lower z-index than the header (which is 40) */}\n      <div className=\"mt-5 px-4 mb-8\" style={{ position: 'relative', zIndex: 30 }}>\n        <div className=\"max-w-xl mx-auto flex justify-start\">\n          <div className=\"city-selector-container bg-white shadow-sm border border-gray-200 rounded-lg\">\n            <Suspense fallback={<div className=\"h-10 w-32 bg-gray-100 animate-pulse rounded-md\"></div>}>\n              <CitySelector \n                currentCity={selectedCity}\n                onCityChange={handleCityChange}\n              />\n            </Suspense>\n          </div>\n        </div>\n      </div>\n      \n      {/* Search bar placed above the tag filter with lower z-index */}\n      <div className=\"mt-4 px-4 mb-2\" style={{ position: 'relative', zIndex: 20 }}>\n        <div className=\"max-w-xl mx-auto\">\n          <ExploreSearch \n            query={searchQuery}\n            onSearch={handleSearch}\n          />\n        </div>\n      </div>\n      \n      {/* Time filter buttons */}\n      <div className=\"flex space-x-2 mt-2 px-4\">\n        <button\n          onClick={() => handleTimeFilterChange('all')}\n          className={`px-3 py-1.5 text-sm font-medium rounded-full transition ${timeFilter === 'all' \n            ? 'bg-indigo-600 text-white shadow-sm' \n            : 'bg-gray-100 text-gray-700 hover:bg-indigo-50'}`}\n        >\n          All\n        </button>\n        <button\n          onClick={() => handleTimeFilterChange('today')}\n          className={`px-3 py-1.5 text-sm font-medium rounded-full transition ${timeFilter === 'today' \n            ? 'bg-indigo-600 text-white shadow-sm' \n            : 'bg-gray-100 text-gray-700 hover:bg-indigo-50'}`}\n        >\n          Today\n        </button>\n        <button\n          onClick={() => handleTimeFilterChange('thisWeek')}\n          className={`px-3 py-1.5 text-sm font-medium rounded-full transition ${timeFilter === 'thisWeek' \n            ? 'bg-indigo-600 text-white shadow-sm' \n            : 'bg-gray-100 text-gray-700 hover:bg-indigo-50'}`}\n        >\n          This Week\n        </button>\n      </div>\n      \n      {/* Results section */}\n      <div className=\"mt-4 px-4\">\n        <Suspense fallback={\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {[...Array(6)].map((_, i) => (\n              <div key={i} className=\"h-64 bg-gray-100 animate-pulse rounded-md\"></div>\n            ))}\n          </div>\n        }>\n          <ExploreResults \n            results={results} \n            isLoading={isLoading}\n            emptyMessage=\"No results found. Try adjusting your search or filters.\"\n          />\n        </Suspense>\n      </div>\n    </div>\n    </>\n  );\n};\n\nexport default ExplorePage;\n","import React, { useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { FaArrowLeft, FaTags, FaList, FaBoxOpen, FaClipboard } from 'react-icons/fa';\nimport { useAuthStore } from '../../stores/authStore';\nimport { useShopByUserId } from '../stores/shopStore';\n\n/**\n * CatalogueEditPage Component\n * \n * Single Responsibility: Provides interface for business owners to manage their product/service catalogue\n * This component handles:\n * 1. Loading existing shop data\n * 2. Displaying tabs for different catalogue management sections\n * 3. Navigation between catalogue sections\n */\nconst CatalogueEditPage = () => {\n  const navigate = useNavigate();\n  const { user } = useAuthStore();\n  \n  useEffect(() => {\n    // Redirect to login if not authenticated\n    if (!user?._id) {\n      navigate('/login');\n    }\n  }, [user, navigate]);\n  \n  const handleBack = () => {\n    navigate('/host/business');\n  };\n  \n  // Fetch the shop data for the current user\n  const { \n    data: shopData, \n    isLoading, \n    error \n  } = useShopByUserId(user?._id);\n  \n  // Render loading state\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n        <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n          <div className=\"flex items-center mb-6\">\n            <button \n              onClick={handleBack}\n              className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n              aria-label=\"Go back\"\n            >\n              <FaArrowLeft className=\"text-gray-600\" />\n            </button>\n            <h1 className=\"text-2xl font-bold\">Edit Catalogue</h1>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            <div className=\"animate-pulse\">\n              <div className=\"h-8 bg-gray-200 rounded w-1/3 mb-6\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-full mb-4\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-full mb-4\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-8\"></div>\n              \n              <div className=\"h-10 bg-gray-200 rounded w-full mb-4\"></div>\n              <div className=\"h-10 bg-gray-200 rounded w-full mb-4\"></div>\n              <div className=\"h-10 bg-gray-200 rounded w-full mb-4\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  // Render error state\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n        <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n          <div className=\"flex items-center mb-6\">\n            <button \n              onClick={handleBack}\n              className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n              aria-label=\"Go back\"\n            >\n              <FaArrowLeft className=\"text-gray-600\" />\n            </button>\n            <h1 className=\"text-2xl font-bold\">Edit Catalogue</h1>\n          </div>\n          \n          <div className=\"bg-red-50 border-l-4 border-red-500 p-4 mb-6\">\n            <div className=\"flex\">\n              <p className=\"text-red-700\">\n                Error loading shop data: {error.message || 'Unable to load shop data'}\n              </p>\n            </div>\n            <button \n              onClick={() => navigate('/shop/edit')}\n              className=\"mt-3 px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700\"\n            >\n              Set Up Your Shop First\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  // Render no shop state\n  if (!shopData) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n        <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n          <div className=\"flex items-center mb-6\">\n            <button \n              onClick={handleBack}\n              className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n              aria-label=\"Go back\"\n            >\n              <FaArrowLeft className=\"text-gray-600\" />\n            </button>\n            <h1 className=\"text-2xl font-bold\">Edit Catalogue</h1>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow-md overflow-hidden p-6 text-center\">\n            <h2 className=\"text-xl font-semibold mb-2\">No Shop Found</h2>\n            <p className=\"text-gray-600 mb-6\">You need to set up your shop before you can manage your catalogue.</p>\n            \n            <button\n              onClick={() => navigate('/shop/edit')}\n              className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\n            >\n              Set Up Your Shop\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n      <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n        {/* Header */}\n        <div className=\"flex items-center mb-6\">\n          <button \n            onClick={handleBack}\n            className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n            aria-label=\"Go back\"\n          >\n            <FaArrowLeft className=\"text-gray-600\" />\n          </button>\n          <div>\n            <h1 className=\"text-2xl font-bold\">Edit Catalogue</h1>\n            <p className=\"text-gray-600\">{shopData.name}</p>\n          </div>\n        </div>\n        \n        {/* Main Content - Completely redesigned to avoid ResizeObserver errors */}\n        <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n          <div className=\"p-6\">\n            <h2 className=\"text-xl font-semibold mb-6\">Catalogue Management</h2>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {/* Using direct Links instead of buttons with state changes */}\n              <Link \n                to=\"/shop/catalogue/products\" \n                className=\"no-underline\"\n              >\n                <div className=\"bg-white border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow flex items-center\">\n                  <div className=\"bg-indigo-50 p-3 rounded-full mr-4\">\n                    <FaList className=\"text-indigo-600 text-xl\" />\n                  </div>\n                  <div>\n                    <h3 className=\"font-medium text-gray-900\">Products & Services</h3>\n                    <p className=\"text-sm text-gray-500\">Manage your product and service offerings</p>\n                  </div>\n                </div>\n              </Link>\n              \n              <Link \n                to=\"/shop/catalogue/categories\" \n                className=\"no-underline\"\n              >\n                <div className=\"bg-white border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow flex items-center\">\n                  <div className=\"bg-indigo-50 p-3 rounded-full mr-4\">\n                    <FaTags className=\"text-indigo-600 text-xl\" />\n                  </div>\n                  <div>\n                    <h3 className=\"font-medium text-gray-900\">Categories</h3>\n                    <p className=\"text-sm text-gray-500\">Organize your products by category</p>\n                  </div>\n                </div>\n              </Link>\n              \n              <Link \n                to=\"/shop/catalogue/inventory\" \n                className=\"no-underline\"\n              >\n                <div className=\"bg-white border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow flex items-center\">\n                  <div className=\"bg-indigo-50 p-3 rounded-full mr-4\">\n                    <FaBoxOpen className=\"text-indigo-600 text-xl\" />\n                  </div>\n                  <div>\n                    <h3 className=\"font-medium text-gray-900\">Inventory</h3>\n                    <p className=\"text-sm text-gray-500\">Manage your stock and availability</p>\n                  </div>\n                </div>\n              </Link>\n              \n              <Link \n                to=\"/shop/catalogue/template\" \n                className=\"no-underline\"\n              >\n                <div className=\"bg-white border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow flex items-center\">\n                  <div className=\"bg-indigo-50 p-3 rounded-full mr-4\">\n                    <FaClipboard className=\"text-indigo-600 text-xl\" />\n                  </div>\n                  <div>\n                    <h3 className=\"font-medium text-gray-900\">Template</h3>\n                    <p className=\"text-sm text-gray-500\">Create standardized product templates</p>\n                  </div>\n                </div>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CatalogueEditPage;\n","import { create } from 'zustand';\r\nimport { createPersistedStore } from './middleware';\r\nimport authService from '../services/authService';\r\nimport axios from 'axios';\r\n\r\n/**\r\n * Configure axios interceptors to manage auth headers and token refresh\r\n * @param {string} token - The authentication token to set in headers\r\n */\r\nconst configureAxiosAuthInterceptor = (token) => {\r\n  // Remove any existing interceptors to prevent duplicates\r\n  if (window.__authInterceptorId !== undefined) {\r\n    axios.interceptors.request.eject(window.__authInterceptorId);\r\n    window.__authInterceptorId = undefined;\r\n  }\r\n  \r\n  if (window.__authResponseInterceptorId !== undefined) {\r\n    axios.interceptors.response.eject(window.__authResponseInterceptorId);\r\n    window.__authResponseInterceptorId = undefined;\r\n  }\r\n  \r\n  // Add request interceptor to include token in all requests\r\n  const requestInterceptorId = axios.interceptors.request.use(\r\n    (config) => {\r\n      // Always enable credentials for cross-origin requests\r\n      config.withCredentials = true;\r\n      \r\n      if (token) {\r\n        // Set the Authorization header for all requests\r\n        config.headers['Authorization'] = `Bearer ${token}`;\r\n        \r\n        // Ensure token is included in localStorage for persistence\r\n        localStorage.setItem('auth_token', token);\r\n      } else {\r\n        // Try to recover token from localStorage if it exists\r\n        const storedToken = localStorage.getItem('auth_token');\r\n        if (storedToken) {\r\n          config.headers['Authorization'] = `Bearer ${storedToken}`;\r\n        }\r\n      }\r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n  \r\n  // Add response interceptor to handle token expiration\r\n  const responseInterceptorId = axios.interceptors.response.use(\r\n    (response) => response,\r\n    async (error) => {\r\n      const originalRequest = error.config;\r\n      \r\n      // If the error is 401 (Unauthorized) and we haven't tried to refresh the token yet\r\n      if (error.response?.status === 401 && !originalRequest._retry) {\r\n        originalRequest._retry = true;\r\n        \r\n        try {\r\n          // Get the current auth state\r\n          const authStore = useAuthStore.getState();\r\n          const refreshToken = authStore.refreshToken;\r\n          \r\n          if (!refreshToken) {\r\n            // No refresh token available, logout the user\r\n            authStore.logout();\r\n            return Promise.reject(error);\r\n          }\r\n          \r\n          console.log('Token expired, attempting to refresh...');\r\n          \r\n          // Call the refresh token endpoint\r\n          const response = await authService.refreshToken(refreshToken);\r\n          const { user, token: newToken } = response;\r\n          \r\n          // Update the auth store with the new token\r\n          authStore.setUser(user, newToken, refreshToken);\r\n          \r\n          // Update the Authorization header for the original request\r\n          originalRequest.headers['Authorization'] = `Bearer ${newToken}`;\r\n          \r\n          // Retry the original request with the new token\r\n          return axios(originalRequest);\r\n        } catch (refreshError) {\r\n          console.error('Token refresh failed:', refreshError);\r\n          \r\n          // If refresh fails, logout the user\r\n          useAuthStore.getState().logout();\r\n          return Promise.reject(error);\r\n        }\r\n      }\r\n      \r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n  \r\n  // Store the interceptor IDs for future reference\r\n  window.__authInterceptorId = requestInterceptorId;\r\n  window.__authResponseInterceptorId = responseInterceptorId;\r\n};\r\n\r\n/**\r\n * Auth store for managing authentication state\r\n * Following Single Responsibility Principle - this store only manages auth state\r\n */\r\nexport const useAuthStore = create(\r\n  createPersistedStore('auth', (set, get) => ({\r\n    // State\r\n    user: null,\r\n    token: null,\r\n    refreshToken: null,\r\n    isAuthenticated: false,\r\n    loading: false,\r\n    error: null,\r\n    \r\n    // Actions\r\n    setUser: (userData, token, refreshToken) => {\r\n      set({ \r\n        user: userData, \r\n        token, \r\n        refreshToken,\r\n        isAuthenticated: userData !== null && userData !== undefined,\r\n        error: null\r\n      });\r\n      \r\n      // Save token directly to localStorage for extra persistence\r\n      if (token) {\r\n        localStorage.setItem('auth_token', token);\r\n        // Configure axios headers when token changes\r\n        configureAxiosAuthInterceptor(token);\r\n      }\r\n    },\r\n    \r\n    login: async (credentials) => {\r\n      set({ loading: true, error: null });\r\n      try {\r\n        const { user, token, refreshToken } = await authService.login(credentials);\r\n        \r\n        // Configure axios headers with new token\r\n        configureAxiosAuthInterceptor(token);\r\n        \r\n        set({ \r\n          user, \r\n          token, \r\n          refreshToken,\r\n          isAuthenticated: true, \r\n          loading: false,\r\n          error: null\r\n        });\r\n        return { success: true };\r\n      } catch (error) {\r\n        set({ \r\n          loading: false, \r\n          error: error.response?.data?.message || 'Login failed'\r\n        });\r\n        return { success: false, error: get().error };\r\n      }\r\n    },\r\n    \r\n    logout: async () => {\r\n      set({ loading: true });\r\n      try {\r\n        await authService.logout();\r\n      } catch (error) {\r\n        console.error('Logout error:', error);\r\n      } finally {\r\n        // Even if the API call fails, clear the local state\r\n        set({ \r\n          user: null, \r\n          token: null, \r\n          refreshToken: null,\r\n          isAuthenticated: false, \r\n          loading: false,\r\n          error: null\r\n        });\r\n        \r\n        // Remove token from localStorage\r\n        localStorage.removeItem('auth_token');\r\n        \r\n        // Remove auth header from axios\r\n        configureAxiosAuthInterceptor(null);\r\n      }\r\n    },\r\n    \r\n    register: async (userData) => {\r\n      set({ loading: true, error: null });\r\n      try {\r\n        const { user, token, refreshToken } = await authService.register(userData);\r\n        \r\n        // Configure axios headers with new token\r\n        configureAxiosAuthInterceptor(token);\r\n        \r\n        set({ \r\n          user, \r\n          token, \r\n          refreshToken,\r\n          isAuthenticated: true, \r\n          loading: false,\r\n          error: null\r\n        });\r\n        return { success: true };\r\n      } catch (error) {\r\n        set({ \r\n          loading: false, \r\n          error: error.response?.data?.message || 'Registration failed'\r\n        });\r\n        return { success: false, error: get().error };\r\n      }\r\n    },\r\n    \r\n    handleOAuthVerification: async (authData) => {\r\n      set({ loading: true, error: null });\r\n      try {\r\n        // Extract token and refreshToken from the authData object\r\n        const { token, refreshToken } = typeof authData === 'string' \r\n          ? { token: authData, refreshToken: null } // Handle legacy format\r\n          : authData;\r\n        \r\n        if (!token) {\r\n          throw new Error('No token provided');\r\n        }\r\n        \r\n        // Set the token in axios headers for this request only\r\n        const user = await authService.handleOAuthVerification(token);\r\n        \r\n        // If verification successful, configure axios with the token permanently\r\n        configureAxiosAuthInterceptor(token);\r\n        \r\n        set({ \r\n          user, \r\n          token, \r\n          refreshToken, // Store the refresh token from the OAuth callback\r\n          isAuthenticated: true, \r\n          loading: false,\r\n          error: null\r\n        });\r\n        return { success: true };\r\n      } catch (error) {\r\n        set({ \r\n          loading: false, \r\n          error: error.response?.data?.message || 'OAuth verification failed'\r\n        });\r\n        return { success: false, error: get().error };\r\n      }\r\n    },\r\n    \r\n    // Refresh the access token using the refresh token\r\n    refreshAccessToken: async () => {\r\n      const { refreshToken } = get();\r\n      if (!refreshToken) {\r\n        console.error('No refresh token available');\r\n        return { success: false, error: 'No refresh token available' };\r\n      }\r\n      \r\n      set({ loading: true, error: null });\r\n      try {\r\n        console.log('Manually refreshing access token...');\r\n        const { user, token } = await authService.refreshToken(refreshToken);\r\n        \r\n        // Update the auth store with the new token but keep the same refresh token\r\n        set({\r\n          user,\r\n          token,\r\n          isAuthenticated: true,\r\n          loading: false,\r\n          error: null\r\n        });\r\n        \r\n        // Configure axios headers with the new token\r\n        configureAxiosAuthInterceptor(token);\r\n        \r\n        return { success: true };\r\n      } catch (error) {\r\n        console.error('Manual token refresh failed:', error);\r\n        \r\n        // If refresh fails, logout the user\r\n        get().logout();\r\n        \r\n        return { success: false, error: 'Failed to refresh token' };\r\n      }\r\n    },\r\n    \r\n    clearError: () => set({ error: null })\r\n  }))\r\n);\r\n\r\n// Initialize auth when store is imported\r\nexport const initializeAuth = () => {\r\n  const authData = localStorage.getItem('auth-storage');\r\n  if (authData) {\r\n    try {\r\n      const { state } = JSON.parse(authData);\r\n      \r\n      if (state?.token) {\r\n        configureAxiosAuthInterceptor(state.token);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error initializing auth headers:', error);\r\n    }\r\n  }\r\n};\r\n\r\n// DISABLED: Automatic initialization (to prevent infinite loop)\r\n// Call initializeAuth() manually in index.js or App.js instead\r\n// initializeAuth();\r\n","import axios from 'axios';\n\n/**\n * Service for managing profile-related API requests\n * Following Single Responsibility Principle - this service only handles profile operations\n */\nconst profileService = {\n  /**\n   * Fetch the profile data for the current user\n   * @returns {Promise<Object>} User profile data\n   */\n  getProfile: async () => {\n    try {\n      // Make an actual API call to get the current user's profile\n      const response = await axios.get('/api/users/user/me');\n      \n      // Check if the request was successful\n      if (response.data && response.data.success) {\n        console.log('Profile data retrieved:', response.data.data);\n        return response.data.data;\n      }\n      \n      throw new Error('Failed to fetch profile data');\n    } catch (error) {\n      console.error('Error fetching profile:', error);\n      throw error;\n    }\n  },\n  \n  /**\n   * Get profile data for a specific user by ID\n   * @param {string} userId - User ID to fetch profile for\n   * @returns {Promise<Object>} User profile data\n   */\n  getProfileById: async (userId) => {\n    try {\n      console.log(`Fetching profile for user ID: ${userId}`);\n      \n      // Use the correct endpoint for the user service\n      const response = await axios.get(`/api/users/user/${userId}`);\n      \n      // Check if the request was successful\n      if (response.data && response.data.success) {\n        console.log('Profile data retrieved successfully:', response.data.data);\n        return response.data.data;\n      }\n      \n      // If we have data but no success flag (different API response format)\n      if (response.data && !response.data.success) {\n        console.log('Profile data retrieved with alternate format:', response.data);\n        return response.data;\n      }\n      \n      throw new Error(`Failed to fetch profile data for user ${userId}`);\n    } catch (error) {\n      console.error(`Error fetching profile for user ${userId}:`, error);\n      throw error;\n    }\n  },\n  \n  /**\n   * Update the current user's profile\n   * @param {Object} profileData - Updated profile data\n   * @returns {Promise<Object>} Updated user profile\n   */\n  updateProfile: async (profileData) => {\n    try {\n      // Make an actual API call to update the user's profile\n      const response = await axios.put('/api/users/user/profile', profileData);\n      \n      // Check if the request was successful\n      if (response.data && response.data.success) {\n        return response.data.data;\n      }\n      \n      throw new Error('Failed to update profile data');\n    } catch (error) {\n      console.error('Error updating profile:', error);\n      throw error;\n    }\n  },\n  \n  /**\n   * Update user preferences\n   * @param {Object} preferences - User preferences to update\n   * @returns {Promise<Object>} Updated preferences\n   */\n  updatePreferences: async (preferences) => {\n    try {\n      // Make an actual API call to update user preferences\n      const response = await axios.put('/api/users/user/preferences', preferences);\n      \n      // Check if the request was successful\n      if (response.data && response.data.success) {\n        return response.data.data;\n      }\n      \n      throw new Error('Failed to update preferences');\n    } catch (error) {\n      console.error('Error updating preferences:', error);\n      throw error;\n    }\n  }\n};\n\nexport default profileService;\n","import axios from 'axios';\nimport { \n  tablesData, \n  eventsData, \n  circlesData \n} from '../data/mockExploreData';\nimport { isPast } from 'date-fns';\n\n/**\n * Explore Service\n * \n * Following Single Responsibility Principle:\n * - This service is responsible for all explore-related API calls\n * - Each function handles a specific type of data fetch\n * - Mock implementation is provided for development\n */\nconst exploreService = {\n  /**\n   * Get all explore items with optional filters\n   * @param {Object} params - Query parameters for filtering\n   * @returns {Promise<Array>} - Array of explore items\n   */\n  getExploreItems: async (params = {}) => {\n    // Directly call the Event microservice backend, bypassing the API gateway\n    // URL: http://localhost:3002/events\n    try {\n      console.log('Calling event service with params:', params);\n      \n      // Create a new params object to handle special cases\n      const apiParams = { ...params };\n      \n      // Handle \"Only For You\" feature\n      if (params.view === 'Only For You' && params.userInterests) {\n        console.log('Sending user interests to backend for personalized results:', params.userInterests);\n        // Ensure userInterests is properly formatted\n        if (Array.isArray(params.userInterests)) {\n          apiParams.userInterests = params.userInterests;\n        } else if (typeof params.userInterests === 'string') {\n          // If it's a string, convert to array\n          apiParams.userInterests = params.userInterests.split(',');\n        }\n      }\n      \n      // Ensure tags are properly formatted for the API\n      if (params.tags && Array.isArray(params.tags) && params.tags.length > 0) {\n        // Keep as is - the backend expects an array\n        console.log('Sending tags to backend:', params.tags);\n      }\n      \n      const response = await axios.get(`${process.env.REACT_APP_EVENT_SERVICE_URL || 'http://localhost:3002'}/events/search`, { params: apiParams });\n      // Handle the response format from the backend which returns { success: true, data: events }\n      const events = response.data.data || [];\n      \n      // Filter out private events and past events - they shouldn't appear in explore\n      let filteredEvents = events.filter(event => {\n        // Check if the event is public\n        const isPublic = event.access === 'public';\n        \n        // Check if the event is in the past\n        const isPastEvent = event.date && event.date.start ? isPast(new Date(event.date.start)) : false;\n        \n        // Only include public events that are not in the past\n        return isPublic && !isPastEvent;\n      });\n      \n      // Apply time-based filtering if specified\n      if (params.timeFilter && params.timeFilter !== 'all') {\n        console.log(`Applying time filter: ${params.timeFilter}`);\n        \n        filteredEvents = filteredEvents.filter(event => {\n          // Skip events without date information\n          if (!event.date || !event.date.start) return false;\n          \n          const eventDate = new Date(event.date.start);\n          const today = new Date();\n          \n          if (params.timeFilter === 'today') {\n            // Check if event is today\n            return eventDate.getDate() === today.getDate() &&\n              eventDate.getMonth() === today.getMonth() &&\n              eventDate.getFullYear() === today.getFullYear();\n          } \n          else if (params.timeFilter === 'thisWeek') {\n            // Check if event is within the current week (Sunday to Saturday)\n            const dayOfWeek = today.getDay();\n            \n            // Calculate the start and end of the current week\n            const startOfWeek = new Date(today);\n            startOfWeek.setDate(today.getDate() - dayOfWeek);\n            startOfWeek.setHours(0, 0, 0, 0);\n            \n            const endOfWeek = new Date(today);\n            endOfWeek.setDate(today.getDate() + (6 - dayOfWeek));\n            endOfWeek.setHours(23, 59, 59, 999);\n            \n            return eventDate >= startOfWeek && eventDate <= endOfWeek;\n          }\n          \n          return true;\n        });\n      }\n      \n      // Transform MongoDB data format to match what the frontend components expect\n      return filteredEvents.map(event => {\n        // Format date from MongoDB date object to string\n        const startDate = event.date?.start ? new Date(event.date.start) : new Date();\n        const formattedDate = startDate.toLocaleDateString('en-US', { \n          year: 'numeric', month: 'short', day: 'numeric' \n        });\n\n        // Format location from object to string\n        const locationStr = event.location?.city || 'Unknown Location';\n        \n        return {\n          ...event,\n          id: event._id, // Add id field based on MongoDB's _id\n          type: event.type || 'event',\n          // Don't set a default image - EventCard component should handle missing images\n          image: event.image || null,\n          // Convert location object to string as expected by EventCard\n          location: locationStr,\n          // Format date as expected by EventCard\n          date: formattedDate,\n          // Add other required fields with defaults\n          participants: event.attendees?.length || 0,\n          maxParticipants: event.capacity || event.maxAttendees || 10,\n          tags: event.tags || [],\n          // Ensure host is properly formatted with default image\n          host: {\n            id: event.host?.userId || 'unknown',\n            name: event.host?.name || 'Anonymous Host',\n            image: `https://ui-avatars.com/api/?name=${encodeURIComponent(event.host?.name || 'User')}&background=random&color=fff&size=128`\n          }\n        };\n      });\n    } catch (error) {\n      console.error('Error fetching explore data directly from event service:', error);\n      throw error;\n    }\n  },\n  \n  /**\n   * Get details for a specific explore item\n   * @param {string} id - Item ID\n   * @param {string} type - Item type (event, table, circle)\n   * @returns {Promise<Object>} - Item details\n   */\n  getItemDetails: async (id, type) => {\n    try {\n      // Uncomment for production API call\n      // const response = await axios.get(`/api/${type}s/${id}`);\n      // return response.data;\n      \n      // Mock implementation\n      // Simulate network delay\n      await new Promise(resolve => setTimeout(resolve, 300));\n      \n      // Find the item in the appropriate mock data array\n      let item;\n      \n      switch (type) {\n        case 'table':\n          item = tablesData.find(t => t.id === id);\n          break;\n        case 'circle':\n          item = circlesData.find(c => c.id === id);\n          break;\n        case 'event':\n        default:\n          item = eventsData.find(e => e.id === id);\n          break;\n      }\n      \n      if (!item) {\n        throw new Error(`Item not found: ${type} ${id}`);\n      }\n      \n      return { ...item, type };\n    } catch (error) {\n      console.error(`Error fetching ${type} details:`, error);\n      throw error;\n    }\n  }\n};\n\nexport default exploreService;\n","import axios from 'axios';\r\n\r\n// Configure axios defaults for cross-origin requests\r\naxios.defaults.withCredentials = true;\r\n\r\n/**\r\n * Service for managing authentication-related API requests\r\n * Following Single Responsibility Principle - this service only handles auth operations\r\n */\r\nconst authService = {\r\n  /**\r\n   * Get the current authenticated user\r\n   * @returns {Promise<Object>} Current user data\r\n   */\r\n  getCurrentUser: async () => {\r\n    try {\r\n      // This endpoint should be available at /auth/current through the API gateway\r\n      const response = await axios.get('/api/users/auth/current');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching current user:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Login with email and password\r\n   * @param {Object} credentials - Login credentials (email, password)\r\n   * @returns {Promise<Object>} Authentication result with user and token\r\n   */\r\n  login: async (credentials) => {\r\n    try {\r\n      const response = await axios.post('/api/users/auth/login', credentials);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Register a new user\r\n   * @param {Object} userData - User registration data\r\n   * @returns {Promise<Object>} Registration result with user and token\r\n   */\r\n  register: async (userData) => {\r\n    try {\r\n      const response = await axios.post('/api/users/auth/register', userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Logout the current user\r\n   * @returns {Promise<void>}\r\n   */\r\n  logout: async () => {\r\n    try {\r\n      await axios.post('/api/users/auth/logout');\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Handle OAuth authentication verification\r\n   * @param {string} token - Authentication token to verify\r\n   * @returns {Promise<Object>} User data\r\n   */\r\n  handleOAuthVerification: async (token) => {\r\n    if (!token) {\r\n      throw new Error('No token received');\r\n    }\r\n    \r\n    try {\r\n      // Fetch user data using the provided token\r\n      const response = await axios.get('/api/users/auth/oauth/verify', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('OAuth verification error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Refresh the access token using a refresh token\r\n   * @param {string} refreshToken - The refresh token\r\n   * @returns {Promise<Object>} New authentication data with user and token\r\n   */\r\n  refreshToken: async (refreshToken) => {\r\n    try {\r\n      const response = await axios.post('/api/users/auth/refresh-token', { refreshToken });\r\n      return response.data.data; // Extract the data from the response\r\n    } catch (error) {\r\n      console.error('Token refresh error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default authService;\r\n","import axios from 'axios';\n\n// API base URL from environment\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3008';\nconst PRODUCT_SERVICE_URL = `${API_URL}/api/shop/products`;\n\n/**\n * Product API Service\n * Contains all API calls related to product functionality\n */\nconst productService = {\n  // Fetch products by shop ID\n  fetchProductsByShopId: async (shopId, categoryId = null) => {\n    try {\n      const url = `${PRODUCT_SERVICE_URL}/shop/${shopId}`;\n      const params = categoryId ? { categoryId } : {};\n      \n      const response = await axios.get(url, { params });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      throw error;\n    }\n  },\n\n  // Fetch products by category ID\n  fetchProductsByCategoryId: async (categoryId) => {\n    try {\n      const response = await axios.get(`${PRODUCT_SERVICE_URL}/category/${categoryId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching products by category:', error);\n      throw error;\n    }\n  },\n\n  // Fetch a single product by ID\n  fetchProductById: async (productId) => {\n    try {\n      const response = await axios.get(`${PRODUCT_SERVICE_URL}/${productId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching product details:', error);\n      throw error;\n    }\n  },\n\n  // Create a new product\n  createProduct: async (productData) => {\n    try {\n      const response = await axios.post(PRODUCT_SERVICE_URL, productData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating product:', error);\n      throw error;\n    }\n  },\n\n  // Update an existing product\n  updateProduct: async (productId, productData) => {\n    try {\n      const response = await axios.put(`${PRODUCT_SERVICE_URL}/${productId}`, productData);\n      return response.data;\n    } catch (error) {\n      console.error('Error updating product:', error);\n      throw error;\n    }\n  },\n\n  // Update product stock\n  updateProductStock: async (productId, stockData) => {\n    try {\n      const response = await axios.patch(`${PRODUCT_SERVICE_URL}/${productId}/stock`, stockData);\n      return response.data;\n    } catch (error) {\n      console.error('Error updating product stock:', error);\n      throw error;\n    }\n  },\n\n  // Delete a product (soft delete)\n  deleteProduct: async (productId) => {\n    try {\n      const response = await axios.delete(`${PRODUCT_SERVICE_URL}/${productId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error deleting product:', error);\n      throw error;\n    }\n  },\n\n  // Update the display order of products\n  updateProductsOrder: async (productsOrderData) => {\n    try {\n      const response = await axios.put(`${PRODUCT_SERVICE_URL}/order/batch`, productsOrderData);\n      return response.data;\n    } catch (error) {\n      console.error('Error updating products order:', error);\n      throw error;\n    }\n  }\n};\n\nexport default productService;\n","import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport productService from '../services/productService';\n\n/**\n * React Query Hooks for Product Data\n * Following the project's state management standards:\n * - Using React Query for server state (data fetched from APIs)\n */\n\n// Hook to fetch products by shop ID\nexport const useProductsByShopId = (shopId, categoryId = null) => {\n  return useQuery({\n    queryKey: ['products', 'shop', shopId, { categoryId }],\n    queryFn: () => productService.fetchProductsByShopId(shopId, categoryId),\n    enabled: !!shopId,\n    staleTime: 5 * 60 * 1000 // 5 minutes\n  });\n};\n\n// Hook to fetch products by category ID\nexport const useProductsByCategoryId = (categoryId) => {\n  return useQuery({\n    queryKey: ['products', 'category', categoryId],\n    queryFn: () => productService.fetchProductsByCategoryId(categoryId),\n    enabled: !!categoryId,\n    staleTime: 5 * 60 * 1000 // 5 minutes\n  });\n};\n\n// Hook to fetch a single product by ID\nexport const useProductById = (productId) => {\n  return useQuery({\n    queryKey: ['product', productId],\n    queryFn: () => productService.fetchProductById(productId),\n    enabled: !!productId,\n    staleTime: 5 * 60 * 1000 // 5 minutes\n  });\n};\n\n// Hook to create a product\nexport const useCreateProduct = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (productData) => productService.createProduct(productData),\n    onSuccess: (data) => {\n      // Invalidate relevant queries\n      queryClient.invalidateQueries({ queryKey: ['products', 'shop', data.shopId] });\n      if (data.categoryId) {\n        queryClient.invalidateQueries({ queryKey: ['products', 'category', data.categoryId] });\n      }\n      \n      // Update the cache with the new product\n      queryClient.setQueryData(['product', data._id], data);\n    }\n  });\n};\n\n// Hook to update a product\nexport const useUpdateProduct = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: ({ productId, productData }) => productService.updateProduct(productId, productData),\n    onSuccess: (data) => {\n      // Invalidate relevant queries\n      queryClient.invalidateQueries({ queryKey: ['products', 'shop', data.shopId] });\n      if (data.categoryId) {\n        queryClient.invalidateQueries({ queryKey: ['products', 'category', data.categoryId] });\n      }\n      \n      // Update the cache with the updated product\n      queryClient.setQueryData(['product', data._id], data);\n    }\n  });\n};\n\n// Hook to update product stock\nexport const useUpdateProductStock = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: ({ productId, stockData }) => productService.updateProductStock(productId, stockData),\n    onSuccess: (data) => {\n      // Invalidate relevant queries\n      queryClient.invalidateQueries({ queryKey: ['products', 'shop', data.shopId] });\n      \n      // Update the cache with the updated product\n      queryClient.setQueryData(['product', data._id], data);\n    }\n  });\n};\n\n// Hook to delete a product\nexport const useDeleteProduct = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (productId) => productService.deleteProduct(productId),\n    onSuccess: (data) => {\n      // Get the product from the response\n      const product = data.product;\n      \n      // Invalidate relevant queries\n      queryClient.invalidateQueries({ queryKey: ['products', 'shop', product.shopId] });\n      if (product.categoryId) {\n        queryClient.invalidateQueries({ queryKey: ['products', 'category', product.categoryId] });\n      }\n      \n      // Remove the product from the cache\n      queryClient.removeQueries({ queryKey: ['product', product._id] });\n    }\n  });\n};\n\n// Hook to update the display order of products\nexport const useUpdateProductsOrder = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (productsOrderData) => productService.updateProductsOrder(productsOrderData),\n    onSuccess: (_, variables) => {\n      // Extract the shop ID from the first product if available\n      const shopId = variables.products[0]?.shopId;\n      if (shopId) {\n        queryClient.invalidateQueries({ queryKey: ['products', 'shop', shopId] });\n      }\n    }\n  });\n};\n","import axios from 'axios';\n\n// API base URL from environment\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3008';\nconst CATEGORY_SERVICE_URL = `${API_URL}/api/shop/categories`;\n\n/**\n * Category API Service\n * Contains all API calls related to category functionality\n */\nconst categoryService = {\n  // Fetch categories by shop ID\n  fetchCategoriesByShopId: async (shopId) => {\n    try {\n      const response = await axios.get(`${CATEGORY_SERVICE_URL}/shop/${shopId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n      throw error;\n    }\n  },\n\n  // Fetch a single category by ID\n  fetchCategoryById: async (categoryId) => {\n    try {\n      const response = await axios.get(`${CATEGORY_SERVICE_URL}/${categoryId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching category details:', error);\n      throw error;\n    }\n  },\n\n  // Create a new category\n  createCategory: async (categoryData) => {\n    try {\n      const response = await axios.post(CATEGORY_SERVICE_URL, categoryData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating category:', error);\n      throw error;\n    }\n  },\n\n  // Update an existing category\n  updateCategory: async (categoryId, categoryData) => {\n    try {\n      const response = await axios.put(`${CATEGORY_SERVICE_URL}/${categoryId}`, categoryData);\n      return response.data;\n    } catch (error) {\n      console.error('Error updating category:', error);\n      throw error;\n    }\n  },\n\n  // Delete a category (soft delete)\n  deleteCategory: async (categoryId) => {\n    try {\n      const response = await axios.delete(`${CATEGORY_SERVICE_URL}/${categoryId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error deleting category:', error);\n      throw error;\n    }\n  },\n\n  // Update the display order of categories\n  updateCategoriesOrder: async (categoriesOrderData) => {\n    try {\n      const response = await axios.put(`${CATEGORY_SERVICE_URL}/order/batch`, categoriesOrderData);\n      return response.data;\n    } catch (error) {\n      console.error('Error updating categories order:', error);\n      throw error;\n    }\n  }\n};\n\nexport default categoryService;\n","import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport categoryService from '../services/categoryService';\n\n/**\n * React Query Hooks for Category Data\n * Following the project's state management standards:\n * - Using React Query for server state (data fetched from APIs)\n */\n\n// Hook to fetch categories by shop ID\nexport const useCategoriesByShopId = (shopId) => {\n  return useQuery({\n    queryKey: ['categories', 'shop', shopId],\n    queryFn: () => categoryService.fetchCategoriesByShopId(shopId),\n    enabled: !!shopId,\n    staleTime: 5 * 60 * 1000 // 5 minutes\n  });\n};\n\n// Hook to fetch a single category by ID\nexport const useCategoryById = (categoryId) => {\n  return useQuery({\n    queryKey: ['category', categoryId],\n    queryFn: () => categoryService.fetchCategoryById(categoryId),\n    enabled: !!categoryId,\n    staleTime: 5 * 60 * 1000 // 5 minutes\n  });\n};\n\n// Hook to create a category\nexport const useCreateCategory = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (categoryData) => categoryService.createCategory(categoryData),\n    onSuccess: (data) => {\n      // Invalidate relevant queries\n      queryClient.invalidateQueries({ queryKey: ['categories', 'shop', data.shopId] });\n      \n      // Update the cache with the new category\n      queryClient.setQueryData(['category', data._id], data);\n    }\n  });\n};\n\n// Hook to update a category\nexport const useUpdateCategory = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: ({ categoryId, categoryData }) => categoryService.updateCategory(categoryId, categoryData),\n    onSuccess: (data) => {\n      // Invalidate relevant queries\n      queryClient.invalidateQueries({ queryKey: ['categories', 'shop', data.shopId] });\n      \n      // Update the cache with the updated category\n      queryClient.setQueryData(['category', data._id], data);\n    }\n  });\n};\n\n// Hook to delete a category\nexport const useDeleteCategory = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (categoryId) => categoryService.deleteCategory(categoryId),\n    onSuccess: (data) => {\n      // Get the category from the response\n      const category = data.category;\n      \n      // Invalidate relevant queries\n      queryClient.invalidateQueries({ queryKey: ['categories', 'shop', category.shopId] });\n      \n      // Remove the category from the cache\n      queryClient.removeQueries({ queryKey: ['category', category._id] });\n    }\n  });\n};\n\n// Hook to update the display order of categories\nexport const useUpdateCategoriesOrder = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (categoriesOrderData) => categoryService.updateCategoriesOrder(categoriesOrderData),\n    onSuccess: (_, variables) => {\n      // Extract the shop ID from the first category if available\n      const shopId = variables.categories[0]?.shopId;\n      if (shopId) {\n        queryClient.invalidateQueries({ queryKey: ['categories', 'shop', shopId] });\n      }\n    }\n  });\n};\n","import axios from 'axios';\n\n/**\n * Service for handling event image uploads\n * Following Single Responsibility Principle - this service only handles event image operations\n */\nconst API_URL = process.env.REACT_APP_EVENT_SERVICE_URL || 'http://localhost:3002'; // Event service URL\n\n/**\n * Upload an event image\n * @param {File} imageFile - The image file to upload\n * @param {string} eventId - The ID of the event\n * @param {string} token - JWT authentication token\n * @returns {Promise<string>} - The URL of the uploaded image\n */\nexport const uploadEventImage = async (imageFile, eventId, token) => {\n  try {\n    console.log(`[Event Image Service] Starting image upload process for event ${eventId}`);\n    console.log(`[Event Image Service] Image file:`, imageFile ? { name: imageFile.name, type: imageFile.type, size: imageFile.size } : 'No file');\n    console.log(`[Event Image Service] Event ID: ${eventId}`);\n    \n    if (!imageFile || !eventId) {\n      console.error('[Event Image Service] Missing required parameters');\n      throw new Error('Image file and event ID are required');\n    }\n\n    if (!token) {\n      console.warn('[Event Image Service] No authentication token provided!');\n      // Try to get token from localStorage if not provided\n      token = localStorage.getItem('token');\n      console.log('[Event Image Service] Retrieved token from localStorage:', token ? 'Token found' : 'No token found');\n      \n      if (!token) {\n        console.error('[Event Image Service] Authentication token is missing');\n        throw new Error('Authentication token is required for image upload');\n      }\n    }\n\n    console.log(`[Event Image Service] Uploading image for event ${eventId} with token: ${token.substring(0, 10)}...`);\n    console.log(`[Event Image Service] API URL: ${API_URL}/events/images/${eventId}`);\n    \n    // Create form data\n    const formData = new FormData();\n    formData.append('eventImage', imageFile);\n    \n    // Create a fresh axios instance to avoid Content-Type header issues\n    const axiosInstance = axios.create();\n    \n    // Make the request with proper headers\n    // Make sure the token is in the correct format for the Authorization header\n    // If it doesn't start with 'Bearer ', add it\n    let authToken = token;\n    if (token && !token.startsWith('Bearer ')) {\n      authToken = `Bearer ${token}`;\n      console.log('[Event Image Service] Added Bearer prefix to token');\n    }\n    \n    console.log('[Event Image Service] Sending image upload request with headers:', {\n      'Authorization': authToken ? `${authToken.substring(0, 15)}...` : 'missing',\n      'Content-Type': 'multipart/form-data (will be set by axios with boundary)'\n    });\n    \n    try {\n      const response = await axiosInstance.post(\n        `${API_URL}/events/images/${eventId}`,\n        formData,\n        {\n          headers: {\n            'Authorization': authToken,\n            // Don't set Content-Type here, axios will set it correctly with boundary\n          }\n        }\n      );\n      \n      console.log('[Event Image Service] Image upload response status:', response.status);\n      console.log('[Event Image Service] Image upload response data:', response.data);\n      \n      if (response.data.success && response.data.data && response.data.data.imageUrl) {\n        console.log('[Event Image Service] Successfully uploaded image, URL:', response.data.data.imageUrl);\n        return response.data.data.imageUrl;\n      } else {\n        console.error('[Event Image Service] Upload succeeded but response format is unexpected:', response.data);\n        throw new Error(response.data.error || 'Failed to upload image: Invalid response format');\n      }\n    } catch (requestError) {\n      console.error('[Event Image Service] Request error during image upload:', requestError);\n      console.error('[Event Image Service] Error response:', requestError.response ? requestError.response.data : 'No response data');\n      throw requestError;\n    }\n  } catch (error) {\n    console.error('[Event Image Service] Error uploading event image:', error);\n    console.error('[Event Image Service] Error details:', error.message);\n    if (error.response) {\n      console.error('[Event Image Service] Response status:', error.response.status);\n      console.error('[Event Image Service] Response data:', error.response.data);\n    }\n    throw error;\n  }\n};\n\nexport default {\n  uploadEventImage\n};\n","import { create } from 'zustand';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport axios from 'axios';\n\n// API base URL from environment\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3008';\nconst SHOP_SERVICE_URL = `${API_URL}/api/shop`;\n\n/**\n * Shop API Service\n * Contains all API calls related to shop functionality\n */\nconst shopApiService = {\n  // Fetch shop by user ID\n  fetchShopByUserId: async (userId) => {\n    try {\n      const response = await axios.get(`${SHOP_SERVICE_URL}/owner/${userId}`);\n      return response.data;\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        // Shop not found for this user is a valid case\n        return null;\n      }\n      throw error;\n    }\n  },\n\n  // Create a new shop\n  createShop: async (shopData) => {\n    const response = await axios.post(`${SHOP_SERVICE_URL}`, shopData);\n    return response.data;\n  },\n\n  // Update an existing shop\n  updateShop: async (shopData) => {\n    const response = await axios.put(`${SHOP_SERVICE_URL}/${shopData.id}`, shopData);\n    return response.data;\n  },\n\n  // Fetch shop by shop ID\n  fetchShopById: async (shopId) => {\n    const response = await axios.get(`${SHOP_SERVICE_URL}/${shopId}`);\n    return response.data;\n  },\n\n  // Fetch all shops (with optional filters)\n  fetchShops: async (filters = {}) => {\n    const response = await axios.get(`${SHOP_SERVICE_URL}`, { params: filters });\n    return response.data;\n  }\n};\n\n/**\n * Shop Store\n * Manages shop-related state and operations\n */\nexport const useShopStore = create((set, get) => ({\n  // Local state\n  currentShop: null,\n  isLoading: false,\n  error: null,\n\n  // Actions\n  setCurrentShop: (shop) => set({ currentShop: shop }),\n  clearCurrentShop: () => set({ currentShop: null }),\n  \n  // API Methods that wrap React Query hooks\n  fetchShopByUserId: async (userId) => {\n    set({ isLoading: true, error: null });\n    try {\n      const data = await shopApiService.fetchShopByUserId(userId);\n      set({ currentShop: data, isLoading: false });\n      return data;\n    } catch (error) {\n      set({ error: error.message, isLoading: false });\n      throw error;\n    }\n  },\n  \n  createShop: async (shopData) => {\n    set({ isLoading: true, error: null });\n    try {\n      const data = await shopApiService.createShop(shopData);\n      set({ currentShop: data, isLoading: false });\n      return data;\n    } catch (error) {\n      set({ error: error.message, isLoading: false });\n      throw error;\n    }\n  },\n  \n  updateShop: async (shopData) => {\n    set({ isLoading: true, error: null });\n    try {\n      const data = await shopApiService.updateShop(shopData);\n      set({ currentShop: data, isLoading: false });\n      return data;\n    } catch (error) {\n      set({ error: error.message, isLoading: false });\n      throw error;\n    }\n  }\n}));\n\n/**\n * React Query Hooks for Shop Data\n */\n\n// Hook to fetch a shop by user ID\nexport const useShopByUserId = (userId) => {\n  return useQuery({\n    queryKey: ['shop', 'user', userId],\n    queryFn: () => shopApiService.fetchShopByUserId(userId),\n    enabled: !!userId,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n};\n\n// Hook to fetch a shop by shop ID\nexport const useShopById = (shopId) => {\n  return useQuery({\n    queryKey: ['shop', shopId],\n    queryFn: () => shopApiService.fetchShopById(shopId),\n    enabled: !!shopId,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n};\n\n// Hook to fetch all shops (with optional filters)\nexport const useShops = (filters = {}) => {\n  return useQuery({\n    queryKey: ['shops', filters],\n    queryFn: () => shopApiService.fetchShops(filters),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n};\n\n// Hook to create a shop\nexport const useCreateShop = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (shopData) => shopApiService.createShop(shopData),\n    onSuccess: (data, variables) => {\n      // Invalidate relevant queries\n      queryClient.invalidateQueries({ queryKey: ['shop', 'user', variables.ownerId] });\n      queryClient.invalidateQueries({ queryKey: ['shops'] });\n      \n      // Update the cache with the new shop\n      queryClient.setQueryData(['shop', data._id], data);\n    }\n  });\n};\n\n// Hook to update a shop\nexport const useUpdateShop = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (shopData) => shopApiService.updateShop(shopData),\n    onSuccess: (data) => {\n      // Invalidate relevant queries\n      queryClient.invalidateQueries({ queryKey: ['shop', data._id] });\n      queryClient.invalidateQueries({ queryKey: ['shop', 'user', data.ownerId] });\n      queryClient.invalidateQueries({ queryKey: ['shops'] });\n      \n      // Update the cache with the updated shop\n      queryClient.setQueryData(['shop', data._id], data);\n    }\n  });\n};\n","import { create } from 'zustand';\nimport { devtools, persist } from 'zustand/middleware';\n\n/**\n * Host Store\n * \n * Following Single Responsibility Principle:\n * - This store is responsible only for UI state related to hosting events\n * - It does not handle API calls or data fetching (those are in React Query hooks)\n */\nconst useHostStore = create(\n  devtools(\n    persist(\n      (set) => ({\n        // Active tab in host dashboard \n        activeTab: 'upcoming',\n        \n        // Current event template being used\n        currentTemplateId: null,\n        \n        // UI state for event creation wizard\n        creationStep: 0,\n        \n        // Form draft for event creation\n        eventDraft: null,\n        \n        // Actions\n        setActiveTab: (tab) => set({ activeTab: tab }),\n        \n        setCurrentTemplateId: (templateId) => set({ currentTemplateId: templateId }),\n        \n        setCreationStep: (step) => set({ creationStep: step }),\n        \n        incrementCreationStep: () => set((state) => ({ \n          creationStep: state.creationStep + 1 \n        })),\n        \n        decrementCreationStep: () => set((state) => ({ \n          creationStep: Math.max(0, state.creationStep - 1) \n        })),\n        \n        setEventDraft: (draft) => set({ eventDraft: draft }),\n        \n        updateEventDraft: (updates) => set((state) => ({\n          eventDraft: state.eventDraft ? { ...state.eventDraft, ...updates } : updates\n        })),\n        \n        resetEventCreation: () => set({ \n          creationStep: 0,\n          currentTemplateId: null,\n          eventDraft: null\n        })\n      }),\n      {\n        name: 'host-storage',\n        partialize: (state) => ({\n          // Only persist the event draft to localStorage\n          eventDraft: state.eventDraft\n        }),\n      }\n    )\n  )\n);\n\nexport default useHostStore;\n","import React from 'react';\nimport { FaEdit, FaTrash, FaTags } from 'react-icons/fa';\n\n/**\n * ProductCard Component\n * \n * Single Responsibility: Display a product or service card with actions\n */\nconst ProductCard = ({ product, onEdit, onDelete }) => {\n  const {\n    name,\n    description,\n    price,\n    discountPrice,\n    images,\n    categoryName,\n    inStock,\n    isService\n  } = product;\n  \n  // Format price for display\n  const formatPrice = (amount) => {\n    return new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 2\n    }).format(amount);\n  };\n  \n  // Get the first image or use a placeholder\n  const imageUrl = images && images.length > 0 \n    ? images[0] \n    : `https://via.placeholder.com/300?text=${encodeURIComponent(name || 'Product')}`;\n  \n  return (\n    <div className=\"bg-white rounded-lg shadow-md overflow-hidden flex flex-col border border-gray-200 hover:shadow-lg transition-shadow\">\n      {/* Product Image */}\n      <div className=\"relative h-48 overflow-hidden\">\n        <img \n          src={imageUrl} \n          alt={name}\n          className=\"w-full h-full object-cover\"\n          onError={(e) => {\n            e.target.onerror = null;\n            e.target.src = \"https://via.placeholder.com/300?text=Image+Error\";\n          }}\n        />\n        \n        {/* Availability Badge */}\n        {!isService && !inStock && (\n          <div className=\"absolute top-0 right-0 bg-red-500 text-white px-2 py-1 text-xs uppercase font-semibold\">\n            Out of Stock\n          </div>\n        )}\n        \n        {/* Type Badge */}\n        <div className={`absolute top-0 left-0 ${isService ? 'bg-indigo-500' : 'bg-green-500'} text-white px-2 py-1 text-xs uppercase font-semibold`}>\n          {isService ? 'Service' : 'Product'}\n        </div>\n      </div>\n      \n      {/* Product Info */}\n      <div className=\"p-4 flex-grow\">\n        <h3 className=\"font-semibold text-lg mb-1 line-clamp-1\">{name}</h3>\n        \n        {/* Category */}\n        {categoryName && (\n          <div className=\"flex items-center mb-2 text-gray-600 text-sm\">\n            <FaTags className=\"mr-1 text-indigo-500\" />\n            <span>{categoryName}</span>\n          </div>\n        )}\n        \n        {/* Description */}\n        {description && (\n          <p className=\"text-gray-600 text-sm mb-3 line-clamp-2\">{description}</p>\n        )}\n        \n        {/* Price */}\n        <div className=\"flex items-end mt-auto\">\n          {discountPrice ? (\n            <div className=\"flex items-center\">\n              <span className=\"text-lg font-bold text-indigo-700\">\n                {formatPrice(discountPrice)}\n              </span>\n              <span className=\"ml-2 text-sm line-through text-gray-500\">\n                {formatPrice(price)}\n              </span>\n            </div>\n          ) : (\n            <span className=\"text-lg font-bold text-indigo-700\">\n              {formatPrice(price)}\n            </span>\n          )}\n        </div>\n      </div>\n      \n      {/* Actions */}\n      <div className=\"border-t border-gray-200 p-3 bg-gray-50 flex justify-end space-x-2\">\n        <button\n          onClick={() => onEdit(product)}\n          className=\"p-2 text-blue-600 hover:bg-blue-100 rounded-full transition-colors\"\n          aria-label=\"Edit product\"\n        >\n          <FaEdit />\n        </button>\n        <button\n          onClick={() => onDelete(product)}\n          className=\"p-2 text-red-600 hover:bg-red-100 rounded-full transition-colors\"\n          aria-label=\"Delete product\"\n        >\n          <FaTrash />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCard;\n","import React, { useState } from 'react';\nimport { FaImage, FaTimes, FaSpinner } from 'react-icons/fa';\nimport { useCreateProduct, useUpdateProduct } from '../queries/productQueries';\n\n/**\n * ProductForm Component\n * \n * Single Responsibility: Provide a form for creating and editing products\n * This component handles:\n * 1. Collecting product information from the user\n * 2. Submitting the data to create or update a product\n */\nconst ProductForm = ({ product, shopId, categories, onSuccess, onCancel }) => {\n  const isEditing = !!product;\n  \n  // Initial form state\n  const initialState = {\n    name: '',\n    description: '',\n    price: '',\n    discountPrice: '',\n    categoryId: '',\n    images: [],\n    inStock: true,\n    stockQuantity: 0,\n    isService: false,\n    ...product\n  };\n  \n  const [formData, setFormData] = useState(initialState);\n  const [errors, setErrors] = useState({});\n  const [images, setImages] = useState(product?.images || []);\n  \n  // Mutations for creating and updating products\n  const createProduct = useCreateProduct();\n  const updateProduct = useUpdateProduct();\n  \n  // Handle input changes\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    \n    // Handle different input types\n    const newValue = type === 'checkbox' ? checked : value;\n    \n    setFormData({\n      ...formData,\n      [name]: newValue\n    });\n    \n    // Clear error for this field when user edits it\n    if (errors[name]) {\n      setErrors({\n        ...errors,\n        [name]: null\n      });\n    }\n  };\n  \n  // Handle number input changes\n  const handleNumberChange = (e) => {\n    const { name, value } = e.target;\n    const numberValue = value === '' ? '' : parseFloat(value);\n    \n    setFormData({\n      ...formData,\n      [name]: numberValue\n    });\n    \n    // Clear error for this field\n    if (errors[name]) {\n      setErrors({\n        ...errors,\n        [name]: null\n      });\n    }\n  };\n  \n  // Handle image uploads (mock implementation - would be replaced with actual upload logic)\n  const handleImageUpload = (e) => {\n    // Mock image URL for demonstration\n    const mockImageUrl = `https://via.placeholder.com/300?text=Product+Image+${images.length + 1}`;\n    const newImages = [...images, mockImageUrl];\n    setImages(newImages);\n    \n    setFormData({\n      ...formData,\n      images: newImages\n    });\n  };\n  \n  // Remove an image\n  const handleRemoveImage = (index) => {\n    const newImages = [...images];\n    newImages.splice(index, 1);\n    setImages(newImages);\n    \n    setFormData({\n      ...formData,\n      images: newImages\n    });\n  };\n  \n  // Validate the form\n  const validateForm = () => {\n    const newErrors = {};\n    \n    if (!formData.name.trim()) {\n      newErrors.name = 'Product name is required';\n    }\n    \n    if (!formData.price && formData.price !== 0) {\n      newErrors.price = 'Price is required';\n    } else if (formData.price < 0) {\n      newErrors.price = 'Price cannot be negative';\n    }\n    \n    if (formData.discountPrice && formData.discountPrice > formData.price) {\n      newErrors.discountPrice = 'Discount price cannot be higher than the regular price';\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  \n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Validate form\n    if (!validateForm()) {\n      return;\n    }\n    \n    // Prepare the data for submission\n    const productData = {\n      ...formData,\n      shopId: shopId\n    };\n    \n    try {\n      if (isEditing) {\n        // Update existing product\n        await updateProduct.mutateAsync({\n          productId: product._id,\n          productData: productData\n        });\n      } else {\n        // Create new product\n        await createProduct.mutateAsync(productData);\n      }\n      \n      // Call success callback\n      if (onSuccess) {\n        onSuccess();\n      }\n    } catch (error) {\n      // Handle submission errors\n      console.error('Error saving product:', error);\n      setErrors({\n        submit: error.response?.data?.message || 'Failed to save product. Please try again.'\n      });\n    }\n  };\n  \n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      {/* Product Name */}\n      <div>\n        <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Product Name*\n        </label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          value={formData.name}\n          onChange={handleChange}\n          className={`w-full px-3 py-2 border ${\n            errors.name ? 'border-red-500' : 'border-gray-300'\n          } rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500`}\n          placeholder=\"Enter product name\"\n        />\n        {errors.name && <p className=\"mt-1 text-sm text-red-600\">{errors.name}</p>}\n      </div>\n      \n      {/* Product Description */}\n      <div>\n        <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Description\n        </label>\n        <textarea\n          id=\"description\"\n          name=\"description\"\n          value={formData.description}\n          onChange={handleChange}\n          rows=\"4\"\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n          placeholder=\"Enter product description\"\n        ></textarea>\n      </div>\n      \n      {/* Category */}\n      <div>\n        <label htmlFor=\"categoryId\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Category\n        </label>\n        <select\n          id=\"categoryId\"\n          name=\"categoryId\"\n          value={formData.categoryId}\n          onChange={handleChange}\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n        >\n          <option value=\"\">-- Select Category --</option>\n          {categories?.map(category => (\n            <option key={category._id} value={category._id}>\n              {category.name}\n            </option>\n          ))}\n        </select>\n      </div>\n      \n      {/* Product Type */}\n      <div>\n        <div className=\"flex items-center\">\n          <input\n            type=\"checkbox\"\n            id=\"isService\"\n            name=\"isService\"\n            checked={formData.isService}\n            onChange={handleChange}\n            className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n          />\n          <label htmlFor=\"isService\" className=\"ml-2 block text-sm text-gray-700\">\n            This is a service (not a physical product)\n          </label>\n        </div>\n      </div>\n      \n      {/* Price Information */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <div>\n          <label htmlFor=\"price\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Price*\n          </label>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n              <span className=\"text-gray-500 sm:text-sm\">₹</span>\n            </div>\n            <input\n              type=\"number\"\n              id=\"price\"\n              name=\"price\"\n              value={formData.price}\n              onChange={handleNumberChange}\n              min=\"0\"\n              step=\"0.01\"\n              className={`w-full pl-7 pr-3 py-2 border ${\n                errors.price ? 'border-red-500' : 'border-gray-300'\n              } rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500`}\n              placeholder=\"0.00\"\n            />\n          </div>\n          {errors.price && <p className=\"mt-1 text-sm text-red-600\">{errors.price}</p>}\n        </div>\n        \n        <div>\n          <label htmlFor=\"discountPrice\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Discount Price (Optional)\n          </label>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n              <span className=\"text-gray-500 sm:text-sm\">₹</span>\n            </div>\n            <input\n              type=\"number\"\n              id=\"discountPrice\"\n              name=\"discountPrice\"\n              value={formData.discountPrice}\n              onChange={handleNumberChange}\n              min=\"0\"\n              step=\"0.01\"\n              className={`w-full pl-7 pr-3 py-2 border ${\n                errors.discountPrice ? 'border-red-500' : 'border-gray-300'\n              } rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500`}\n              placeholder=\"0.00\"\n            />\n          </div>\n          {errors.discountPrice && <p className=\"mt-1 text-sm text-red-600\">{errors.discountPrice}</p>}\n        </div>\n      </div>\n      \n      {/* Stock Information - Only for physical products */}\n      {!formData.isService && (\n        <div className=\"space-y-4\">\n          <div>\n            <div className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                id=\"inStock\"\n                name=\"inStock\"\n                checked={formData.inStock}\n                onChange={handleChange}\n                className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n              />\n              <label htmlFor=\"inStock\" className=\"ml-2 block text-sm text-gray-700\">\n                In Stock\n              </label>\n            </div>\n          </div>\n          \n          <div>\n            <label htmlFor=\"stockQuantity\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Stock Quantity (0 = unlimited)\n            </label>\n            <input\n              type=\"number\"\n              id=\"stockQuantity\"\n              name=\"stockQuantity\"\n              value={formData.stockQuantity}\n              onChange={handleNumberChange}\n              min=\"0\"\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n              placeholder=\"0\"\n            />\n          </div>\n        </div>\n      )}\n      \n      {/* Product Images */}\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n          Product Images\n        </label>\n        \n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-4\">\n          {/* Existing Images */}\n          {images.map((image, index) => (\n            <div key={index} className=\"relative border border-gray-300 rounded-md overflow-hidden h-32\">\n              <img\n                src={image}\n                alt={`Product ${index + 1}`}\n                className=\"w-full h-full object-cover\"\n              />\n              <button\n                type=\"button\"\n                onClick={() => handleRemoveImage(index)}\n                className=\"absolute top-1 right-1 bg-red-500 text-white p-1 rounded-full hover:bg-red-600\"\n                aria-label=\"Remove image\"\n              >\n                <FaTimes size={14} />\n              </button>\n            </div>\n          ))}\n          \n          {/* Upload New Image Button */}\n          <button\n            type=\"button\"\n            onClick={handleImageUpload}\n            className=\"border-2 border-dashed border-gray-300 rounded-md flex flex-col items-center justify-center h-32 hover:border-indigo-500 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n          >\n            <FaImage className=\"text-gray-400 text-3xl mb-2\" />\n            <span className=\"text-sm text-gray-500\">Add Image</span>\n          </button>\n        </div>\n      </div>\n      \n      {/* Form Error Message */}\n      {errors.submit && (\n        <div className=\"bg-red-50 border-l-4 border-red-500 p-4\">\n          <p className=\"text-red-700\">{errors.submit}</p>\n        </div>\n      )}\n      \n      {/* Form Actions */}\n      <div className=\"flex justify-end space-x-3\">\n        <button\n          type=\"button\"\n          onClick={onCancel}\n          className=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50\"\n        >\n          Cancel\n        </button>\n        \n        <button\n          type=\"submit\"\n          disabled={createProduct.isPending || updateProduct.isPending}\n          className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 flex items-center justify-center disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          {(createProduct.isPending || updateProduct.isPending) ? (\n            <>\n              <FaSpinner className=\"animate-spin mr-2\" />\n              {isEditing ? 'Updating...' : 'Creating...'}\n            </>\n          ) : (\n            isEditing ? 'Update Product' : 'Create Product'\n          )}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default ProductForm;\n","import React from 'react';\nimport { FaTimes } from 'react-icons/fa';\nimport ProductForm from './ProductForm';\n\n/**\n * ProductModal Component\n * \n * Single Responsibility: Display a modal for adding or editing products\n */\nconst ProductModal = ({ isOpen, product, shopId, categories, onClose, onSuccess }) => {\n  if (!isOpen) return null;\n  \n  // Determine if we're editing or creating\n  const mode = product ? 'Edit' : 'Add New';\n  \n  return (\n    <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-black bg-opacity-50 p-4\">\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-3xl max-h-[90vh] overflow-hidden\">\n        {/* Modal Header */}\n        <div className=\"bg-gray-50 border-b border-gray-200 px-6 py-4 flex justify-between items-center\">\n          <h2 className=\"text-xl font-semibold text-gray-800\">\n            {mode} Product/Service\n          </h2>\n          <button\n            onClick={onClose}\n            className=\"p-1 rounded-full text-gray-400 hover:bg-gray-200 hover:text-gray-600 focus:outline-none\"\n            aria-label=\"Close\"\n          >\n            <FaTimes size={20} />\n          </button>\n        </div>\n        \n        {/* Modal Body */}\n        <div className=\"p-6 overflow-y-auto max-h-[calc(90vh-120px)]\">\n          <ProductForm\n            product={product}\n            shopId={shopId}\n            categories={categories}\n            onCancel={onClose}\n            onSuccess={() => {\n              onSuccess();\n              onClose();\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductModal;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FaArrowLeft, FaPlus, FaFilter, FaSearch } from 'react-icons/fa';\nimport { useAuthStore } from '../../stores/authStore';\nimport { useShopByUserId } from '../stores/shopStore';\nimport { useProductsByShopId, useDeleteProduct } from '../queries/productQueries';\nimport { useCategoriesByShopId } from '../queries/categoryQueries';\nimport ProductCard from '../components/ProductCard';\nimport ProductModal from '../components/ProductModal';\nimport { useQueryClient } from '@tanstack/react-query';\n\n/**\n * ProductsPage Component\n * \n * Single Responsibility: Provides interface for business owners to manage their products and services\n */\nconst ProductsPage = () => {\n  const navigate = useNavigate();\n  const { user } = useAuthStore();\n  const queryClient = useQueryClient();\n  \n  // State for modal and product editing\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingProduct, setEditingProduct] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [confirmDelete, setConfirmDelete] = useState(null);\n  \n  // Fetch the shop data for the current user\n  const { \n    data: shopData, \n    isLoading: shopLoading, \n    error: shopError \n  } = useShopByUserId(user?._id);\n  \n  // Fetch products for the shop\n  const {\n    data: products,\n    isLoading: productsLoading,\n    error: productsError\n  } = useProductsByShopId(shopData?._id, selectedCategory);\n  \n  // Fetch categories for the shop\n  const {\n    data: categories,\n    isLoading: categoriesLoading,\n    error: categoriesError\n  } = useCategoriesByShopId(shopData?._id);\n  \n  // Delete product mutation\n  const deleteProduct = useDeleteProduct();\n  \n  const handleBack = () => {\n    navigate('/shop/catalogue');\n  };\n  \n  const handleAddProduct = () => {\n    setEditingProduct(null);\n    setIsModalOpen(true);\n  };\n  \n  const handleEditProduct = (product) => {\n    setEditingProduct(product);\n    setIsModalOpen(true);\n  };\n  \n  const handleDeleteProduct = (product) => {\n    setConfirmDelete(product);\n  };\n  \n  const confirmDeleteProduct = async () => {\n    if (confirmDelete) {\n      try {\n        await deleteProduct.mutateAsync(confirmDelete._id);\n        // Invalidate and refetch products\n        queryClient.invalidateQueries(['products', 'shop', shopData._id]);\n      } catch (error) {\n        console.error('Error deleting product:', error);\n      } finally {\n        setConfirmDelete(null);\n      }\n    }\n  };\n  \n  const handleProductSuccess = () => {\n    // Invalidate and refetch products\n    queryClient.invalidateQueries(['products', 'shop', shopData._id]);\n  };\n  \n  // Filter products based on search term\n  const filteredProducts = products ? products.filter(product => {\n    return product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n           product.description?.toLowerCase().includes(searchTerm.toLowerCase());\n  }) : [];\n  \n  // Render loading state\n  if (shopLoading || productsLoading || categoriesLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n        <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n          <div className=\"flex items-center mb-6\">\n            <button \n              onClick={handleBack}\n              className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n              aria-label=\"Go back\"\n            >\n              <FaArrowLeft className=\"text-gray-600\" />\n            </button>\n            <h1 className=\"text-2xl font-bold\">Products & Services</h1>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            <div className=\"animate-pulse\">\n              <div className=\"h-8 bg-gray-200 rounded w-1/3 mb-6\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-full mb-4\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-full mb-4\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-8\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  // Render error state\n  if (shopError || productsError || categoriesError) {\n    const error = shopError || productsError || categoriesError;\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n        <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n          <div className=\"flex items-center mb-6\">\n            <button \n              onClick={handleBack}\n              className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n              aria-label=\"Go back\"\n            >\n              <FaArrowLeft className=\"text-gray-600\" />\n            </button>\n            <h1 className=\"text-2xl font-bold\">Products & Services</h1>\n          </div>\n          \n          <div className=\"bg-red-50 border-l-4 border-red-500 p-4 mb-6\">\n            <div className=\"flex\">\n              <p className=\"text-red-700\">\n                Error loading shop data: {error.message || 'Unable to load shop data'}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  // Render no shop state\n  if (!shopData) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n        <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n          <div className=\"flex items-center mb-6\">\n            <button \n              onClick={handleBack}\n              className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n              aria-label=\"Go back\"\n            >\n              <FaArrowLeft className=\"text-gray-600\" />\n            </button>\n            <h1 className=\"text-2xl font-bold\">Products & Services</h1>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow-md overflow-hidden p-6 text-center\">\n            <h2 className=\"text-xl font-semibold mb-2\">No Shop Found</h2>\n            <p className=\"text-gray-600 mb-6\">You need to set up your shop before you can manage your products.</p>\n            \n            <button\n              onClick={() => navigate('/shop/edit')}\n              className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\n            >\n              Set Up Your Shop\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n      <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n        {/* Header */}\n        <div className=\"flex items-center mb-6\">\n          <button \n            onClick={handleBack}\n            className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n            aria-label=\"Go back\"\n          >\n            <FaArrowLeft className=\"text-gray-600\" />\n          </button>\n          <div>\n            <h1 className=\"text-2xl font-bold\">Products & Services</h1>\n            <p className=\"text-gray-600\">{shopData.name}</p>\n          </div>\n        </div>\n        \n        {/* Main Content */}\n        <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n          <div className=\"p-6\">\n            {/* Header with actions */}\n            <div className=\"flex justify-between items-center mb-6\">\n              <h2 className=\"text-xl font-semibold\">Products & Services</h2>\n              <button\n                onClick={handleAddProduct}\n                className=\"flex items-center px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\n              >\n                <FaPlus className=\"mr-2\" />\n                Add New Item\n              </button>\n            </div>\n            \n            {/* Search and Filter */}\n            <div className=\"mb-6 flex flex-col sm:flex-row gap-4\">\n              <div className=\"relative flex-grow\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <FaSearch className=\"text-gray-400\" />\n                </div>\n                <input\n                  type=\"text\"\n                  placeholder=\"Search products...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"pl-10 pr-4 py-2 w-full border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                />\n              </div>\n              \n              <div className=\"sm:w-64\">\n                <div className=\"relative\">\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <FaFilter className=\"text-gray-400\" />\n                  </div>\n                  <select\n                    value={selectedCategory}\n                    onChange={(e) => setSelectedCategory(e.target.value)}\n                    className=\"pl-10 pr-4 py-2 w-full border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 appearance-none\"\n                  >\n                    <option value=\"\">All Categories</option>\n                    {categories && categories.map((category) => (\n                      <option key={category._id} value={category._id}>\n                        {category.name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n            \n            {/* Product List */}\n            {filteredProducts.length > 0 ? (\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n                {filteredProducts.map(product => (\n                  <ProductCard\n                    key={product._id}\n                    product={{\n                      ...product,\n                      categoryName: product.categoryId?.name || ''\n                    }}\n                    onEdit={handleEditProduct}\n                    onDelete={handleDeleteProduct}\n                  />\n                ))}\n              </div>\n            ) : (\n              <div className=\"bg-gray-50 border border-dashed border-gray-300 rounded-lg p-8 text-center\">\n                {searchTerm || selectedCategory ? (\n                  <>\n                    <p className=\"text-gray-500 mb-4\">No products found with the current filters.</p>\n                    <p className=\"text-gray-500\">Try adjusting your search or filter criteria.</p>\n                  </>\n                ) : (\n                  <>\n                    <p className=\"text-gray-500 mb-4\">No products or services added yet.</p>\n                    <p className=\"text-gray-500\">Click \"Add New Item\" to create your first product or service.</p>\n                  </>\n                )}\n              </div>\n            )}\n            \n            {/* Product Modal */}\n            <ProductModal\n              isOpen={isModalOpen}\n              product={editingProduct}\n              shopId={shopData?._id}\n              categories={categories || []}\n              onClose={() => {\n                setIsModalOpen(false);\n                setEditingProduct(null);\n              }}\n              onSuccess={handleProductSuccess}\n            />\n            \n            {/* Delete Confirmation Modal */}\n            {confirmDelete && (\n              <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-black bg-opacity-50 p-4\">\n                <div className=\"bg-white rounded-lg shadow-xl w-full max-w-md p-6\">\n                  <h3 className=\"text-lg font-semibold mb-4\">Confirm Delete</h3>\n                  <p className=\"mb-6\">Are you sure you want to delete <strong>{confirmDelete.name}</strong>? This action cannot be undone.</p>\n                  \n                  <div className=\"flex justify-end space-x-3\">\n                    <button\n                      onClick={() => setConfirmDelete(null)}\n                      className=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50\"\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      onClick={confirmDeleteProduct}\n                      className=\"px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700\"\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductsPage;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FaArrowLeft, FaStore, FaSave } from 'react-icons/fa';\nimport { useAuthStore } from '../../stores/authStore';\nimport { useShopStore } from '../stores/shopStore';\n\n/**\n * ShopEditPage Component\n * \n * Single Responsibility: Provides interface for users to create/edit their shop profile\n * This component handles:\n * 1. Loading existing shop data if available\n * 2. Form for editing shop details\n * 3. Saving shop information\n */\nconst ShopEditPage = () => {\n  const navigate = useNavigate();\n  const { user } = useAuthStore();\n  const { fetchShopByUserId, updateShop, createShop } = useShopStore();\n  \n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n  const [shopData, setShopData] = useState({\n    name: '',\n    description: '',\n    category: '',\n    contactEmail: '',\n    contactPhone: '',\n    address: '',\n    logo: '',\n    bannerImage: '',\n    isActive: true\n  });\n  \n  // Categories for shop selection\n  const categories = [\n    'Clothing & Accessories',\n    'Electronics',\n    'Home & Garden',\n    'Beauty & Personal Care',\n    'Food & Beverages',\n    'Arts & Crafts',\n    'Sports & Outdoors',\n    'Books & Media',\n    'Health & Wellness',\n    'Other'\n  ];\n\n  useEffect(() => {\n    const loadShopData = async () => {\n      if (!user?._id) {\n        navigate('/login');\n        return;\n      }\n      \n      try {\n        setIsLoading(true);\n        const existingShop = await fetchShopByUserId(user._id);\n        \n        if (existingShop) {\n          setShopData({\n            name: existingShop.name || '',\n            description: existingShop.description || '',\n            category: existingShop.category || '',\n            contactEmail: existingShop.contactEmail || user.email || '',\n            contactPhone: existingShop.contactPhone || '',\n            address: existingShop.address || '',\n            logo: existingShop.logo || '',\n            bannerImage: existingShop.bannerImage || '',\n            isActive: existingShop.isActive !== undefined ? existingShop.isActive : true\n          });\n        } else {\n          // Pre-fill with user data if available\n          setShopData(prev => ({\n            ...prev,\n            contactEmail: user.email || ''\n          }));\n        }\n      } catch (error) {\n        console.error('Error loading shop data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    loadShopData();\n  }, [user, navigate, fetchShopByUserId]);\n  \n  const handleInputChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setShopData(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!shopData.name || !shopData.description || !shopData.category) {\n      alert('Please fill in all required fields');\n      return;\n    }\n    \n    try {\n      setIsSaving(true);\n      \n      // Determine if we're creating or updating\n      const existingShop = await fetchShopByUserId(user._id);\n      \n      if (existingShop) {\n        await updateShop({\n          ...shopData,\n          id: existingShop._id\n        });\n      } else {\n        await createShop({\n          ...shopData,\n          ownerId: user._id\n        });\n      }\n      \n      // Redirect to shop profile page\n      navigate('/shop/profile');\n    } catch (error) {\n      console.error('Error saving shop:', error);\n      alert('Failed to save shop data. Please try again.');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  \n  const handleCancel = () => {\n    navigate(-1);\n  };\n  \n  if (isLoading) {\n    return (\n      <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n        <div className=\"flex items-center mb-6\">\n          <button \n            onClick={() => navigate(-1)}\n            className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n            aria-label=\"Go back\"\n          >\n            <FaArrowLeft className=\"text-gray-600\" />\n          </button>\n          <h1 className=\"text-2xl font-bold\">Business Management</h1>\n        </div>\n        \n        <div className=\"bg-white rounded-lg shadow-md p-6\">\n          <div className=\"animate-pulse\">\n            <div className=\"h-8 bg-gray-200 rounded w-1/3 mb-6\"></div>\n            <div className=\"h-4 bg-gray-200 rounded w-full mb-4\"></div>\n            <div className=\"h-4 bg-gray-200 rounded w-full mb-4\"></div>\n            <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-8\"></div>\n            \n            <div className=\"h-10 bg-gray-200 rounded w-full mb-4\"></div>\n            <div className=\"h-10 bg-gray-200 rounded w-full mb-4\"></div>\n            <div className=\"h-10 bg-gray-200 rounded w-full mb-4\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n      <div className=\"flex items-center mb-6\">\n        <button \n          onClick={handleCancel}\n          className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n          aria-label=\"Go back\"\n        >\n          <FaArrowLeft className=\"text-gray-600\" />\n        </button>\n        <h1 className=\"text-2xl font-bold flex items-center\">\n          <FaStore className=\"mr-2 text-indigo-600\" />\n          {shopData.name ? 'Edit Business Info' : 'Create Business Info'}\n        </h1>\n      </div>\n      \n      <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n        <form onSubmit={handleSubmit} className=\"p-6\">\n          <div className=\"flex flex-col gap-6\">\n            {/* Business Name */}\n            <div>\n              <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Business Name *\n              </label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                value={shopData.name}\n                onChange={handleInputChange}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500\"\n                placeholder=\"Enter your business name\"\n                required\n              />\n            </div>\n            \n            {/* Business Category */}\n            <div>\n              <label htmlFor=\"category\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Category *\n              </label>\n              <select\n                id=\"category\"\n                name=\"category\"\n                value={shopData.category}\n                onChange={handleInputChange}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500\"\n                required\n              >\n                <option value=\"\">Select a category</option>\n                {categories.map((category) => (\n                  <option key={category} value={category}>\n                    {category}\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            {/* Contact Email */}\n            <div>\n              <label htmlFor=\"contactEmail\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Contact Email\n              </label>\n              <input\n                type=\"email\"\n                id=\"contactEmail\"\n                name=\"contactEmail\"\n                value={shopData.contactEmail}\n                onChange={handleInputChange}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500\"\n                placeholder=\"Enter contact email\"\n              />\n            </div>\n            \n            {/* Contact Phone */}\n            <div>\n              <label htmlFor=\"contactPhone\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Contact Phone\n              </label>\n              <input\n                type=\"tel\"\n                id=\"contactPhone\"\n                name=\"contactPhone\"\n                value={shopData.contactPhone}\n                onChange={handleInputChange}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500\"\n                placeholder=\"Enter contact phone\"\n              />\n            </div>\n            \n            {/* Business Address */}\n            <div>\n              <label htmlFor=\"address\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Business Address\n              </label>\n              <input\n                type=\"text\"\n                id=\"address\"\n                name=\"address\"\n                value={shopData.address}\n                onChange={handleInputChange}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500\"\n                placeholder=\"Enter business address\"\n              />\n            </div>\n            \n            {/* Business Logo URL */}\n            <div>\n              <label htmlFor=\"logo\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Logo URL\n              </label>\n              <input\n                type=\"url\"\n                id=\"logo\"\n                name=\"logo\"\n                value={shopData.logo}\n                onChange={handleInputChange}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500\"\n                placeholder=\"Enter logo URL\"\n              />\n            </div>\n            \n            {/* Business Banner Image URL */}\n            <div>\n              <label htmlFor=\"bannerImage\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Banner Image URL\n              </label>\n              <input\n                type=\"url\"\n                id=\"bannerImage\"\n                name=\"bannerImage\"\n                value={shopData.bannerImage}\n                onChange={handleInputChange}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500\"\n                placeholder=\"Enter banner image URL\"\n              />\n            </div>\n            \n            {/* Shop Description */}\n            <div>\n              <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Description *\n              </label>\n              <textarea\n                id=\"description\"\n                name=\"description\"\n                value={shopData.description}\n                onChange={handleInputChange}\n                rows=\"4\"\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500\"\n                placeholder=\"Describe your shop\"\n                required\n              ></textarea>\n            </div>\n            \n            {/* Shop Status */}\n            <div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  id=\"isActive\"\n                  name=\"isActive\"\n                  checked={shopData.isActive}\n                  onChange={handleInputChange}\n                  className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n                />\n                <label htmlFor=\"isActive\" className=\"ml-2 block text-sm text-gray-700\">\n                  Shop is active and visible to customers\n                </label>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"mt-8 flex flex-col sm:flex-row sm:justify-end gap-4\">\n            <button\n              type=\"button\"\n              onClick={handleCancel}\n              className=\"w-full sm:w-auto px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              disabled={isSaving}\n              className=\"w-full sm:w-auto flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              {isSaving ? (\n                <>\n                  <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  Saving...\n                </>\n              ) : (\n                <>\n                  <FaSave className=\"mr-2\" />\n                  Save Shop\n                </>\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ShopEditPage;\n"],"names":["queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","staleTime","cacheTime","retry","TemplatePage","navigate","useNavigate","user","useAuthStore","data","shopData","isLoading","error","useShopByUserId","_id","handleBack","_jsx","className","children","_jsxs","onClick","FaArrowLeft","message","name","FaPlus","createPersistedStore","createState","options","arguments","length","undefined","set","get","api","devtools","persist","immer","_objectSpread","concat","getStorage","localStorage","partialize","state","persistedState","Object","keys","forEach","key","createStore","CATEGORY_SERVICE_URL","process","REACT_APP_API_URL","categoryApiService","async","axios","shopId","response","status","post","categoryData","id","_ref","_objectWithoutProperties","_excluded","put","delete","categoryId","create","categories","currentCategory","setCategories","setCurrentCategory","category","clearCurrentCategory","fetchCategoriesByShopId","onEdit","onDelete","image","src","alt","description","displayOrder","FaEdit","FaTrash","onSubmit","onCancel","isSubmitting","formData","setFormData","useState","imagePreview","setImagePreview","useEffect","handleChange","e","value","target","prev","preventDefault","htmlFor","type","onChange","required","placeholder","rows","handleClearImage","FaTimes","size","FaImage","accept","file","files","reader","FileReader","onload","event","result","readAsDataURL","min","disabled","isOpen","onClose","stopPropagation","CategoryForm","onConfirm","title","confirmText","cancelText","isProcessing","colorScheme","danger","icon","button","border","warning","info","FaExclamationTriangle","CategoriesPage","isModalOpen","setIsModalOpen","isConfirmDialogOpen","setIsConfirmDialogOpen","selectedCategory","setSelectedCategory","categoryToDelete","setCategoryToDelete","shopLoading","shopError","categoriesLoading","categoriesError","useQuery","queryKey","queryFn","enabled","createCategory","useCreateCategory","useQueryClient","useMutation","mutationFn","onSuccess","variables","invalidateQueries","setQueryData","updateCategory","useUpdateCategory","deleteCategory","useDeleteCategory","_","removeQueries","handleOpenModal","handleCloseModal","_Fragment","map","CategoryCard","handleDeleteConfirm","CategoryModal","mutateAsync","isPending","ConfirmDialog","loadGoogleMapsScript","Promise","resolve","reject","window","google","maps","script","document","createElement","defer","Error","onerror","head","appendChild","searchPlaces","query","city","service","places","PlacesService","request","fields","textSearch","results","PlacesServiceStatus","OK","formattedResults","_result$types","_result$geometry","_result$geometry2","place_id","address","formatted_address","types","coordinates","latitude","geometry","location","lat","longitude","lng","FeedbackPage","useParams","useShopById","FaStar","FaInfoCircle","FaSearch","InventoryPage","onCategorySelect","fetchedCategories","loading","useCategoriesByShopId","mockCategories","useMemo","scrollRef","useRef","el","current","onWheel","scrollWidth","clientWidth","deltaY","scrollLeft","deltaX","addEventListener","passive","removeEventListener","i","ref","handleResetSelection","isSelected","handleCategoryClick","FaTag","rating","reviewCount","formattedRating","parseFloat","toFixed","handleClick","count","selectedCategoryId","groupedProducts","setGroupedProducts","products","productsLoading","productsError","useProductsByShopId","grouped","reduce","acc","product","isActive","push","formatPrice","price","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","getCategoryName","find","cat","categoriesToDisplay","filter","String","images","onError","discountPrice","FaShoppingCart","ShopPage","productsRef","targetUserId","refetch","isOwner","ownerId","logo","FeedbackButton","Link","to","handleEdit","whiteSpace","CategoryScrollbar","scrollTo","top","offsetTop","behavior","ProductShopPage","FaStore","FaMapMarkerAlt","contactPhone","FaPhone","contactEmail","FaEnvelope","BusinessInfoPage","isError","BusinessInfo","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","businessHours","website","href","rel","ShopRouter","Routes","Route","path","element","ShopEditPage","ProductsPage","getEventById","_event$date","_event$location","_event$attendees2","_event$host","_event$host2","_event$host3","token","getItem","currentUserId","base64","split","replace","payload","JSON","parse","atob","eventId","formattedDate","date","start","Date","toLocaleDateString","year","month","day","locationStr","isJoined","isRequested","_event$attendees","_event$requests","setItem","attendees","some","attendee","_attendee$userId","_attendee$userId$_id","_attendee$userId2","userId","toString","requests","_request$userId","_request$userId$_id","_request$userId2","requesterId","statusMatch","participants","maxParticipants","capacity","maxAttendees","tags","host","encodeURIComponent","joinEvent","userData","currentUser","getState","userName","fullName","updatedUserData","headers","updatedEvent","includes","leaveEvent","submitFeedback","feedbackData","ExploreResults","lazy","CitySelector","ExplorePage","searchParams","setSearchParams","useSearchParams","useUserData","pageRef","userInterests","setUserInterests","searchQuery","selectedTags","getAll","activeSpecialTag","timeFilter","distance","parseInt","sortBy","selectedCity","setSelectedCity","useLocation","interests","Array","isArray","fetchUserInterests","updateFilters","useExploreSearch","view","newCity","newParams","URLSearchParams","history","replaceState","handleTimeFilterChange","hasAutoScrolled","setHasAutoScrolled","tagScrollRef","timer","setTimeout","scrollContainer","maxScrollWidth","scrollToMiddle","scrollTarget","Math","left","clearTimeout","jsx","margin","padding","backgroundColor","width","maxWidth","overflowX","position","zIndex","Suspense","fallback","currentCity","onCityChange","ExploreSearch","onSearch","emptyMessage","CatalogueEditPage","FaList","FaTags","FaBoxOpen","FaClipboard","configureAxiosAuthInterceptor","__authInterceptorId","interceptors","eject","__authResponseInterceptorId","requestInterceptorId","use","config","withCredentials","storedToken","responseInterceptorId","_error$response","originalRequest","_retry","authStore","refreshToken","logout","authService","newToken","setUser","refreshError","isAuthenticated","login","credentials","success","_error$response2","_error$response2$data","removeItem","register","_error$response3","_error$response3$data","handleOAuthVerification","authData","_error$response4","_error$response4$data","refreshAccessToken","clearError","initializeAuth","getProfile","getProfileById","updateProfile","profileData","updatePreferences","preferences","getExploreItems","params","apiParams","filteredEvents","isPublic","access","isPastEvent","isPast","eventDate","today","getDate","getMonth","getFullYear","dayOfWeek","getDay","startOfWeek","setDate","setHours","endOfWeek","getItemDetails","item","tablesData","t","circlesData","c","eventsData","defaults","getCurrentUser","Authorization","PRODUCT_SERVICE_URL","fetchProductsByShopId","url","fetchProductsByCategoryId","fetchProductById","productId","createProduct","productData","updateProduct","updateProductStock","stockData","patch","deleteProduct","updateProductsOrder","productsOrderData","productService","useCreateProduct","useUpdateProduct","useDeleteProduct","fetchCategoryById","updateCategoriesOrder","categoriesOrderData","categoryService","uploadEventImage","imageFile","FormData","append","axiosInstance","authToken","startsWith","imageUrl","requestError","SHOP_SERVICE_URL","shopApiService","useShopStore","currentShop","setCurrentShop","shop","clearCurrentShop","fetchShopByUserId","createShop","updateShop","activeTab","currentTemplateId","creationStep","eventDraft","setActiveTab","tab","setCurrentTemplateId","templateId","setCreationStep","step","incrementCreationStep","decrementCreationStep","max","setEventDraft","draft","updateEventDraft","updates","resetEventCreation","categoryName","inStock","isService","amount","isEditing","initialState","stockQuantity","errors","setErrors","setImages","checked","newValue","handleNumberChange","numberValue","validateForm","newErrors","trim","_error$response$data","submit","index","newImages","splice","handleRemoveImage","mockImageUrl","FaSpinner","mode","ProductForm","editingProduct","setEditingProduct","searchTerm","setSearchTerm","confirmDelete","setConfirmDelete","handleEditProduct","handleDeleteProduct","filteredProducts","_product$description","toLowerCase","handleAddProduct","FaFilter","_product$categoryId","ProductCard","ProductModal","handleProductSuccess","setIsLoading","isSaving","setIsSaving","setShopData","bannerImage","existingShop","email","loadShopData","handleInputChange","handleCancel","alert","cx","cy","r","FaSave"],"sourceRoot":""}