{"version":3,"file":"static/js/main~84781932.7af9896c.js","mappings":"8MAUAA,EAAAA,EAAMC,SAASC,QAAUC,wBACzBH,EAAAA,EAAMC,SAASG,iBAAkB,GAGjCC,EAAAA,EAAAA,KAEaC,EAAAA,WAAoBC,SAASC,eAAe,SACpDC,QACHC,EAAAA,EAAAA,KAACC,EAAAA,WAAgB,CAAAC,UACfF,EAAAA,EAAAA,KAACG,EAAAA,GAAmB,CAACC,OAAQC,EAAAA,GAAYH,UACvCF,EAAAA,EAAAA,KAACM,EAAAA,GAAa,CAAAJ,UACZF,EAAAA,EAAAA,KAACO,EAAAA,EAAG,U,4GCVZ,MA2OA,EA3OmBC,IAA8B,IAADC,EAAA,IAA5B,QAAEC,EAAU,GAAE,MAAEC,GAAOH,EACzC,MAAMI,GAAOC,EAAAA,EAAAA,IAAaC,GAASA,EAAMF,OACnCG,GAAWC,EAAAA,EAAAA,MACXX,GAAcY,EAAAA,EAAAA,OACbC,EAAkBC,IAAuBC,EAAAA,EAAAA,UAAS,OAClDC,EAAcC,IAAmBF,EAAAA,EAAAA,UAASV,IAC1Ca,EAAkBC,IAAuBJ,EAAAA,EAAAA,WAAS,IAClDK,EAAgBC,IAAqBN,EAAAA,EAAAA,UAAS,MAC/CO,GAAgBC,EAAAA,EAAAA,QAAO,IAG7B3B,EAAAA,WAAgB,KACdqB,EAAgBZ,EAAQ,GACvB,CAACA,IAGJ,MAAQmB,OAAQC,EAAgBC,UAAWC,IAAeC,EAAAA,EAAAA,MAGpDC,EAAStB,IAAa,OAALD,QAAK,IAALA,GAAW,QAANF,EAALE,EAAOwB,YAAI,IAAA1B,OAAN,EAALA,EAAa2B,UAAWxB,EAAKyB,KAG5CC,KAAMC,IAAaC,EAAAA,EAAAA,IAA6B,OAAL7B,QAAK,IAALA,OAAK,EAALA,EAAO0B,IAAK,CAC7DI,QAASP,KAAiB,OAALvB,QAAK,IAALA,IAAAA,EAAO0B,OAGxBK,GAA+B,OAARH,QAAQ,IAARA,OAAQ,EAARA,EAAUI,SAAU,EAG3CC,GAAe,OAALjC,QAAK,IAALA,OAAK,EAALA,EAAO0B,OAAY,OAAL1B,QAAK,IAALA,OAAK,EAALA,EAAOkC,IAG/BC,EAAeC,IACnB,IAAKA,EAAU,MAAO,IAEtB,MAAMC,EAAQD,EAASE,MAAM,KAC7B,OAAID,EAAML,QAAU,EACX,GAAAO,OAAGF,EAAM,GAAGG,OAAO,IAAED,OAAGF,EAAMA,EAAML,OAAS,GAAGQ,OAAO,IAAKC,cAE9DL,EAASI,OAAO,GAAGC,aAAa,EAInCC,EAAiBjB,GAChBA,EACEA,EAAOkB,UAAU,EAAG,GAAGF,cADV,IA4DtB,OACAG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAActD,SAAA,CAE1BgC,GAAUU,IACTW,EAAAA,EAAAA,MAACE,EAAAA,GAAI,CACHC,GAAE,aAAAR,OAAeN,EAAO,aACxBY,UAAU,sHAAqHtD,SAAA,EAE/HqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBtD,SAAA,EACtCF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,wEAAuEtD,UACpFqD,EAAAA,EAAAA,MAAA,OAAKI,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,UAAUC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAOhE,SAAA,EACvIF,EAAAA,EAAAA,KAAA,QAAMmE,EAAE,+CACRnE,EAAAA,EAAAA,KAAA,UAAQoE,GAAG,MAAMC,GAAG,IAAIC,EAAE,OAC1BtE,EAAAA,EAAAA,KAAA,QAAMuE,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,QAChC1E,EAAAA,EAAAA,KAAA,QAAMuE,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,aAGrCnB,EAAAA,EAAAA,MAAA,OAAArD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,cAAatD,SAAC,mBAC7BqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBtD,SAAA,CAAEwC,EAAqB,qBAGjE1C,EAAAA,EAAAA,KAAA,OAAK2D,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAOhE,UAC5IF,EAAAA,EAAAA,KAAA,YAAU2E,OAAO,wBAKE,IAAxBtD,EAAasB,QACZ3C,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,4BAA2BtD,SAAC,8BAE3CF,EAAAA,EAAAA,KAAA,MAAIwD,UAAU,YAAWtD,SACtBmB,EAAauD,KAAI,CAACC,EAAUC,KAE3B,MAAM1C,EAASyC,EAASzC,QAAUyC,EAAShC,GACrCkC,EAAWF,EAASG,SAAW,IAAIC,KAAKJ,EAASG,UAAUE,qBAAuB,GAExF,OACE3B,EAAAA,EAAAA,MAAA,MAEEC,UAAU,6HACV2B,QAASA,IAhGO/C,KACrBA,GACLrB,EAAS,UAADmC,OAAWd,GAAS,EA8FHgD,CAAmBhD,GAAQlC,SAAA,EAE1CqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBtD,SAAA,CACrC2E,EAASQ,QACRrF,EAAAA,EAAAA,KAAA,OACEsF,IAAKT,EAASQ,OACdE,IAAKV,EAASW,MAAI,GAAAtC,OAAa,OAANd,QAAM,IAANA,OAAM,EAANA,EAAQkB,UAAU,EAAG,IAC9CE,UAAU,uEAGZxD,EAAAA,EAAAA,KAAA,OACEwD,UAAU,+HAA8HtD,SAEvI2E,EAASW,KAAO1C,EAAY+B,EAASW,MAAQnC,EAAcjB,MAGhEmB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAetD,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,oEAAmEtD,SAChF2E,EAASW,MAAI,GAAAtC,OAAa,OAANd,QAAM,IAANA,OAAM,EAANA,EAAQkB,UAAU,EAAG,MAE3CyB,IACCxB,EAAAA,EAAAA,MAAA,QAAMC,UAAU,wBAAuBtD,SAAA,CAAC,UAAQ6E,YAItD/E,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,0BAAyBtD,SAErCgC,GAAUE,KAAe,OAAJxB,QAAI,IAAJA,OAAI,EAAJA,EAAMyB,OAC1BrC,EAAAA,EAAAA,KAAA,UACEmF,QAAUM,GAvHGC,EAACD,EAAGrD,EAAQuD,KACzCF,EAAEG,kBACGxD,GAAgB,OAALzB,QAAK,IAALA,GAAAA,EAAO0B,MAGvBX,EAAkBU,GAClBT,EAAckE,QAAUF,GAAc,cACtCnE,GAAoB,GAAK,EAgHOkE,CAAuBD,EAAGrD,EAAQyC,EAASW,MAAQX,EAAS9B,UAAY,MACxF+C,SAAU5E,IAAqBkB,GAAUJ,EACzCwB,UAAU,sIACV,aAAW,gBAAetD,SAEzBgB,IAAqBkB,GACpBmB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAuBuC,MAAM,6BAA6BjC,KAAK,OAAOD,QAAQ,YAAW3D,SAAA,EACtGF,EAAAA,EAAAA,KAAA,UAAQwD,UAAU,aAAaY,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKP,OAAO,eAAeC,YAAY,OACxFhE,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,aAAaM,KAAK,eAAeK,EAAE,wHAGrDZ,EAAAA,EAAAA,MAAA,OAAKI,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAOhE,SAAA,EAC5IF,EAAAA,EAAAA,KAAA,QAAMmE,EAAE,6CACRnE,EAAAA,EAAAA,KAAA,YAAU2E,OAAO,sBACjB3E,EAAAA,EAAAA,KAAA,QAAMuE,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,cAMzCG,EAASmB,OACRhG,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,oCAAmCtD,SAAE2E,EAASmB,SApD3D5D,GAAU0C,EAsDZ,MAOZvD,IACCvB,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,iFAAgFtD,UAC7FqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0CAAyCtD,SAAA,EACtDF,EAAAA,EAAAA,KAAA,MAAIwD,UAAU,yCAAwCtD,SAAC,mBACvDqD,EAAAA,EAAAA,MAAA,KAAGC,UAAU,qBAAoBtD,SAAA,CAAC,mCACCyB,EAAckE,QAAQ,mFAGzDtC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBtD,SAAA,EACrCF,EAAAA,EAAAA,KAAA,UACEmF,QAlHec,KACzBvE,EAAkB,MAClBF,GAAoB,EAAM,EAiHhBgC,UAAU,+JACVsC,SAAU9D,EAAW9B,SACtB,YAGDF,EAAAA,EAAAA,KAAA,UACEmF,QA3Jee,KACpBzE,GAAwB,OAALd,QAAK,IAALA,GAAAA,EAAO0B,MAE/BlB,EAAoBM,GACpBK,EACE,CAAEc,QAASjC,EAAM0B,IAAKD,OAAQX,GAC9B,CACE0E,UAAWA,KAET7E,GAAgB8E,GAAeA,EAAYC,QAAOC,IAC/BA,EAAOlE,QAAUkE,EAAOzD,MACrBpB,MAItBpB,EAAYkG,kBAAkB,CAAEC,SAAU,CAAC,eAAgB7F,EAAM0B,OACjEhC,EAAYkG,kBAAkB,CAAEC,SAAU,CAAC,eAAgB7F,EAAM0B,OAGjElB,EAAoB,MACpBO,EAAkB,MAClBF,GAAoB,EAAM,EAE5BiF,QAAUC,IAERvF,EAAoB,MACpBO,EAAkB,MAClBF,GAAoB,EAAM,IAG/B,EA8HSgC,UAAU,yJACVsC,SAAU9D,EAAW9B,SAEpB8B,EAAa,cAAgB,qBAMpC,C,0DC7OD,SAAS2E,EAAqB/D,GACnC,OAAOgE,EAAAA,EAAAA,GAAS,CACdJ,SAAU,CAAC,eAAgB5D,GAC3BiE,QAASA,ICJNC,eAA+BlE,GACpC,IACE,OAAKA,UAMkBtD,EAAAA,EAAMyH,IAAI,eAAD7D,OAAgBN,EAAO,gBAMvCN,KAAKA,MAVZ,EAWX,CAAE,MAAOoE,GAEP,MAAO,EACT,CACF,CDfmBM,CAAgBpE,GAC/BH,UAAWG,GAEf,C,4EENA,MAMMqE,EAAO,GAAA/D,OANMzD,wBAMU,iBAOtB,SAASyH,IAAgC,IAAhBC,EAAQC,UAAAzE,OAAA,QAAA0E,IAAAD,UAAA,GAAAA,UAAA,GAAG,GACzC,MAAMxG,GAAOC,EAAAA,EAAAA,IAAaC,GAASA,EAAMF,OACnCwB,EAAa,OAAJxB,QAAI,IAAJA,OAAI,EAAJA,EAAMyB,KAqFbC,KAAMgF,EAAe,CAAC,EAAC,UAAEvF,IAAc6E,EAAAA,EAAAA,GAAS,CACtDJ,SAAU,CAAC,eAAgBW,EAASI,OAAOC,KAAK,KAAMpF,GACtDyE,QApFwBC,UACxB,IAAKK,EAASxE,SAAWP,EAAQ,MAAO,CAAC,EAEzC,IAKE,MAAMqF,EAAc,CAClBC,QAAS,IACTC,QAAS,CACP,eAAgB,mBAChB,OAAU,qBAKRC,EAAkBT,EAASvC,KAAIhC,IACnC,MAAMiF,EAAG,GAAA3E,OAAM+D,EAAO,kBAAA/D,OAAiBN,EAAO,YAAAM,OAAWd,GAEzD,OAAO9C,EAAAA,EAAMyH,IAAIc,EAAKJ,EAAY,IAO9BH,SAJgBQ,QAAQC,IAAIH,IAILI,QAAO,CAACC,EAAKC,EAAKC,KAC7C,MAAMvF,EAAUuE,EAASgB,GAWnBC,EAAcF,EAAI5F,MARD,CACrB+F,YAAa,KACbC,YAAa,EACbC,gBAAiB,KACjBC,eAAgB,MAQlB,OADAP,EAAIrF,GAAWwF,EACRH,CAAG,GACT,CAAC,GAGJ,IACEQ,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAU,CACnDC,WAAW,IAAI5D,MAAO6D,cACtBxG,KAAMgF,IAEV,CAAE,MAAO7B,GAET,CAEA,OAAO6B,CACT,CAAE,MAAOZ,GASP,IACE,MAAMqC,EAASN,aAAaO,QAAQ,iBACpC,GAAID,EAAQ,CAGV,OAFoBJ,KAAKM,MAAMF,GAEZzG,IACrB,CACF,CAAE,MAAOmD,GAET,CAEA,MAAO,CAAC,CACV,GAOAhD,QAASyG,QAAQ/B,EAASxE,QAAUP,GACpC+G,UAAW,EACXC,gBAAiB,IACjBC,MAAO,EACPC,WAAYC,GAAgBC,KAAKC,IAAI,IAAO,GAAKF,EAAc,KAC/D9C,QAAUC,IACyC,IAIrD,MAAO,CAAEY,eAAcvF,YACzB,CAGO,SAAS2H,EAAe9G,GAC7B,MAAM,aAAE0E,EAAY,UAAEvF,GAAcmF,EAAgBtE,EAAU,CAACA,GAAW,IAC1E,MAAO,CAAE+G,QAASrC,EAAa1E,IAAY,CAAC,EAAGb,YACjD,C,8ECxHA,MAAM6H,E,QAAqBtK,EAAMuK,OAAO,CACtCrK,QAASC,wBACTiI,QAAS,MCGJ,SAASoC,EAAqBlH,GACnC,OAAOgE,EAAAA,EAAAA,GAAS,CACdJ,SAAU,CAAC,eAAgB5D,GAC3BiE,QAASA,ID2BNC,eAA+BlE,GACpC,IACE,OAAKA,UAMkBgH,EAAmB7C,IAAI,WAAD7D,OAAYN,EAAO,aAMhDN,KAAKA,MAVZ,EAWX,CAAE,MAAOoE,GAEP,MAAO,EACT,CACF,CC9CmBqD,CAAgBnH,GAC/BH,UAAWG,EACXuG,UAAW,KAEf,CAMO,SAASa,IACd,MAAM3J,GAAcY,EAAAA,EAAAA,MAEpB,OAAOgJ,EAAAA,EAAAA,GAAY,CACjBC,WAAY1J,IAAA,IAAC,QAAEoC,EAAO,UAAEuH,GAAW3J,EAAA,ODwChCsG,eAAiClE,EAASuH,GAC/C,IACE,IAAKvH,IAAYuH,EACf,MAAM,IAAIC,MAAM,wCAMlB,MAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,cAAeJ,EAAWA,EAAU3E,MAOpD,MAAMgF,EAAS,CACb7C,QAAS,CAEP,oBAAgBN,IASpB,aAHuBuC,EAAmBa,KAAK,kBAADvH,OAAmBN,EAAO,YAAYyH,EAAUG,IAG9ElI,IAClB,CAAE,MAAOoE,GAEP,MAAMA,CACR,CACF,CC1E4CgE,CAAkB9H,EAASuH,EAAU,EAC7EhE,UAAWA,CAAC7D,EAAMqI,KAEhBtK,EAAYkG,kBAAkB,CAAEC,SAAU,CAAC,eAAgBmE,EAAU/H,UAAW,GAGtF,CDrBAgH,EAAmBgB,aAAaC,QAAQC,KACtCN,IAEE,MAAMO,EAActC,aAAaO,QAAQ,gBACzC,IAAIgC,EAAQ,KACZ,GAAID,EACF,IAAK,IAADE,EAEFD,EAAoB,QAAfC,EADUtC,KAAKM,MAAM8B,GACXjK,aAAK,IAAAmK,OAAA,EAAZA,EAAcD,KACxB,CAAE,MAAOvF,GACP,CAMJ,OAHIuF,IACFR,EAAO7C,QAAuB,cAAC,UAAAzE,OAAa8H,IAEvCR,CAAM,IAEf9D,GACSoB,QAAQoD,OAAOxE,K,cE5B1B,MAkKA,EAlKmBlG,IAAkB,IAAjB,QAAEoC,GAASpC,EAC7B,MAAQ8B,KAAM6I,EAAS,GAAE,UAAEpJ,EAAS,QAAEqJ,EAAO,QAAEC,GAAYvB,EAAqBlH,IACzE0I,EAAaC,IAAkBnK,EAAAA,EAAAA,WAAS,IACxCoK,EAAaC,IAAkBrK,EAAAA,EAAAA,UAAS,KACxCsK,EAAeC,IAAoBvK,EAAAA,EAAAA,WAAS,IAC5CwK,EAAaC,IAAkBzK,EAAAA,EAAAA,UAAS+J,GACzCW,GAAelK,EAAAA,EAAAA,QAAO,MAG5B3B,EAAAA,WAAgB,KACd4L,EAAeV,EAAO,GACrB,CAACA,IAGJ,MAAMY,EAAe/B,IA2ErB,OAAIjI,GAAkB/B,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,oBAAmBtD,SAAC,sBACrDkL,GAAgBpL,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,mBAAkBtD,SAAC,4BAGpDqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBtD,SAAA,EAErCF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,iEAAgEtD,SACrD,IAAvB0L,EAAYjJ,QACX3C,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,+CAA8CtD,SAAC,mBAE9D0L,EAAYhH,KAAI,CAACiD,EAAK/C,KACpB9E,EAAAA,EAAAA,KAAA,OAEEwD,UAAU,+GAA8GtD,UAExHF,EAAAA,EAAAA,KAAA,OACEsF,IAAKuC,EACLtC,IAAG,eAAArC,OAAiB4B,EAAM,GAC1BtB,UAAU,+EACVwI,QAAQ,UAPLlH,QAeb9E,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,+BAA8BtD,UAC3CF,EAAAA,EAAAA,KAAA,UACEmF,QAjCkB8G,KAAO,IAADC,EACV,QAApBA,EAAAJ,EAAajG,eAAO,IAAAqG,GAApBA,EAAsBC,OAAO,EAiCvBrG,SAAUwF,EACV9H,UAAU,6MACV,aAAW,gBAAetD,SAEzBoL,GACC/H,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAuBuC,MAAM,6BAA6BjC,KAAK,OAAOD,QAAQ,YAAW3D,SAAA,EACtGF,EAAAA,EAAAA,KAAA,UAAQwD,UAAU,aAAaY,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKP,OAAO,eAAeC,YAAY,OACxFhE,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,aAAaM,KAAK,eAAeK,EAAE,wHAGrDnE,EAAAA,EAAAA,KAAA,OAAK2D,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAOhE,UAC5IF,EAAAA,EAAAA,KAAA,QAAMmE,EAAE,4BAOhBnE,EAAAA,EAAAA,KAAA,SACEoM,KAAK,OACLC,IAAKP,EACLQ,SA3HoB7G,IACxB,MAAM8G,EAAQC,MAAMC,KAAKhH,EAAEiH,OAAOH,OAClC,GAAqB,IAAjBA,EAAM5J,OAAc,OAExB4I,GAAe,GACfE,EAAe,IACfE,GAAiB,GAGjB,MAAMgB,EAAiBJ,EAAM3H,KAAIgI,GACxB,IAAI9E,SAAQ,CAAC+E,EAAS3B,KAEtB0B,EAAKR,KAAKU,WAAW,UAMtBF,EAAKG,KAAO,QACd7B,EAAO,IAAId,MAAM,GAADlH,OAAI0J,EAAKpH,KAAI,iCAK/BuG,EAAalK,OACX,CAAEe,UAASuH,UAAWyC,GACtB,CACEzG,UAAY7D,IAEVuJ,GAAemB,GAAQ,IAAIA,EAAM1K,EAAKA,KAAK2K,YAC3CJ,EAAQvK,EAAK,EAEfmE,QAAUC,IACRwE,EAAOxE,EAAM,IApBjBwE,EAAO,IAAId,MAAM,GAADlH,OAAI0J,EAAKpH,KAAI,0BAuB9B,MAKLsC,QAAQoF,WAAWP,GAChBQ,MAAKC,IACJ,MAAMC,EAAaD,EAAQ/G,QAAO/B,GAAkB,cAAbA,EAAEgJ,SAAwB3K,OAC3D4K,EAASH,EAAQ/G,QAAO/B,GAAkB,aAAbA,EAAEgJ,SAAuB3K,OAQ5D,GANI0K,EAAa,IACf1B,GAAiB,GACjB6B,YAAW,IAAM7B,GAAiB,IAAQ,KAC1CN,KAGEkC,EAAS,EAAG,CACd,MAAME,EAASL,EACZ/G,QAAO/B,GAAkB,aAAbA,EAAEgJ,SACd1I,KAAIN,GAAKA,EAAEoJ,OAAOC,UACrBlC,EAAe,oBAADvI,OAAqBqK,EAAM,eAAArK,OAAcuK,EAAOjG,KAAK,OACrE,CAEA+D,GAAe,GAEXO,EAAajG,UACfiG,EAAajG,QAAQ+H,MAAQ,GAC/B,GACA,EA4DAC,OAAO,UACPC,UAAQ,EACRtK,UAAU,WAIXgI,IACCxL,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,sGAAqGtD,SACjHsL,IAIJE,IACC1L,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,4GAA2GtD,SAAC,oCAIzH,C,8EChJV,MAAM+G,EAAUxH,wBAkShB,EAhSoBe,IAAyG,IAAxG,MAAEG,EAAK,QAAEwE,EAAO,QAAE4I,EAAO,YAAEC,EAAW,YAAEC,EAAW,WAAEC,EAAU,SAAEC,GAAW,EAAI,eAAEC,GAAgB5N,EACrH,MAAO6N,EAAMC,IAAWlN,EAAAA,EAAAA,UAAS,KAC1BmN,EAAQC,IAAapN,EAAAA,EAAAA,UAAS,KAC9BqN,EAAcC,IAAmBtN,EAAAA,EAAAA,UAAS,OAC1CuN,EAAgBC,IAAqBxN,EAAAA,EAAAA,UAAS,KAC9CsF,EAAOmI,IAAYzN,EAAAA,EAAAA,UAAS,KAC5B0N,EAAiBC,IAAsB3N,EAAAA,EAAAA,WAAS,IAChD4N,EAAYC,IAAiB7N,EAAAA,EAAAA,WAAS,IACtCc,EAAQgN,IAAa9N,EAAAA,EAAAA,WAAS,GAG/B+N,GAActO,EAAAA,EAAAA,IAAaC,GAASA,EAAMF,QAMhDwO,EAAAA,EAAAA,YAAU,KACHD,GAAgBxO,GAAUA,EAAMwB,OACX,kBAAfxB,EAAMwB,KACXxB,EAAMwB,KAAKC,OACb8M,EAAUvO,EAAMwB,KAAKC,OAAOiN,aAAeF,EAAY9M,IAAIgN,YAClD1O,EAAMwB,KAAKE,IACpB6M,EAAUvO,EAAMwB,KAAKE,IAAIgN,aAAeF,EAAY9M,IAAIgN,YAC/C1O,EAAMwB,KAAKU,IACpBqM,EAAUvO,EAAMwB,KAAKU,GAAGwM,aAAeF,EAAY9M,IAAIgN,YAGzDH,EAAUvO,EAAMwB,KAAKkN,aAAeF,EAAY9M,IAAIgN,YACtD,GACC,CAACF,EAAaxO,KAEjByO,EAAAA,EAAAA,YAAU,KACE,OAALzO,QAAK,IAALA,GAAAA,EAAO0B,KACZiN,GAAW,GAEV,CAAM,OAAL3O,QAAK,IAALA,OAAK,EAALA,EAAO0B,OAGX+M,EAAAA,EAAAA,YAAU,KACR,MAAMG,EAAsB5O,IAEtBmO,IAAoBnO,EAAM+L,OAAO8C,QAAQ,4BAC3CT,GAAmB,EACrB,EAOF,OAHAlP,SAAS4P,iBAAiB,YAAaF,GAGhC,KACL1P,SAAS6P,oBAAoB,YAAaH,EAAmB,CAC9D,GACA,CAACT,IAEJ,MAAMQ,EAAYxI,UAChBmI,GAAc,GACd,IACE,MAAM/G,QAAY5I,EAAAA,EAAMyH,IAAI,GAAD7D,OAAI+D,EAAO,sBAAA/D,OAAqBvC,EAAM0B,MACjEiM,EAAQpG,EAAI5F,KACd,CAAE,MAAOqN,GACPd,EAAS,uBACX,CAAC,QACCI,GAAc,EAChB,GA+CF,IAAKtO,EAAO,OAAO,KAEHA,EAAM0B,KAAO1B,EAAMkC,GAAnC,MAEM+M,EAAajP,EAAMkP,OAASlP,EAAMmP,WAAa,QAE/CC,EAAapP,EAAMqP,aAAerP,EAAMsP,WAAatP,EAAMsM,UAAY,qBAGvEiD,EAAeN,EAAWjN,OAAS,GAAE,GAAAO,OACpC0M,EAAWtM,UAAU,EAAG,IAAG,OAC9BsM,EAIJ,OACErM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBtD,SAAA,EACnCqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BtD,SAAA,EACvCqD,EAAAA,EAAAA,MAAA,UACEC,UAAU,8GACV2B,QAASA,EACT,iCAAAjC,OAAgC0M,GAChCxD,KAAK,SAAQlM,SAAA,EAEbqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBtD,SAAA,EACrCF,EAAAA,EAAAA,KAAA,OACEsF,IAAKyK,EACLxK,IAAKqK,EACLpM,UAAU,mKAEZxD,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,4FAEjBxD,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,wDAAuDtD,UACpEF,EAAAA,EAAAA,KAAA,QACEwD,UAAU,gMACVqM,MAAOD,EAAW1P,SAEjBgQ,SAMNhO,IACCqB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uCAAsCtD,SAAA,EACnDF,EAAAA,EAAAA,KAAA,UACEoM,KAAK,SACL5I,UAAU,yGACV2B,QAASA,IAAM4J,GAAmBoB,IAAMA,IACxC,aAAW,cAAajQ,UAExBF,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,sBAAqBtD,SAAC,QAEvC4O,IACCvL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yIAAwItD,SAAA,EAErJF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,oCAAmCtD,SAAC,8CAInDqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+BAA8BtD,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,SACEoM,KAAK,OACLwB,MAAOW,EACPjC,SAAU7G,GAAK+I,EAAU/I,EAAEiH,OAAOkB,OAClCwC,UAAW,GACXC,YAAY,iBACZ7M,UAAU,4DACV8M,MAAO,CAAEC,SAAU,SACnBzK,SAAUuI,EAAK1L,QAAU,KAE3B3C,EAAAA,EAAAA,KAAA,UACEmF,QApHG2B,UACnB,GAAKyH,EAAOiC,OAEZ,GAAInC,EAAK1L,QAAU,EACjBkM,EAAS,iCADX,CAIAA,EAAS,IACT,IAEE,MAAM4B,EAAmBlC,EAAOiC,OAAOE,oBACjCpR,EAAAA,EAAMmL,KAAK,GAADvH,OAAI+D,EAAO,aAAa,CAAEzB,KAAMiL,EAAkB7N,QAASjC,EAAM0B,MACjFmM,EAAU,IACVc,GACF,CAAE,MAAOK,GAAM,IAADgB,EAAAC,EACZ/B,GAAqB,QAAZ8B,EAAAhB,EAAIkB,gBAAQ,IAAAF,GAAM,QAANC,EAAZD,EAAcrO,YAAI,IAAAsO,OAAN,EAAZA,EAAoBlK,QAAS,oBACxC,CAVA,CAUA,EAqGgBlD,UAAU,yGACVsC,SAAUuI,EAAK1L,QAAU,IAAM4L,EAAOiC,OACtCF,MAAO,CAAEQ,QAAUzC,EAAK1L,QAAU,IAAM4L,EAAOiC,OAAU,GAAM,GAAItQ,SACpE,WAIF8O,GACChP,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,4BAA2BtD,SAAC,eACzCwG,GACF1G,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,2BAA0BtD,SAAEwG,IACzB,IAAhB2H,EAAK1L,QACP3C,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,4BAA2BtD,SAAC,YAE3CmO,EAAKzJ,KAAImM,IACP/Q,EAAAA,EAAAA,KAAA,OAAmBwD,UAAU,gCAA+BtD,SACzDuO,IAAiBsC,EAAI1O,KACpBkB,EAAAA,EAAAA,MAAAyN,EAAAA,SAAA,CAAA9Q,SAAA,EACEF,EAAAA,EAAAA,KAAA,SACEoM,KAAK,OACLwB,MAAOe,EACPrC,SAAU7G,GAAKmJ,EAAkBnJ,EAAEiH,OAAOkB,OAC1CwC,UAAW,GACX5M,UAAU,qCACV8M,MAAO,CAAE3M,MAAO,OAElB3D,EAAAA,EAAAA,KAAA,UAAQmF,QAASA,IA5HnB2B,WACpB,GAAK6H,EAAe6B,OAApB,CACA3B,EAAS,IACT,IAEE,MAAM4B,EAAmB9B,EAAe6B,OAAOE,oBACzCpR,EAAAA,EAAM2R,IAAI,GAAD/N,OAAI+D,EAAO,cAAA/D,OAAagO,GAAS,CAAE1L,KAAMiL,IACxD/B,EAAgB,MAChBE,EAAkB,IAClBU,GACF,CAAE,MAAOK,GAAM,IAADwB,EAAAC,EACZvC,GAAqB,QAAZsC,EAAAxB,EAAIkB,gBAAQ,IAAAM,GAAM,QAANC,EAAZD,EAAc7O,YAAI,IAAA8O,OAAN,EAAZA,EAAoB1K,QAAS,qBACxC,CAXkC,CAWlC,EAgH6C2K,CAAcN,EAAI1O,KAAMmB,UAAU,mCAAkCtD,SAAC,YAC5FF,EAAAA,EAAAA,KAAA,UAAQmF,QAASA,KAAQuJ,EAAgB,MAAOE,EAAkB,GAAG,EAAKpL,UAAU,kCAAiCtD,SAAC,eAGxHqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BtD,SAAA,EACvCqD,EAAAA,EAAAA,MAAA,QAAMC,UAAU,4HAA2HtD,SAAA,CAAC,IACxI6Q,EAAIvL,SAERxF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,YACfxD,EAAAA,EAAAA,KAAA,UACEmF,QAASA,IAvHX2B,WACtB+H,EAAS,IACT,UACQvP,EAAAA,EAAMgS,OAAO,GAADpO,OAAI+D,EAAO,cAAA/D,OAAagO,IAC1C5B,GACF,CAAE,MAAOK,GACPd,EAAS,uBACX,GAgHuC0C,CAAgBR,EAAI1O,KACnCmB,UAAU,uEACVqM,MAAM,aAAY3P,SACnB,qBAxBG6Q,EAAI1O,cAsC1BrC,EAAAA,EAAAA,KAAA,UACEoM,KAAK,SACL5I,UAAU,gKACV2B,QAASiJ,EACT,aAAYD,EAAW,YAAc,YACrCmC,MAAO,CAAEkB,SAAU,IAAKtR,SAEvBiO,GACCnO,EAAAA,EAAAA,KAAA,OAAK2D,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG9D,UAACF,EAAAA,EAAAA,KAAA,YAAU2E,OAAO,uBAEnH3E,EAAAA,EAAAA,KAAA,OAAK2D,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG9D,UAACF,EAAAA,EAAAA,KAAA,YAAU2E,OAAO,2BAKzH3E,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,wCAAuCtD,UAEpDF,EAAAA,EAAAA,KAAA,OACEwD,UAAS,+CAAAN,OAAiDiL,EAAW,uBAAyB,yCAC9FmC,MAAO,CAAEmB,QAAS,OAAQC,WAAY,SAAUC,IAAK,MAAOC,wBAAyB,SAAU1R,SAE9FmO,EAAKzJ,KAAImM,IACR,MAAMc,EAAa5D,GAAeA,EAAY5L,MAAQ0O,EAAI1O,IAC1D,OACEkB,EAAAA,EAAAA,MAAA,QAEEC,UAAS,gIAAAN,OACL2O,EAAa,2BAA6B,qDAC9C1M,QAAUM,IAEJyI,GACFA,EAAW6C,GAGb/C,GAAeA,EAAY6D,EAAa,KAAOd,EAAI,EAErDT,MAAO,CAAEmB,QAAS,gBAClB5B,MAAM,gDAA+C3P,SAAA,CACtD,IACG6Q,EAAIvL,OAdDuL,EAAI1O,IAeJ,QAKdqE,IAAS1G,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,4BAA2BtD,SAAEwG,MAClD,C,4GCxSV,MAAMoL,EAAa,CACjB,4BACA,8BACA,gCACA,4BACA,gCACA,iCAudF,EAjdiBtR,IAAgB,IAADuR,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAd,MAAEzR,GAAOH,EACzB,MAAOe,EAAkBC,IAAuBJ,EAAAA,EAAAA,WAAS,IAClDiR,EAAYC,IAAiBlR,EAAAA,EAAAA,WAAS,IACtCsF,EAAOmI,IAAYzN,EAAAA,EAAAA,UAAS,OAC5Bc,EAAQgN,IAAa9N,EAAAA,EAAAA,WAAS,IAC9BmR,EAAaC,IAAkBpR,EAAAA,EAAAA,WAAS,GACzCL,GAAWC,EAAAA,EAAAA,MAGXmO,GAActO,EAAAA,EAAAA,IAAaC,GAASA,EAAMF,QAGhDwO,EAAAA,EAAAA,YAAU,KACHD,GAAgBxO,GAAUA,EAAMwB,OACX,kBAAfxB,EAAMwB,KACXxB,EAAMwB,KAAKC,OACb8M,EAAUvO,EAAMwB,KAAKC,OAAOiN,aAAeF,EAAY9M,IAAIgN,YAClD1O,EAAMwB,KAAKE,IACpB6M,EAAUvO,EAAMwB,KAAKE,IAAIgN,aAAeF,EAAY9M,IAAIgN,YAC/C1O,EAAMwB,KAAKU,IACpBqM,EAAUvO,EAAMwB,KAAKU,GAAGwM,aAAeF,EAAY9M,IAAIgN,YAGzDH,EAAUvO,EAAMwB,KAAKkN,aAAeF,EAAY9M,IAAIgN,YACtD,GACC,CAACF,EAAaxO,IAEjB,MAAM8R,EAAgBjG,MAAMkG,QAAQ/R,EAAMgS,WACtChS,EAAMgS,UAAUhQ,OACY,kBAApBhC,EAAMgS,UAAyBhS,EAAMgS,UAAY,EAoBvDC,EAjBmBC,MAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC7B,GAAS,OAALzS,QAAK,IAALA,GAAY,QAAPmS,EAALnS,EAAO0S,aAAK,IAAAP,GAAa,QAAbC,EAAZD,EAAcQ,mBAAW,IAAAP,GAAzBA,EAA2BQ,UAAiB,OAAL5S,QAAK,IAALA,GAAY,QAAPqS,EAALrS,EAAO0S,aAAK,IAAAL,GAAa,QAAbC,EAAZD,EAAcM,mBAAW,IAAAL,GAAzBA,EAA2BO,UAAW,CAC/E,MAAM,SAAED,EAAQ,UAAEC,GAAc7S,EAAM0S,MAAMC,YAC5C,MAAM,mDAANpQ,OAA0DqQ,EAAQ,KAAArQ,OAAIsQ,EACxE,CACA,OAAS,OAAL7S,QAAK,IAALA,GAAY,QAAPuS,EAALvS,EAAO0S,aAAK,IAAAH,GAAZA,EAAc1N,MAAa,OAAL7E,QAAK,IAALA,GAAe,QAAVwS,EAALxS,EAAO8S,gBAAQ,IAAAN,GAAfA,EAAiBO,KACnC,mDAANxQ,OAA0DyQ,mBAAmB,GAADzQ,OACvEvC,EAAM0S,MAAM7N,KAAI,MAAAtC,OAAKvC,EAAM8S,SAASC,KAAI,aAGtC,OAAL/S,QAAK,IAALA,GAAe,QAAVyS,EAALzS,EAAO8S,gBAAQ,IAAAL,GAAfA,EAAiBM,KACb,mDAANxQ,OAA0DyQ,mBAAmB,GAADzQ,OACvEvC,EAAM8S,SAASC,KAAI,aAGnB,IAAI,EAEGb,GAGVe,EAAcC,IAClB,IAAKA,EAAM,MAAO,gBAClB,IAEE,OADU,IAAI5O,KAAK4O,GACV3O,mBAAmB,QAAS,CAAE4O,IAAK,UAAWC,MAAO,OAAQC,KAAM,WAC9E,CAAE,MAAAC,GACA,OAAOJ,CACT,GAaI1R,EAAOxB,EAAMwB,MAAQxB,EAAMuT,UAC3BC,GAAe,OAAJhS,QAAI,IAAJA,OAAI,EAAJA,EAAMqD,QAAY,OAAJrD,QAAI,IAAJA,OAAI,EAAJA,EAAMiS,YAAgB,OAAJjS,QAAI,IAAJA,OAAI,EAAJA,EAAMkS,QAAS,UAC1DC,GAAiB,OAAJnS,QAAI,IAAJA,OAAI,EAAJA,EAAMoS,SAAa,OAAJpS,QAAI,IAAJA,OAAI,EAAJA,EAAMkD,SAAU,KAC5CmP,EAAW7T,EAAMuT,UAAY,YAAc,OAG3C7F,EAAO1N,EAAM0N,MAAQ1N,EAAM8T,SAAW,GAGtCC,EAA4B,WAAjB/T,EAAM2M,QAAuB3M,EAAM+T,SAG9CC,EAAQhU,EAAMgU,OAAShU,EAAMiU,KAAO,EAGpCC,EAAOlU,EAAMmU,cAAgBnU,EAAMkU,MAAQ,KAG3CzI,EAAOzL,EAAMyL,MAAQzL,EAAMoU,WAAa,QAGxCC,GAAoB,QAAVjD,EAAApR,EAAMkT,YAAI,IAAA9B,OAAA,EAAVA,EAAYkD,MAAOtU,EAAMqU,SAAW,MAW7CE,EAAeC,IAAoBC,EAAAA,EAAAA,WAAc,IACjDC,EAAUC,IAAeF,EAAAA,EAAAA,UAAc,CAAC,IACxCG,EAAaC,IAAkBJ,EAAAA,EAAAA,WAAc,IAC7CK,EAAWC,IAAgBN,EAAAA,EAAAA,UAAc,IAsB1CO,EAAoBlQ,IACxB,MAAM,KAAED,EAAI,MAAEoI,GAAUnI,EAAEiH,OAC1B4I,GAAYtI,IAAI4I,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAU5I,GAAI,IAAE,CAACxH,GAAOoI,KAAS,GAiC5CiI,EAAsBC,IAA2BV,EAAAA,EAAAA,WAAc,IAC/DW,EAAmBC,IAAwBZ,EAAAA,EAAAA,UAAczU,EAAMsV,cAAgB,KAC/EC,GAAqBC,KAA0Bf,EAAAA,EAAAA,WAAc,IAC7DgB,GAAmBC,KAAwBjB,EAAAA,EAAAA,UAAc,IAoBhE,OACE7R,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uDAAsDtD,SAAA,EAEnEqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sDAAqDtD,SAAA,EAClEqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+BAA8BtD,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,WAAUtD,SAAC,kBAC3BF,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,0BAAyBtD,SAAC,iBACzCgC,IACClC,EAAAA,EAAAA,KAAA,UACEmF,QAASA,IAAM2Q,GAAwB,GACvCtS,UAAU,kEAAiEtD,SAC5E,YAKJS,EAAMsV,eAAiBJ,IACtB7V,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,gDAA+CtD,SAAES,EAAMsV,gBAEtEtV,EAAMsV,eAAiBJ,IACvB7V,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,uBAAsBtD,SAAC,yBAGvC2V,IACC7V,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,gGAA+FtD,UAC5GqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0CAAyCtD,SAAA,EACtDF,EAAAA,EAAAA,KAAA,MAAIwD,UAAU,yCAAwCtD,SAAC,uBACvDF,EAAAA,EAAAA,KAAA,YACE4N,MAAOmI,EACPzJ,SAAU7G,GAAKuQ,EAAqBvQ,EAAEiH,OAAOkB,OAC7CpK,UAAU,kCACV8S,KAAM,EACNjG,YAAY,wBACZvK,SAAUoQ,KAEXE,KAAqBpW,EAAAA,EAAAA,KAAA,KAAGwD,UAAU,4BAA2BtD,SAAEkW,MAChE7S,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BtD,SAAA,EAC1CF,EAAAA,EAAAA,KAAA,UACEmF,QAASA,IAAM2Q,GAAwB,GACvCtS,UAAU,+JACVsC,SAAUoQ,GAAoBhW,SAC/B,YAGDF,EAAAA,EAAAA,KAAA,UACEmF,QA9De2B,UAC7BqP,IAAuB,GACvBE,GAAqB,IACrB,IACE,MAAMzT,EAAUjC,EAAM0B,KAAO1B,EAAMkC,SAC7BvD,EAAAA,EAAM2R,IAAI,GAAD/N,OAAIzD,wBAAgE,gBAAAyD,OAAeN,GAAW,CAAEqT,aAAcF,GAAqB,CAChJpO,QAAS,CAAE,eAAgBc,aAAaO,QAAQ,YAElD8M,GAAwB,EAE1B,CAAE,MAAOnG,GAAM,IAADwB,EAAAC,EACZiF,IAAiC,QAAZlF,EAAAxB,EAAIkB,gBAAQ,IAAAM,GAAM,QAANC,EAAZD,EAAc7O,YAAI,IAAA8O,OAAN,EAAZA,EAAoB1K,QAAS,iCACpD,CAAC,QACCyP,IAAuB,EACzB,GAiDc3S,UAAU,kKACVsC,SAAUoQ,GAAoBhW,SAE7BgW,GAAsB,YAAc,qBASjD3S,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCtD,SAAA,EAC9CqD,EAAAA,EAAAA,MAAA,MAAIC,UAAU,iDAAgDtD,SAAA,EAC5DF,EAAAA,EAAAA,KAACuW,EAAAA,IAAY,CAAC/S,UAAU,oBAAoB,eAAa4I,MAE3DpM,EAAAA,EAAAA,KAAA,KAAGwD,UAAU,mFAAkFtD,SAAES,EAAM6V,aAAe,kCAIxHjT,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCtD,SAAA,EAC9CqD,EAAAA,EAAAA,MAAA,MAAIC,UAAU,uDAAsDtD,SAAA,EAClEF,EAAAA,EAAAA,KAACyW,EAAAA,IAAa,CAACjT,UAAU,oBAAoB,eAE/CD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2CAA0CtD,SAAA,EACvDqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kEAAiEtD,SAAA,CAAC,KAACF,EAAAA,EAAAA,KAACyW,EAAAA,IAAa,CAACjT,UAAU,oBAAoB,aAC/HxD,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,gCAA+BtD,SAAE0T,GAAqB,QAAV5B,EAAArR,EAAMkT,YAAI,IAAA7B,OAAA,EAAVA,EAAY0E,QAAS/V,EAAMkT,QAErFmB,IAAWzR,EAAAA,EAAAA,MAAAyN,EAAAA,SAAA,CAAA9Q,SAAA,EAAEqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kEAAiEtD,SAAA,EAACF,EAAAA,EAAAA,KAACyW,EAAAA,IAAa,CAACjT,UAAU,oBAAoB,iBAAgBxD,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,gCAA+BtD,SAAE0T,EAAWoB,QAEtNrU,EAAMgW,OAAQpT,EAAAA,EAAAA,MAAAyN,EAAAA,SAAA,CAAA9Q,SAAA,EAAEqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kEAAiEtD,SAAA,EAACF,EAAAA,EAAAA,KAAC4W,EAAAA,IAAO,CAACpT,UAAU,oBAAoB,aAAYxD,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,gCAA+BtD,SA1MvLyW,KAClB,IAAKA,EAAM,OAAO,KAClB,GAAIA,EAAKhU,QAAU,GAAKgU,EAAKE,SAAS,KAAM,OAAOF,EACnD,IACE,OAAO,IAAI1R,KAAK0R,GAAMG,mBAAmB,GAAI,CAAEC,KAAM,UAAWC,OAAQ,WAC1E,CAAE,MAAAC,GACA,OAAON,CACT,GAmM2MO,CAAWvW,EAAMgW,YAEtNpT,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kEAAiEtD,SAAA,EAACF,EAAAA,EAAAA,KAACmX,EAAAA,IAAO,CAAC3T,UAAU,oBAAoB,kBACxHxD,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,gCAA+BtD,UAACqD,EAAAA,EAAAA,MAAA,QAAMC,UAAU,4FAA2FtD,SAAA,CAAEuS,EAAc,IAAoB,IAAlBA,EAAsB,SAAW,cAE5M9R,EAAMyW,WAAY7T,EAAAA,EAAAA,MAAAyN,EAAAA,SAAA,CAAA9Q,SAAA,EAAEqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kEAAiEtD,SAAA,EAACF,EAAAA,EAAAA,KAACmX,EAAAA,IAAO,CAAC3T,UAAU,oBAAoB,iBAAgBxD,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,gCAA+BtD,UAACF,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,wFAAuFtD,SAAES,EAAMyW,iBAE3T7T,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kEAAiEtD,SAAA,EAACF,EAAAA,EAAAA,KAACqX,EAAAA,IAAK,CAAC7T,UAAU,oBAAoB,aACtHxD,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,gCAA+BtD,SAAEkM,SAErC/E,IAAVsN,IAAuBpR,EAAAA,EAAAA,MAAAyN,EAAAA,SAAA,CAAA9Q,SAAA,EAAEqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kEAAiEtD,SAAA,EAACF,EAAAA,EAAAA,KAACsX,EAAAA,IAAW,CAAC9T,UAAU,oBAAoB,cAAaxD,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,gCAA+BtD,UAACF,EAAAA,EAAAA,KAAA,QAAMwD,UAAS,yCAAAN,OAAqD,IAAVyR,EAAc,8BAAgC,gCAA+B,0BAAyBzU,SAAY,IAAVyU,EAAc,OAAM,SAAAzR,OAAOyR,UAE9YE,IAAQtR,EAAAA,EAAAA,MAAAyN,EAAAA,SAAA,CAAA9Q,SAAA,EAAEqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kEAAiEtD,SAAA,EAACF,EAAAA,EAAAA,KAAC4W,EAAAA,IAAO,CAACpT,UAAU,oBAAoB,gBAAexD,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,gCAA+BtD,SAAE0T,EAAWiB,SAE7MtR,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kEAAiEtD,SAAA,EAACF,EAAAA,EAAAA,KAACuX,EAAAA,IAAa,CAAC/T,UAAU,iCAAiC,eAC3IxD,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,gCAA+BtD,SAAEwU,GAAWnR,EAAAA,EAAAA,MAAA,QAAMC,UAAU,wGAAuGtD,SAAA,EAACF,EAAAA,EAAAA,KAACwX,EAAAA,IAAa,CAAChU,UAAU,iBAAiB,cAAiBxD,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,4GAA2GtD,SAAC,iBAK7WmO,EAAK1L,OAAS,IACbY,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCtD,SAAA,EAC9CqD,EAAAA,EAAAA,MAAA,MAAIC,UAAU,uDAAsDtD,SAAA,EAClEF,EAAAA,EAAAA,KAACqX,EAAAA,IAAK,CAAC7T,UAAU,oBAAoB,YAEvCxD,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,uBAAsBtD,SAClCmO,EAAKzJ,KAAI,CAACmM,EAAKjM,KACdvB,EAAAA,EAAAA,MAAA,QAAgBC,UAAS,kEAAAN,OAAoE4O,EAAWhN,EAAMgN,EAAWnP,QAAO,mCAAkCzC,SAAA,CACvJ,IAAR4E,IAAa9E,EAAAA,EAAAA,KAACqX,EAAAA,IAAK,CAAC7T,UAAU,iCAAkC,IAAEuN,IAD1DjM,WASnBvB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCtD,SAAA,EAC9CqD,EAAAA,EAAAA,MAAA,MAAIC,UAAU,uDAAsDtD,SAAA,EAClEF,EAAAA,EAAAA,KAACyX,EAAAA,IAAc,CAACjU,UAAU,oBAAoB,gBAEhDD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BtD,SAAA,EAC1CF,EAAAA,EAAAA,KAACyX,EAAAA,IAAc,CAACjU,UAAU,4BAC1BD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBtD,SAAA,EAC5B,OAALS,QAAK,IAALA,GAAY,QAAPsR,EAALtR,EAAO0S,aAAK,IAAApB,OAAP,EAALA,EAAczM,QAAQxF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,cAAatD,SAAES,EAAM0S,MAAM7N,QACjExF,EAAAA,EAAAA,KAAA,OAAAE,UAAW,OAALS,QAAK,IAALA,GAAY,QAAPuR,EAALvR,EAAO0S,aAAK,IAAAnB,OAAP,EAALA,EAAcwF,WAAyB,QAAlBvF,EAAIxR,EAAM8S,gBAAQ,IAAAtB,OAAA,EAAdA,EAAgBuB,OAAQ,kCAG3DnQ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBtD,SAAA,CAC7B0S,IACCrP,EAAAA,EAAAA,MAAA,KACEoU,KAAM/E,EACNlG,OAAO,SACPkL,IAAI,sBACJpU,UAAU,8NAA6NtD,SAAA,EAEvOF,EAAAA,EAAAA,KAACyX,EAAAA,IAAc,CAACjU,UAAU,WAAW,uBAErCxD,EAAAA,EAAAA,KAAC6X,EAAAA,IAAiB,CAACrU,UAAU,uBAGjCD,EAAAA,EAAAA,MAAA,UACE4B,QApOgB2S,KAAO,IAADC,EAAAC,EAC9B,MAAMN,GAAe,OAAL/W,QAAK,IAALA,GAAY,QAAPoX,EAALpX,EAAO0S,aAAK,IAAA0E,OAAP,EAALA,EAAcL,WAAyB,QAAlBM,EAAIrX,EAAM8S,gBAAQ,IAAAuE,OAAA,EAAdA,EAAgBtE,OAAQ,GAC5DgE,IACLO,UAAUC,UAAUC,UAAUT,GAC9BlF,GAAe,GACfhF,YAAW,IAAMgF,GAAe,IAAQ,MAAK,EAgOrChP,UAAU,qOAAoOtD,SAAA,EAE9OF,EAAAA,EAAAA,KAACyX,EAAAA,IAAc,CAACjU,UAAU,2BAA2B,kBAGtD+O,IAAevS,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,6CAA4CtD,SAAC,kBAKhFiC,IACCoB,EAAAA,EAAAA,MAAA,OACEC,UAAU,+EACVqM,MAAM,eACNuI,SAAU,EACVjT,QAASA,KAAU,OAAJhD,QAAI,IAAJA,OAAI,EAAJA,EAAMU,KAAM9B,EAAS,YAADmC,OAAaf,EAAKU,KACrDwV,UAAW5S,IAAqB,UAAVA,EAAE6S,KAAuB,OAAJnW,QAAI,IAAJA,GAAAA,EAAMU,IAAI9B,EAAS,YAADmC,OAAaf,EAAKU,IAAK,EAAI3C,SAAA,CAEvFoU,GACCtU,EAAAA,EAAAA,KAAA,OAAKsF,IAAKgP,EAAY/O,IAAK4O,EAAU3Q,UAAU,iIAE/CxD,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,uLAAsLtD,UACvL,QAAXkS,EAAA+B,EAAS,UAAE,IAAA/B,OAAA,EAAXA,EAAahP,gBAAiB,OAGnCG,EAAAA,EAAAA,MAAA,OAAArD,SAAA,EACEqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gEAA+DtD,SAAA,CAC3EiU,GACI,OAAJhS,QAAI,IAAJA,OAAI,EAAJA,EAAMoW,YAAYvY,EAAAA,EAAAA,KAACuX,EAAAA,IAAa,CAAC/T,UAAU,uBAAuBqM,MAAM,iBAE3EtM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBtD,SAAA,CAAEsU,GAAc,OAAJrS,QAAI,IAAJA,OAAI,EAAJA,EAAMqW,OAAOxY,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,qBAAoBtD,SAAEiC,EAAKqW,eAM/GtW,IACCqB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sDAAqDtD,SAAA,EAClEqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYtD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,UACEmF,QA/PYsT,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAC5BvD,EAAY,CACVzF,MAAOlP,EAAMkP,OAASlP,EAAMmP,WAAa,GACzC0G,YAAa7V,EAAM6V,aAAe,GAClC3C,MAAgB,QAAV6E,EAAA/X,EAAMkT,YAAI,IAAA6E,OAAA,EAAVA,EAAYhC,QAAS/V,EAAMkT,MAAQ,GACzCmB,SAAmB,QAAV2D,EAAAhY,EAAMkT,YAAI,IAAA8E,OAAA,EAAVA,EAAY1D,MAAOtU,EAAMqU,SAAW,GAC7C2B,KAAMhW,EAAMgW,MAAQ,GACpBS,SAAUzW,EAAMyW,UAAY,GAC5BhL,KAAMzL,EAAMyL,MAAQzL,EAAMoU,WAAa,GACvCJ,MAAOhU,EAAMgU,OAAShU,EAAMiU,KAAO,EACnCC,KAAMlU,EAAMmU,cAAgBnU,EAAMkU,MAAQ,GAC1CpB,UAAqB,QAAXmF,EAAAjY,EAAM0S,aAAK,IAAAuF,OAAA,EAAXA,EAAalB,WAAyB,QAAlBmB,EAAIlY,EAAM8S,gBAAQ,IAAAoF,OAAA,EAAdA,EAAgBnF,OAAQ,GAC1DrF,MAAO1N,EAAM0N,MAAQ1N,EAAM8T,SAAW,IAAIjN,KAAK,QAEjD2N,GAAiB,GACjBO,EAAa,GAAG,EAiPNlS,UAAU,wMACVsC,SAAUyP,EAAYrV,SACvB,UAGDqD,EAAAA,EAAAA,MAAA,UACE4B,QAASA,IAAM3D,GAAoB,GACnCgC,UAAU,+LACVsC,SAAUuM,EAAWnS,SAAA,EAErBF,EAAAA,EAAAA,KAAC8Y,EAAAA,IAAO,CAACtV,UAAU,WAClB6O,EAAa,cAAgB,qBAGjC3L,IAAS1G,EAAAA,EAAAA,KAAA,KAAGwD,UAAU,4BAA2BtD,SAAEwG,OAKvDwO,IACClV,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,gGAA+FtD,UAC5GqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0CAAyCtD,SAAA,EACtDF,EAAAA,EAAAA,KAAA,MAAIwD,UAAU,yCAAwCtD,SAAC,qBACvDqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWtD,SAAA,EACxBF,EAAAA,EAAAA,KAAA,SAAOwF,KAAK,QAAQoI,MAAOyH,EAASxF,MAAOvD,SAAUqJ,EAAkBnS,UAAU,kCAAkC6M,YAAY,WAC/HrQ,EAAAA,EAAAA,KAAA,YAAUwF,KAAK,cAAcoI,MAAOyH,EAASmB,YAAalK,SAAUqJ,EAAkBnS,UAAU,kCAAkC6M,YAAY,cAAciG,KAAM,KAClKtW,EAAAA,EAAAA,KAAA,SAAOwF,KAAK,OAAOoI,MAAOyH,EAASxB,KAAMvH,SAAUqJ,EAAkBnS,UAAU,kCAAkC6M,YAAY,aAAajE,KAAK,UAC/IpM,EAAAA,EAAAA,KAAA,SAAOwF,KAAK,UAAUoI,MAAOyH,EAASL,QAAS1I,SAAUqJ,EAAkBnS,UAAU,kCAAkC6M,YAAY,WAAWjE,KAAK,UACnJpM,EAAAA,EAAAA,KAAA,SAAOwF,KAAK,OAAOoI,MAAOyH,EAASsB,KAAMrK,SAAUqJ,EAAkBnS,UAAU,kCAAkC6M,YAAY,OAAOjE,KAAK,UACzIpM,EAAAA,EAAAA,KAAA,SAAOwF,KAAK,WAAWoI,MAAOyH,EAAS+B,SAAU9K,SAAUqJ,EAAkBnS,UAAU,kCAAkC6M,YAAY,WAAWjE,KAAK,YACrJpM,EAAAA,EAAAA,KAAA,SAAOwF,KAAK,OAAOoI,MAAOyH,EAASjJ,KAAME,SAAUqJ,EAAkBnS,UAAU,kCAAkC6M,YAAY,UAC7HrQ,EAAAA,EAAAA,KAAA,SAAOwF,KAAK,QAAQoI,MAAOyH,EAASV,MAAOrI,SAAUqJ,EAAkBnS,UAAU,kCAAkC6M,YAAY,QAAQjE,KAAK,YAC5IpM,EAAAA,EAAAA,KAAA,SAAOwF,KAAK,OAAOoI,MAAOyH,EAASR,KAAMvI,SAAUqJ,EAAkBnS,UAAU,kCAAkC6M,YAAY,gBAAgBjE,KAAK,UAClJpM,EAAAA,EAAAA,KAAA,SAAOwF,KAAK,WAAWoI,MAAOyH,EAAS5B,SAAUnH,SAAUqJ,EAAkBnS,UAAU,kCAAkC6M,YAAY,cACrIrQ,EAAAA,EAAAA,KAAA,SAAOwF,KAAK,OAAOoI,MAAOyH,EAAShH,KAAM/B,SAAUqJ,EAAkBnS,UAAU,kCAAkC6M,YAAY,8BAE9HoF,IAAazV,EAAAA,EAAAA,KAAA,KAAGwD,UAAU,4BAA2BtD,SAAEuV,KACxDlS,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BtD,SAAA,EAC1CF,EAAAA,EAAAA,KAAA,UACEmF,QAASA,IAAMgQ,GAAiB,GAChC3R,UAAU,+JACVsC,SAAUyP,EAAYrV,SACvB,YAGDF,EAAAA,EAAAA,KAAA,UACEmF,QArRS2B,UACrB0O,GAAe,GACfE,EAAa,IACb,IACE,MAAM9S,EAAUjC,EAAM0B,KAAO1B,EAAMkC,GAC7BkW,EAAU,CACdlJ,MAAOwF,EAASxF,MAChB2G,YAAanB,EAASmB,YACtB3C,KAAM,CAAE6C,MAAOrB,EAASxB,KAAMoB,IAAKI,EAASL,SAC5C2B,KAAMtB,EAASsB,KACfS,SAAU/B,EAAS+B,SACnBhL,KAAMiJ,EAASjJ,KACfuI,MAAOU,EAASV,MAChBG,aAAcO,EAASR,KACvBpB,SAAU,CAAEC,KAAM2B,EAAS5B,UAC3BpF,KAAMgH,EAAShH,KAAKpL,MAAM,KAAK2B,KAAIoU,GAAKA,EAAExI,SAAQnK,OAAO6C,gBAErD5J,EAAAA,EAAM2R,IAAI,GAAD/N,OAAIzD,wBAAgE,gBAAAyD,OAAeN,GAAWmW,EAAS,CACpHpR,QAAS,CAAE,eAAgBc,aAAaO,QAAQ,YAElDmM,GAAiB,GACjB8D,OAAOxF,SAASyF,QAClB,CAAE,MAAOvJ,GAAM,IAADgB,EAAAC,EACZ8E,GAAyB,QAAZ/E,EAAAhB,EAAIkB,gBAAQ,IAAAF,GAAM,QAANC,EAAZD,EAAcrO,YAAI,IAAAsO,OAAN,EAAZA,EAAoBlK,QAAS,0BAC5C,CAAC,QACC8O,GAAe,EACjB,GA4PYhS,UAAU,kKACVsC,SAAUyP,EAAYrV,SAErBqV,EAAc,YAAc,iBAQtChU,IACCvB,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,gGAA+FtD,UAC5GqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0CAAyCtD,SAAA,EACtDF,EAAAA,EAAAA,KAAA,MAAIwD,UAAU,yCAAwCtD,SAAC,kBACvDF,EAAAA,EAAAA,KAAA,KAAGwD,UAAU,qBAAoBtD,SAAC,6HAClCqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBtD,SAAA,EACrCF,EAAAA,EAAAA,KAAA,UACEmF,QAASA,IAAM3D,GAAoB,GACnCgC,UAAU,+JACVsC,SAAUuM,EAAWnS,SACtB,YAGDF,EAAAA,EAAAA,KAAA,UACEmF,QAAS2B,UACP,IACEwL,GAAc,GACdzD,EAAS,MACT,MAAMjM,EAAUjC,EAAM0B,KAAO1B,EAAMkC,SAC7BvD,EAAAA,EAAMgS,OAAO,GAADpO,OAAIzD,wBAAgE,gBAAAyD,OAAeN,IACrG7B,EAAS,YACTkY,OAAOxF,SAASyF,QAClB,CAAE,MAAOvJ,GAEPd,EAAS,6CACTyD,GAAc,GACd9Q,GAAoB,EACtB,GAEFgC,UAAU,yJACVsC,SAAUuM,EAAWnS,SAEpBmS,EAAa,cAAgB,qBAMpC,C,4GC1dV,MAoRA,EApR0B7R,IAAgH,IAA/G,MAAEG,EAAK,UAAEwY,GAAY,EAAK,YAAE7Q,EAAc,EAAC,gBAAE8Q,GAAkB,EAAK,YAAE/Q,EAAc,GAAE,gBAAEE,GAAiB/H,EAElI,MAAMO,GAAWC,EAAAA,EAAAA,MAGXqY,EAAgB1Y,EAAMkT,MAAQlT,EAAMkT,KAAK6C,MAC3C,MACE,MAAM4C,EAAU,IAAIrU,KAAKtE,EAAMkT,KAAK6C,OAC9B5C,EAAMwF,EAAQC,UAAUlK,WAAWmK,SAAS,EAAG,KAC/CzF,EAAQuF,EAAQG,eAAe,QAAS,CAAE1F,MAAO,UACjDC,EAAOsF,EAAQI,cACrB,MAAM,GAANxW,OAAU4Q,EAAG,KAAA5Q,OAAI6Q,EAAK,KAAA7Q,OAAI8Q,EAC3B,EAND,GAOA,qBAiBE2F,GAAiBC,EAAAA,EAAAA,UAAQ,IAPP,SAACjM,GAA6B,IAApByC,EAAShJ,UAAAzE,OAAA,QAAA0E,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAC5C,IAAKuG,EAAS,MAAO,kBACrB,MAAMkM,EAAiC,kBAAZlM,EAAuBA,GAAiB,OAAPA,QAAO,IAAPA,OAAO,EAAPA,EAASmM,OAAQ,kBAC7E,OAAOD,EAAYlX,OAASyN,EAAS,GAAAlN,OAAM2W,EAAYvW,UAAU,EAAG8M,GAAU,OAAQyJ,CACxF,CAISE,CAAgB1R,IACtB,CAACA,IAGE2R,KAAcrZ,EAAMkT,OAAQlT,EAAMkT,KAAK6C,SACzCuD,EAAAA,EAAAA,GAAO,IAAIhV,KAAKtE,EAAMkT,KAAK6C,QAoBzBwD,EAAcA,KAClBnZ,EAAS,aAADmC,OAAcvC,EAAM0B,IAAG,SAAQ,GAElC8X,EAAQC,IAAahZ,EAAAA,EAAAA,WAAS,IAC9BiZ,EAAmBC,IAAwBlZ,EAAAA,EAAAA,WAAS,IACpDmZ,EAAYC,IAAiBpZ,EAAAA,EAAAA,UAAS,IACtCqZ,EAAaC,IAAkBtZ,EAAAA,EAAAA,UAAS,IACxCuZ,EAAiBC,IAAsBxZ,EAAAA,EAAAA,UAAS,KAChDyZ,EAAcC,IAAmB1Z,EAAAA,EAAAA,WAAS,GAG3C2Z,EAAQ,GAAA7X,OAAM+V,OAAOxF,SAASuH,OAAM,YAAA9X,OAAWvC,EAAM0B,KA4DrD4Y,EAAaC,IAAsC,IAArC,OAAEC,EAAM,UAAEC,EAAS,SAAEtV,GAAUoV,EACjD,OACElb,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,OAAMtD,SAClB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAG0E,KAAIyW,IACnBrb,EAAAA,EAAAA,KAAA,UAEEoM,KAAK,SACLtG,SAAUA,EACVX,QAASA,IAAMiW,EAAUC,GACzB7X,UAAU,6BAA4BtD,SAErCmb,GAAQF,GACPnb,EAAAA,EAAAA,KAACsb,EAAAA,IAAM,CAAC9X,UAAU,qBAElBxD,EAAAA,EAAAA,KAACub,EAAAA,IAAS,CAAC/X,UAAU,yCATlB6X,MAaL,EAIV,OACE9X,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCtD,SAAA,EAC7CqD,EAAAA,EAAAA,MAAA,OACEC,UAAS,2BAAAN,OAA6BiW,EAAY,GAAK,kBACvDhU,QAAS+U,EACTlU,KAAMmT,OAAY9R,EAAY,SAC9B+Q,SAAUe,OAAY9R,EAAY,EAClCmU,WAAYrC,OAAY9R,EAAY5B,IAAqB,UAAVA,EAAE6S,KAAiB4B,GAAa,EAAIha,SAAA,EAEnFqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUtD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OACEsF,IAAK3E,EAAMqP,YACXzK,IAAK5E,EAAMkP,MACXrM,UAAU,mEACVwI,QAAQ,SAEToN,IACCpZ,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,2GAA0GtD,SACvHoI,QAIP/E,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQtD,SAAA,EACrBqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mCAAkCtD,SAAA,EAC/CqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBtD,SAAA,EACtCF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,8CAA6CtD,SAAES,EAAMkP,QApIrD4L,MACzB,MAAMC,EAA8B,YAAjB/a,EAAMgb,QACvB3b,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,6FAA4FtD,SAAC,YAC5F,WAAjBS,EAAMgb,QACN3b,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,mGAAkGtD,SAAC,WACnH,KAEF,OACEF,EAAAA,EAAAA,KAAAgR,EAAAA,SAAA,CAAA9Q,SACGwb,GACA,EA2HMD,MAEFlT,IACCvI,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,wBAAuBtD,SAlK/B0b,KAClB,IAAKA,EAAI,MAAO,GAEhB,OADa,IAAI3W,KAAK2W,GACV9E,mBAAmB,GAAI,CAAEC,KAAM,UAAWC,OAAQ,WAAY,EA+JvBE,CAAW3O,SAIxDvI,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,oDAAmDtD,SAC/DyZ,KAEHpW,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCtD,SAAA,EACrDF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,4BAA2BtD,UAACF,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,YAAWtD,SAAES,EAAMkb,gBAC9EtY,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBtD,SAAA,EACtCF,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,0EAAyEtD,SACtFmZ,KAEDF,IAAca,IACdha,EAAAA,EAAAA,KAAA,UACEmF,QAAUM,IACRA,EAAEG,kBA5HIH,KACtBA,EAAEG,kBACFqS,UAAUC,UAAUC,UAAU4C,GAC3B5N,MAAK,KACJiN,GAAU,GAEV5M,YAAW,IAAM4M,GAAU,IAAQ,IAAK,IAEzC0B,OAAMnM,IACiC,GACtC,EAmHYoM,CAAetW,EAAE,EAEnBjC,UAAS,iFAAAN,OAAmFiX,EAAS,8BAAgC,6CAA8Cja,SAElLia,GAASna,EAAAA,EAAAA,KAACgc,EAAAA,IAAO,CAACxY,UAAU,iBAAiBuJ,KAAM,MAAS/M,EAAAA,EAAAA,KAACic,EAAAA,IAAO,CAACzY,UAAU,kBAAkBuJ,KAAM,mBAUnHoM,GACCnZ,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,qHAAoHtD,SAC/G,aAAjBS,EAAM2M,OAAwB,WAAa,qBAE5C0M,GACFzW,EAAAA,EAAAA,MAAA,UACE4B,QAnIoBM,IAC1BA,EAAEG,kBACF0U,GAAqB,EAAK,EAkIpB9W,UAAU,oJAAmJtD,SAAA,EAE7JF,EAAAA,EAAAA,KAACkc,EAAAA,IAAS,CAAC1Y,UAAU,OAAOuJ,KAAM,KAAM,mBAGxC,KAGHsN,IACCra,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,iFAAgFtD,UAC7FqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oDAAmDtD,SAAA,EAChEF,EAAAA,EAAAA,KAAA,MAAIwD,UAAU,uCAAsCtD,SAAC,oBACrDqD,EAAAA,EAAAA,MAAA,QAAM4Y,SArIarV,UAC3BrB,EAAE2W,iBACFtB,GAAgB,GAEhB,IAEE,MAAMuB,EAAe,CACnB9B,aACAE,cACA6B,QAAS3B,SAIL4B,EAAAA,QAAaC,eAAe7b,EAAM0B,IAAKga,GAG7C/B,GAAqB,GACrBE,EAAc,GACdE,EAAe,GACfE,EAAmB,IAGnB6B,MAAM,+BACR,CAAE,MAAO/V,GAEP+V,MAAM,+CACR,CAAC,QACC3B,GAAgB,EAClB,GAyG6C5a,SAAA,EACnCqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMtD,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOwD,UAAU,+CAA8CtD,SAAC,kCAChEF,EAAAA,EAAAA,KAACib,EAAU,CAACE,OAAQZ,EAAYa,UAAWZ,EAAe1U,SAAU+U,QAGtEtX,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMtD,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOwD,UAAU,+CAA8CtD,SAAC,2CAChEF,EAAAA,EAAAA,KAACib,EAAU,CAACE,OAAQV,EAAaW,UAAWV,EAAgB5U,SAAU+U,QAGxEtX,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMtD,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOwD,UAAU,+CAA8CtD,SAAC,yBAChEF,EAAAA,EAAAA,KAAA,YACE4N,MAAO+M,EACPrO,SAAW7G,GAAMmV,EAAmBnV,EAAEiH,OAAOkB,OAC7C9H,SAAU+U,EACVrX,UAAU,gIACV8S,KAAK,IACLjG,YAAY,+CAIhB9M,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BtD,SAAA,EACzCF,EAAAA,EAAAA,KAAA,UACEoM,KAAK,SACLjH,QApKYuX,KAC1BpC,GAAqB,EAAM,EAoKbxU,SAAU+U,EACVrX,UAAU,8LAA6LtD,SACxM,YAGDF,EAAAA,EAAAA,KAAA,UACEoM,KAAK,SACLtG,SAAU+U,GAA+B,IAAfN,GAAoC,IAAhBE,EAC9CjX,UAAS,2IAAAN,OAA6J,IAAfqX,GAAoC,IAAhBE,EAAqB,mCAAqC,qCAAsCva,SAE1Q2a,EAAe,gBAAkB,iCAO1C,E,kCCtQV,MA+QA,EA7QqB8B,KAAO,IAADC,EACzB,MAAQta,KAAMua,EAAS,GAAE,UAAE9a,EAAS,QAAEqJ,IAAY0R,EAAAA,EAAAA,MAC5CrJ,GAAWsJ,EAAAA,EAAAA,OACVC,EAAWC,IAAgB7b,EAAAA,EAAAA,WAAuB,QAAdwb,EAAAnJ,EAAS3S,aAAK,IAAA8b,OAAA,EAAdA,EAAgBI,YAAa,aAGxE5N,EAAAA,EAAAA,YAAU,KAAO,IAAD8N,EACI,QAAlBA,EAAIzJ,EAAS3S,aAAK,IAAAoc,GAAdA,EAAgBF,WAClB/D,OAAOkE,QAAQC,aAAa,CAAC,EAAGvd,SAASgQ,MAC3C,GACC,CAAC4D,EAAS3S,QACb,MAAOuc,EAAaC,IAAkBlc,EAAAA,EAAAA,UAAS,IAKzCmc,EAAe5c,MACdA,EAAMkT,OAASlT,EAAMkT,KAAK6C,SACxBuD,EAAAA,EAAAA,GAAO,IAAIhV,KAAKtE,EAAMkT,KAAK6C,QAI9B8G,EAAiBX,EAAOxW,QAAO1F,IAEnC,MAAM8c,EAA2B,aAAdT,EACjBO,EAAY5c,GACE,YAAdqc,EACoB,YAAjBrc,EAAM2M,QAAyC,aAAjB3M,EAAM2M,QACnCiQ,EAAY5c,KAA4B,aAAjBA,EAAM2M,SAA0B3M,EAAM2M,QAG7DoQ,EAAuC,KAAvBL,EAAY7M,QAC/B7P,EAAMkP,OAASlP,EAAMkP,MAAMa,cAAcmG,SAASwG,EAAY3M,eAEjE,OAAO+M,GAAcC,CAAa,IAI9BvW,EAAWqW,EAAe5Y,KAAIjE,GAASA,EAAM0B,OAC7C,aAAEiF,IAAiBJ,EAAAA,EAAAA,GAAgBC,GAyHzC,OA9EAiI,EAAAA,EAAAA,YAAU,KAMR,MAAMuO,GAASC,EAAAA,EAAAA,IA1FAne,wBA0Fe,CAC5Boe,qBAAsB,GACtBC,kBAAmB,IACnBpW,QAAS,IACTqW,WAAY,CAAC,YAAa,WAC1Bre,iBAAiB,EACjBse,UAAU,IAIZL,EAAOM,GAAG,WAAW,KAGnB5d,EAAAA,GAAY6d,eAAe,CAAE1X,SAAU,CAAC,gBAAiB2X,OAAO,GAAQ,IAG1ER,EAAOM,GAAG,iBAAkBvX,IAS1B,MAAM0X,EAAaC,aAAY,KAE7Bhe,EAAAA,GAAY6d,eAAe,CAAE1X,SAAU,CAAC,gBAAiB2X,OAAO,GAAQ,GACvE,KAEH,MAAO,IAAMG,cAAcF,EAAW,IAGxCT,EAAOM,GAAG,cAAevQ,IACoB,IAI7CiQ,EAAOM,GAAG,uBAAwB3b,IAEhCjC,EAAAA,GAAY6d,eAAe,CAAE1X,SAAU,CAAC,gBAAiB2X,OAAO,GAAQ,IAI1ER,EAAOM,GAAG,yBAA0B3b,IAIlCwF,QAAQC,IAAI,CACV1H,EAAAA,GAAY6d,eAAe,CAAE1X,SAAU,CAAC,YAAa+X,OAAO,IAC5Dle,EAAAA,GAAY6d,eAAe,CAAE1X,SAAU,CAAC,mBAAoB+X,OAAO,IACnEle,EAAAA,GAAY6d,eAAe,CAAE1X,SAAU,CAAC,gBAAiB+X,OAAO,MAC/DpR,MAAK,KACkE,IACvE2O,OAAMpV,IAC6C,GACpD,IAIJ,MAAM8X,EAAYhR,YAAW,KAE3BmQ,EAAOc,KAAK,qBAAsB,CAAEC,MAAM,EAAM7V,WAAW,IAAI5D,MAAO6D,eAAgB,GACrF,KAEH,MAAO,KACL6V,aAAaH,GACbb,EAAOiB,YACgD,CACxD,GACA,KAGDrb,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BtD,SAAA,EAE1CqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCtD,SAAA,EACrDF,EAAAA,EAAAA,KAAA,MAAIwD,UAAU,kCAAiCtD,SAAC,WAEhDqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gCAA+BtD,SAAA,EAC5CF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,uEAAsEtD,UACnFF,EAAAA,EAAAA,KAAC6e,EAAAA,IAAQ,CAACrb,UAAU,6BAEtBxD,EAAAA,EAAAA,KAAA,SACEoM,KAAK,OACL5I,UAAU,+KACV6M,YAAY,kBACZzC,MAAOyP,EACP/Q,SAAW7G,GAAM6X,EAAe7X,EAAEiH,OAAOkB,gBAM/CrK,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BtD,SAAA,EACvCqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYtD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,UACEmF,QAASA,IAAM8X,EAAa,YAC5BzZ,UAAS,2EAAAN,OACS,aAAd8Z,EACE,kCACA,gDACD9c,SACN,eAeDF,EAAAA,EAAAA,KAAA,UACEmF,QAASA,IAAM8X,EAAa,WAC5BzZ,UAAS,2EAAAN,OACS,YAAd8Z,EACE,kCACA,gDACD9c,SACN,gBAIHF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,gCAA+BtD,UAC5CqD,EAAAA,EAAAA,MAAA,UACE4B,QAASA,IAAM8X,EAAa,YAC5BzZ,UAAS,iGAAAN,OACS,aAAd8Z,EACE,kCACA,gDACD9c,SAAA,EAELF,EAAAA,EAAAA,KAAA,OAAK+F,MAAM,6BAA6BvC,UAAU,UAAUM,KAAK,OAAOD,QAAQ,YAAYE,OAAO,eAAc7D,UAC/GF,EAAAA,EAAAA,KAAA,QAAMiE,cAAc,QAAQC,eAAe,QAAQF,YAAa,EAAGG,EAAE,yFACjE,mBAOXpC,GACC/B,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,gBAAetD,SAAC,sBAC7BkL,GACFpL,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,eAActD,SAAC,2BAC3Bsd,EAAe7a,QAOlB3C,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,0BAAyBtD,SAErCsd,EAAe5Y,KAAIjE,IAClB,MAAMgJ,GAAsB,OAAZrC,QAAY,IAAZA,OAAY,EAAZA,EAAe3G,EAAM0B,OAAQ,CAAC,EACxC+W,EAAkBzP,EAAQrB,YAAc,EAC9C,OACEtI,EAAAA,EAAAA,KAAA,OAAqBwD,UAAU,gCAA+BtD,UAC5DF,EAAAA,EAAAA,KAAC8e,EAAiB,CAChBne,MAAOA,EACPwY,UAAyB,YAAd6D,EACX1U,YAAaqB,EAAQrB,aAAe,EACpC8Q,gBAAiBA,EACjB/Q,YAAasB,EAAQtB,YACrBE,gBAAiBoB,EAAQpB,mBAPnB5H,EAAM0B,IASV,OArBZrC,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,gBAAetD,SACJ,KAAvBmd,EAAY7M,OAAa,sBAAAtN,OACAma,EAAW,YAAAna,OACb,aAAd8Z,EAA2B,WAAaA,EAAS,sBAuB3D,C,oEC1RV,MAmCA,EA9BiBxc,IAAmB,IAAlB,IAAEgY,EAAM,IAAIhY,EAC5B,MAAOue,EAAUC,IAAe5d,EAAAA,EAAAA,WAAS,GACnC6d,EAAazG,EAAIhI,OAAO0O,MAAM,EAPpB,KAQVC,EAASF,EAAWtc,OAPJ,GAQhByc,EAAaL,IAAaI,EAC5BF,GAPoBI,EAFF,GAUPJ,EARsBC,MAAM,EAAGG,IAA7BC,IAAOD,EAUxB,OACErf,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,4CAA2CtD,UACxDqD,EAAAA,EAAAA,MAAA,QAAMC,UAAU,gCAA+BtD,SAAA,CAC5Ckf,EACAD,IAAWJ,IACVxb,EAAAA,EAAAA,MAAAyN,EAAAA,SAAA,CAAA9Q,SAAA,CAAE,MACI,KACJF,EAAAA,EAAAA,KAAA,UACEwD,UAAU,iDACV2B,QAASA,IAAM6Z,GAAY,GAC3B5S,KAAK,SAAQlM,SACd,gBAMH,EChBV,EAdkBM,IAAA,IAAC,UAAEwc,EAAS,aAAEC,EAAY,KAAEsC,EAAO,IAAI/e,EAAA,OACvDR,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,2DAA0DtD,SACtEqf,EAAK3a,KAAI4a,IACRxf,EAAAA,EAAAA,KAAA,UAEEwD,UAAS,wEAAAN,OAA0E8Z,IAAcwC,EAAIlH,IAAM,8DAAgE,iBAC3KnT,QAASA,IAAM8X,EAAauC,EAAIlH,KAAKpY,SAEpCsf,EAAIC,OAJAD,EAAIlH,QAOT,E,wBCZR,MAiBA,EAjBwB9X,IAAA,IAAC,cAAEkf,EAAgB,IAAIlf,EAAA,OAC7CR,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,MAAKtD,SACQ,IAAzBwf,EAAc/c,QACb3C,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,4BAA2BtD,SAAC,2BAE3CF,EAAAA,EAAAA,KAAA,MAAIwD,UAAU,YAAWtD,SACtBwf,EAAc9a,KAAI,CAAC+a,EAAG7a,KACrBvB,EAAAA,EAAAA,MAAA,MAAsBC,UAAU,yEAAwEtD,SAAA,EACtGF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,uCAAsCtD,SAAEyf,EAAE9P,OAAS,kBAClE7P,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,wBAAuBtD,SAAEyf,EAAE7F,MAAQ6F,EAAEC,UACnDD,EAAE9L,OAAQ7T,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,6BAA4BtD,SAAEyf,EAAE9L,SAHnD8L,EAAE9c,IAAMiC,QAQnB,E,kCCXDgC,eAAe+Y,IACpB,IAAK,IAADC,EAEF,MAAM1d,EAAqC,QAA/B0d,EAAGjf,EAAAA,EAAakf,WAAWnf,YAAI,IAAAkf,OAAA,EAA5BA,EAA8Bzd,IAE7C,IAAKD,EAEH,MAAO,GAWT,aANuB9C,EAAAA,EAAMyH,IAAI,wBAAD7D,OAAyBd,KAMzCE,KAAKA,MAAQ,EAC/B,CAAE,MAAOoE,GAEP,MAAO,EACT,CACF,CCvBO,SAASsZ,EAAiBpd,GAC/B,OAAOgE,EAAAA,EAAAA,GAAS,CACdJ,SAAU,CAAC,WAAY5D,GACvBiE,QAASA,ICJNC,eAA2BlE,GAChC,IACE,IAAKA,EAEH,MAAO,GAIT,MAMMjC,SANiBrB,EAAAA,EAAMyH,IAAI,eAAD7D,OAAgBN,KAMzBN,KAAKA,KAC5B,OAAO3B,IAASA,EAAM6X,KAAO7X,EAAM6V,cAAqB,EAC1D,CAAE,MAAO9P,GAEP,MAAO,EACT,CACF,CDhBmBuZ,CAAYrd,GAC3BH,UAAWG,GAEf,CETO,SAASsd,IAEd,OAAOpY,QAAQ+E,QAAQ,CACrB,CAAEyL,IAAK,UAAWmH,MAAO,WACzB,CAAEnH,IAAK,UAAWmH,MAAO,WACzB,CAAEnH,IAAK,QAASmH,MAAO,SACvB,CAAEnH,IAAK,OAAQmH,MAAO,SAE1B,C,cCLO,SAASU,EAA2Bvd,GACzC,OAAOgE,EAAAA,EAAAA,GAAS,CACdJ,SAAU,CAAC,qBAAsB5D,GACjCiE,QAASA,ICJNC,eAAqClE,GAC1C,IACE,OAAKA,UAMkBtD,EAAAA,EAAMyH,IAAI,eAAD7D,OAAgBN,EAAO,oBAMvCN,KAAKA,MAVZ,EAWX,CAAE,MAAOoE,GAEP,MAAO,EACT,CACF,CDfmB0Z,CAAsBxd,GACrCH,UAAWG,GAEf,CEPA,MAKA,GALuBiH,E,QAAAA,IAAOwW,IAAG,CAC/BrD,UAAW,UACXC,aAAcuC,GAAOa,EAAI,CAAErD,UAAWwC,QCHlCvY,EAAUxH,wBA+IhB,EA7IwBe,IAA2B,IAA1B,QAAEoC,EAAO,QAAEmL,GAASvN,EAC3C,MAAO6N,EAAMC,IAAWlN,EAAAA,EAAAA,UAAS,KAC1BmN,EAAQC,IAAapN,EAAAA,EAAAA,UAAS,KAC9BqN,EAAcC,IAAmBtN,EAAAA,EAAAA,UAAS,OAC1CuN,EAAgBC,IAAqBxN,EAAAA,EAAAA,UAAS,KAC9CsF,EAAOmI,IAAYzN,EAAAA,EAAAA,UAAS,KAC5B4K,EAASsU,IAAclf,EAAAA,EAAAA,WAAS,GAGjCkO,EAAYxI,UAChBwZ,GAAW,GACX,IACE,MAAMpY,QAAY5I,EAAAA,EAAMyH,IAAI,GAAD7D,OAAI+D,EAAO,sBAAA/D,OAAqBN,IAC3D0L,EAAQpG,EAAI5F,KACd,CAAE,MAAOqN,GACPd,EAAS,uBACX,CAAC,QACCyR,GAAW,EACb,IAGFlR,EAAAA,EAAAA,YAAU,KACJxM,GAAS0M,GAAW,GAEvB,CAAC1M,IAwCJ,OAAKmL,GAGHxK,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qCAAoCtD,SAAA,EACjDF,EAAAA,EAAAA,KAAA,MAAIwD,UAAU,qBAAoBtD,SAAC,gBAClCwG,IAAS1G,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,4BAA2BtD,SAAEwG,KACtDnD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBtD,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,SACEoM,KAAK,OACLwB,MAAOW,EACPjC,SAAU7G,GAAK+I,EAAU/I,EAAEiH,OAAOkB,OAClCwC,UAAW,GACXC,YAAY,iBACZ7M,UAAU,sCAEZxD,EAAAA,EAAAA,KAAA,UACEmF,QArDa2B,UACnB,GAAKyH,EAAOiC,OAAZ,CACA3B,EAAS,IACT,UACQvP,EAAAA,EAAMmL,KAAK,GAADvH,OAAI+D,EAAO,aAAa,CAAEzB,KAAM+I,EAAOiC,OAAQ5N,YAC/D4L,EAAU,IACVc,GACF,CAAE,MAAOK,GAAM,IAADgB,EAAAC,EACZ/B,GAAqB,QAAZ8B,EAAAhB,EAAIkB,gBAAQ,IAAAF,GAAM,QAANC,EAAZD,EAAcrO,YAAI,IAAAsO,OAAN,EAAZA,EAAoBlK,QAAS,oBACxC,CAR0B,CAQ1B,EA6CMlD,UAAU,yEAAwEtD,SACnF,WAIF8L,GACChM,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,wBAAuBtD,SAAC,qBAEvCF,EAAAA,EAAAA,KAAA,MAAIwD,UAAU,YAAWtD,SACtBmO,EAAKzJ,KAAImM,IACR/Q,EAAAA,EAAAA,KAAA,MAAkBwD,UAAU,0BAAyBtD,SAClDuO,IAAiBsC,EAAI1O,KACpBkB,EAAAA,EAAAA,MAAAyN,EAAAA,SAAA,CAAA9Q,SAAA,EACEF,EAAAA,EAAAA,KAAA,SACEoM,KAAK,OACLwB,MAAOe,EACPrC,SAAU7G,GAAKmJ,EAAkBnJ,EAAEiH,OAAOkB,OAC1CwC,UAAW,GACX5M,UAAU,sCAEZxD,EAAAA,EAAAA,KAAA,UACEmF,QAASA,IA9DL2B,WACpB,GAAK6H,EAAe6B,OAApB,CACA3B,EAAS,IACT,UACQvP,EAAAA,EAAM2R,IAAI,GAAD/N,OAAI+D,EAAO,cAAA/D,OAAagO,GAAS,CAAE1L,KAAMmJ,EAAe6B,SACvE9B,EAAgB,MAChBE,EAAkB,IAClBU,GACF,CAAE,MAAOK,GAAM,IAADwB,EAAAC,EACZvC,GAAqB,QAAZsC,EAAAxB,EAAIkB,gBAAQ,IAAAM,GAAM,QAANC,EAAZD,EAAc7O,YAAI,IAAA8O,OAAN,EAAZA,EAAoB1K,QAAS,qBACxC,CATkC,CASlC,EAoD+B2K,CAAcN,EAAI1O,KACjCmB,UAAU,uEAAsEtD,SACjF,UAGDF,EAAAA,EAAAA,KAAA,UACEmF,QAASA,KAAQuJ,EAAgB,MAAOE,EAAkB,GAAG,EAC7DpL,UAAU,sDAAqDtD,SAChE,eAKHqD,EAAAA,EAAAA,MAAAyN,EAAAA,SAAA,CAAA9Q,SAAA,EACEqD,EAAAA,EAAAA,MAAA,QAAMC,UAAU,0FAAyFtD,SAAA,CAAC,IACtG6Q,EAAIvL,SAERxF,EAAAA,EAAAA,KAAA,UACEmF,QAASA,KAAQuJ,EAAgBqC,EAAI1O,KAAMuM,EAAkBmC,EAAIvL,KAAK,EACtEhC,UAAU,wCAAuCtD,SAClD,UAGDF,EAAAA,EAAAA,KAAA,UACEmF,QAASA,IAxEH2B,WACtB+H,EAAS,IACT,UACQvP,EAAAA,EAAMgS,OAAO,GAADpO,OAAI+D,EAAO,cAAA/D,OAAagO,IAC1C5B,GACF,CAAE,MAAOK,GACPd,EAAS,uBACX,GAiE+B0C,CAAgBR,EAAI1O,KACnCmB,UAAU,uCAAsCtD,SACjD,eArCE6Q,EAAI1O,YA3BF,IAyEb,ECtBV,EArGkBke,KAChB,MAAM,QAAE3d,IAAY4d,EAAAA,EAAAA,KACdzf,GAAWC,EAAAA,EAAAA,OAETsB,KAAMua,EAAS,GAAI9a,UAAW0e,EAAiBrV,QAASsV,ICjBzD9Z,EAAAA,EAAAA,GAAS,CACdJ,SAAU,CAAC,UACXK,QAASgZ,IDoBLlf,EAAQkc,EAAO8D,MAAKlb,IACxB,MAAMmb,EAAenb,EAAEpD,KAAOoD,EAAE5C,GAEhC,OAAOge,OAAOD,KAAkBC,OAAOje,EAAQ,IAI3Coa,EAAY8D,GAAehgB,GAASA,EAAMkc,YAC1CC,EAAe6D,GAAehgB,GAASA,EAAMmc,gBAE3C3a,KAAMkW,EAAM,GAAIzW,UAAWgf,GAAiBf,EAAiBpd,IAC7DN,KAAMid,EAAO,GAAIxd,UAAWif,IEjC7Bpa,EAAAA,EAAAA,GAAS,CACdJ,SAAU,CAAC,aACXK,QAASqZ,KFgCH5d,KAAM5B,EAAU,GAAIqB,UAAWkf,IAAqBta,EAAAA,EAAAA,GAAqB/D,IACzEN,KAAMod,EAAgB,GAAI3d,UAAWmf,GAA2Bf,EAA2Bvd,GAE7Fue,GAAgBtgB,EAAAA,EAAAA,IAAaC,IAAK,IAAAsgB,EAAA,OAAc,QAAdA,EAAItgB,EAAMF,YAAI,IAAAwgB,OAAA,EAAVA,EAAY/e,GAAG,IAErDgf,EAAgB3gB,EAAQigB,MAAKW,IAAMA,EAAElf,QAAUkf,EAAEze,MAAQse,IACzDpT,EAAkC,WAAX,OAAbsT,QAAa,IAAbA,OAAa,EAAbA,EAAerb,MAO/B,GAAIya,EAAiB,OAAOzgB,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,gCAA+BtD,SAAC,qBAC3E,GAAIwgB,IAAkB/f,EAAO,OAAOX,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,+BAA8BtD,SAAC,qBAQlF,OACEqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sCAAqCtD,SAAA,EAElDqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4FAA2FtD,SAAA,EACxGF,EAAAA,EAAAA,KAAA,UACEwD,UAAU,wDACV2B,QAASA,IAAMpE,GAAU,GACzB,aAAW,OACXqL,KAAK,SAAQlM,UAEbF,EAAAA,EAAAA,KAAA,OAAK2D,MAAM,KAAKC,OAAO,KAAKE,KAAK,OAAOD,QAAQ,YAAYE,OAAO,eAAc7D,UAACF,EAAAA,EAAAA,KAAA,QAAMiE,cAAc,QAAQC,eAAe,QAAQF,YAAY,IAAIG,EAAE,yBAEzJnE,EAAAA,EAAAA,KAAA,OACEsF,IAAK3E,EAAMsP,WAAatP,EAAMsM,UAAYtM,EAAMqP,aAAe,qBAC/DzK,IAAK5E,EAAMkP,OAASlP,EAAMmP,WAAa,QACvCtM,UAAU,2EAEZxD,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,gDAA+CtD,SAAES,EAAMkP,OAASlP,EAAMmP,eAEvFiR,GACC/gB,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,oBAAmBtD,SAAC,oBAEnCF,EAAAA,EAAAA,KAACuhB,EAAQ,CAAC/I,IAAKA,IAEhBwI,GACChhB,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,oBAAmBtD,SAAC,qBAEnCF,EAAAA,EAAAA,KAACwhB,EAAS,CACRxE,UAAWA,EACXC,aAlCiBuC,IACvBvC,EAAauC,EAAI,EAkCXD,KAAMA,EAAKlZ,QAAOmZ,GAAmB,SAAZA,EAAIlH,SAGjC/U,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQtD,SAAA,CAEpB6N,IACC/N,EAAAA,EAAAA,KAACyhB,EAAe,CAAC7e,QAASA,EAASmL,QAASA,IAE/B,YAAdiP,IACCiE,GACEjhB,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,oBAAmBtD,SAAC,wBAEnCF,EAAAA,EAAAA,KAAC0hB,EAAAA,EAAU,CAAChhB,QAASA,EAASC,MAAOA,KAG1B,kBAAdqc,IACCkE,GACElhB,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,oBAAmBtD,SAAC,8BAEnCF,EAAAA,EAAAA,KAAC2hB,EAAe,CAACjC,cAAeA,KAGrB,UAAd1C,IAAyBhd,EAAAA,EAAAA,KAAC4hB,EAAAA,EAAQ,CAACjhB,MAAOA,SAEzC,C,0DG/GV,MAAMkhB,EAAc,CAClB,kBACA,gBACA,mBACA,iBACA,gBACA,kBACA,gBACA,mBACA,gBACA,mBAQWC,EAAmBC,IAC9B,IAAKA,EAAY,OAAOF,EAAY,GAGpC,IAAIG,EAAO,EACX,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAWpf,OAAQsf,IACrCD,GAASA,GAAQ,GAAKA,EAAQD,EAAWG,WAAWD,GACpDD,GAAcA,EAIhB,MAAM7Z,EAAQqB,KAAK2Y,IAAIH,GAAQH,EAAYlf,OAC3C,OAAOkf,EAAY1Z,EAAM,E,cC/B3B,MA2SA,GAxS0Bia,EAAAA,EAAAA,aAAW,CAAA5hB,EAA+D6L,KAAS,IAAvE,QAAEsB,EAAO,MAAE0U,EAAK,UAAEC,EAAS,SAAEC,EAAQ,UAAEC,EAAS,SAAEC,GAAUjiB,EAEhG,MAWMkiB,GAAmB9I,EAAAA,EAAAA,UAAQ,IAC3ByI,EAAc,KACX1U,EAAQgV,WACmB,kBAAnBhV,EAAQiV,OAAuBjV,EAAQiV,OAAOvgB,KAAOsL,EAAQiV,OAAO/f,GAAM8K,EAAQiV,SAC1FjV,EAAQkV,YACR,WACN,CAACR,EAAO1U,IAELmV,GAAmBlJ,EAAAA,EAAAA,UAAQ,IAAMkI,EAAgBY,IAAmB,CAACA,KACpEK,EAAYC,IAAiB5hB,EAAAA,EAAAA,UAAS,MACvC6hB,GAAWrhB,EAAAA,EAAAA,WACVshB,EAAmBC,IAAwB/hB,EAAAA,EAAAA,WAAS,IACpD2d,EAAUC,IAAe5d,EAAAA,EAAAA,WAAS,GA6BzC,SAASgiB,EAActJ,GACrB,IAAKA,EAAM,OAAO,KAElB,MAAMuJ,EAAyB,gHACzBC,EAAQ,GACd,IACIC,EADAC,EAAY,EAEZlL,EAAM,EACV,KAAuD,QAA/CiL,EAAQF,EAAuBI,KAAK3J,KAAiB,CAI3D,GAHIyJ,EAAMpb,MAAQqb,GAChBF,EAAMI,KAAK5J,EAAKoF,MAAMsE,EAAWD,EAAMpb,QAErCob,EAAM,GAERD,EAAMI,MACJ1jB,EAAAA,EAAAA,KAAA,QAEEwD,UAAU,qGAAoGtD,SAE7GqjB,EAAM,IAHFjL,WAMJ,GAAIiL,EAAM,GAEfD,EAAMI,MACJ1jB,EAAAA,EAAAA,KAAA,QAEEwD,UAAU,qGAAoGtD,SAE7GqjB,EAAM,IAHFjL,WAMJ,GAAIiL,EAAM,IAAMA,EAAM,GAAI,CAE/B,IAAI1b,EAAM0b,EAAM,IAAMA,EAAM,GACxB1b,IAAQ,eAAe6W,KAAK7W,KAC9BA,EAAM,UAAYA,GAEpByb,EAAMI,MACJ1jB,EAAAA,EAAAA,KAAA,KAEE2X,KAAM9P,EACN6E,OAAO,SACPkL,IAAI,sBACJpU,UAAU,wDAAuDtD,SAEhEqjB,EAAM,IAAMA,EAAM,IANdjL,KASX,CACAkL,EAAYD,EAAMpb,MAAQob,EAAM,GAAG5gB,MACrC,CAIA,OAHI6gB,EAAY1J,EAAKnX,QACnB2gB,EAAMI,KAAK5J,EAAKoF,MAAMsE,IAEjBF,CACT,CAGA,OACE/f,EAAAA,EAAAA,MAAAyN,EAAAA,SAAA,CAAA9Q,SAAA,EACEqD,EAAAA,EAAAA,MAAA,OACEC,UAAS,8BAAAN,OAAgCmf,EAAQ,cAAgB,iBAAkBniB,SAAA,EAGjFmiB,IACAC,GACEtiB,EAAAA,EAAAA,KAAA,OACEsF,IAAKgd,EACL/c,IAAI,SACJ/B,UAAU,2EACV8M,MAAO,CAAEqT,MAAO,MAGlB3jB,EAAAA,EAAAA,KAAA,OACEwD,UAAU,oIACV8M,MAAO,CAAEqT,MAAO,GAAIzjB,SAhIX6C,KACnB,IAAKA,EAAU,MAAO,IAEtB,MAAMC,EAAQD,EAASE,MAAM,KAC7B,OAAID,EAAML,QAAU,EACX,GAAAO,OAAGF,EAAM,GAAGG,OAAO,IAAED,OAAGF,EAAMA,EAAML,OAAS,GAAGQ,OAAO,IAAKC,cAE9DL,EAASI,OAAO,GAAGC,aAAa,EA2H5BN,CAAY6K,EAAQkV,YACQ,kBAAnBlV,EAAQiV,SAAwBjV,EAAQiV,OAAOpd,MAAQmI,EAAQiV,OAAOxO,UAAYzG,EAAQiV,OAAOvO,OAAS,KAClH1G,EAAQiV,QACR,eAKRrf,EAAAA,EAAAA,MAAA,OACEC,UAAS,2CACT8M,MAAO,CAAEqT,MAAO,GAAIzjB,SAAA,CAGnByN,EAAQiW,UACPrgB,EAAAA,EAAAA,MAAA,OACEC,UAAS,uHAAAN,OACPmf,EAAQ,yCAA2C,uCAErD/R,MAAO,CAAEuT,UAAW,GAAItT,SAAU,OAClCpL,QAAUM,IACRA,EAAEG,kBAEF,MAAMke,EAAoBnW,EAAQiW,QAAQG,UACtCD,GAA0C,oBAAdtB,GAE9BA,EAAU,KAAMsB,EAClB,EACA5jB,SAAA,EAEFqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uCAAsCtD,SAAA,EACnDF,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,uDAAsDtD,SACnEyN,EAAQiW,QAAQf,YACoB,kBAA3BlV,EAAQiW,QAAQhB,SACrBjV,EAAQiW,QAAQhB,OAAOpd,MAAQmI,EAAQiW,QAAQhB,OAAOxO,WACzD,aAEJpU,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,4DAA2DtD,SACxEyN,EAAQiW,QAAQ9J,MAAQnM,EAAQiW,QAAQhE,SAAW,kBAGxDrc,EAAAA,EAAAA,MAAA,OAAKwC,MAAM,6BAA6BpC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAQV,UAAU,mCAAkCtD,SAAA,EAC5NF,EAAAA,EAAAA,KAAA,YAAU2E,OAAO,mBACjB3E,EAAAA,EAAAA,KAAA,QAAMmE,EAAE,qCAMdZ,EAAAA,EAAAA,MAAA,OACEC,UAAU,0IACV,aAAY6e,EAAQ,eAAiB,iBACrC2B,cA/IiBve,KACpB4c,GAAS1U,EAAQsW,WAAatW,EAAQuW,UAC3Cze,EAAE2W,iBACF+G,GAAqB,GAAK,EA6IlBgB,aA5JeC,MAClB/B,GAAS1U,EAAQsW,WAAatW,EAAQuW,SAC3ClB,EAAcxV,YAAW,KACvB2V,GAAqB,EAAK,GAlCJ,KAmCA,EAyJhBkB,WAvJaC,KACrB3F,aAAaoE,GACbC,EAAc,KAAK,EAsJX3W,IAAMkY,IAEJtB,EAASpd,QAAU0e,EACA,oBAARlY,EAAoBA,EAAIkY,GAC1BlY,IAAKA,EAAIxG,QAAU0e,EAAE,EAEhCpf,QAjJgBM,IACxBA,EAAEG,kBACE+H,EAAQsW,WAAatW,EAAQuW,SACjC1B,GAAaA,EAAU7U,EAAQ,EA8IGzN,SAAA,EAG1BF,EAAAA,EAAAA,KAAA,OAAKwD,UAAS,gCAAAN,OAAkCmf,EAAQ,2BAA0B,aAAAnf,OAAgB4f,IAAqB5iB,SACpHmiB,EAAQ,MACP1U,EAAQkV,YACmB,kBAAnBlV,EAAQiV,SAAwBjV,EAAQiV,OAAOpd,MAAQmI,EAAQiV,OAAOxO,UAAYzG,EAAQiV,OAAOvO,OAAS1G,EAAQiV,OAAOvgB,KAAOsL,EAAQiV,OAAO/f,KACvJ8K,EAAQiV,QACR,aAGJ5iB,EAAAA,EAAAA,KAAA,OAAAE,SACIyN,EAAQsW,WAAatW,EAAQuW,SAC3BlkB,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,uBAAsBtD,SAAC,8BAEvCqD,EAAAA,EAAAA,MAAAyN,EAAAA,SAAA,CAAA9Q,SAAA,EACEF,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,cAAatD,SAC1B6e,IAAapR,EAAQmM,MAAQ,IAAInX,QAnN9B,IAoNAygB,EAAczV,EAAQmM,MACtBsJ,GAAezV,EAAQmM,MAAQ,IAAIoF,MAAM,EArNzC,KAqNiE,UAErEvR,EAAQmM,MAAQ,IAAInX,OAvNhB,MAwNJY,EAAAA,EAAAA,MAAA,UACEC,UAAS,mOAGT8M,MAAO,CAAEkU,cAAe,UACxB,gBAAezF,EACf5Z,QAASM,IACPA,EAAEG,kBACFoZ,GAAYhS,IAASA,GAAK,EAC1B9M,SAAA,CAED6e,EAAW,YAAc,aAC1B/e,EAAAA,EAAAA,KAAA,OACEwD,UAAS,6CAAAN,OAA+C6b,EAAW,aAAe,IAClFjb,KAAK,OACLC,OAAO,eACPC,YAAY,IACZH,QAAQ,YACR,cAAY,OAAM3D,UAElBF,EAAAA,EAAAA,KAAA,QAAMiE,cAAc,QAAQC,eAAe,QAAQC,EAAE,8BAOnEZ,EAAAA,EAAAA,MAAA,OAAKC,UAAS,+DAAAN,OAAiEmf,EAAQ,gBAAkB,iBAAkBniB,SAAA,CACxH,IAAI+E,KAAK0I,EAAQ9E,WAAWiO,mBAAmB,GAAI,CAAEC,KAAM,UAAWC,OAAQ,YAC9EqL,KAAW1U,EAAQsW,WAAatW,EAAQuW,WACvCvW,EAAQ8W,SAA8B,YAAnB9W,EAAQL,QACzBtN,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,kBAGfxD,EAAAA,EAAAA,KAAA,OAAK+F,MAAM,6BAA6BvC,UAAU,0BAA0BM,KAAK,eAAeD,QAAQ,YAAW3D,UACjHF,EAAAA,EAAAA,KAAA,QAAMmE,EAAE,+IAKbke,GAA4B,WAAnB1U,EAAQL,SAChBtN,EAAAA,EAAAA,KAAA,UACEwD,UAAU,sGACV2B,QAASA,IAAMsd,GAAYA,EAAS9U,GACpCkC,MAAM,iBAAgB3P,SACvB,uBASVgjB,IACCljB,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,6EAA4EtD,UACzFqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oDAAmDtD,SAAA,EAChEF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,6CAA4CtD,SAAC,0BAC5DqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBtD,SAAA,EACrCF,EAAAA,EAAAA,KAAA,UACEwD,UAAU,oDACV2B,QAASA,IAAMge,GAAqB,GAAOjjB,SAC5C,YAGDF,EAAAA,EAAAA,KAAA,UACEwD,UAAU,2DACV2B,QAASA,KACPge,GAAqB,GACrBZ,GAAYA,EAAS5U,EAAQtL,IAAI,EACjCnC,SACH,qBAOR,ICvPP,EA5CwBM,IAAqC,IAApC,YAAEkkB,EAAW,cAAEvD,GAAe3gB,EAErD,MAAMmkB,EAAmBD,EAAYre,QAAOzF,GAAQA,EAAKiC,KAAOse,IAEhE,GAAgC,IAA5BwD,EAAiBhiB,OACnB,OAAO,KA2BT,OACEY,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wLAAuLtD,SAAA,EACpMqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBtD,SAAA,EACpCF,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAAA,cA3B4B,IAA5B2kB,EAAiBhiB,QAEjBY,EAAAA,EAAAA,MAAA,QAAMC,UAAU,gBAAetD,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,8BAA6BtD,SAAEykB,EAAiB,GAAGnf,OAAY,gBAG9C,IAA5Bmf,EAAiBhiB,QAExBY,EAAAA,EAAAA,MAAA,QAAMC,UAAU,gBAAetD,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,8BAA6BtD,SAAEykB,EAAiB,GAAGnf,OAAY,OAAK,KACpFxF,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,8BAA6BtD,SAAEykB,EAAiB,GAAGnf,OAAY,kBAKjFjC,EAAAA,EAAAA,MAAA,QAAMC,UAAU,gBAAetD,SAAA,EAC7BqD,EAAAA,EAAAA,MAAA,QAAMC,UAAU,8BAA6BtD,SAAA,CAAEykB,EAAiBhiB,OAAO,aAAc,mBAcrF,E,gECzCV,MACMsE,EAAO,GAAA/D,OAAMzD,wBAAiE,iBAG9EmlB,EAAYhiB,GAAO,QAAAM,OAAaN,GAG/B,SAASiiB,EAAcjiB,GAC5B,MAAOkiB,EAAUC,IAAe3jB,EAAAA,EAAAA,UAAS,KAClCsjB,EAAaM,IAAkB5jB,EAAAA,EAAAA,UAAS,IACzC6jB,GAAYrjB,EAAAA,EAAAA,QAAO,MACnBhB,GAAOC,EAAAA,EAAAA,IAAaC,GAASA,EAAMF,OACnCskB,GAActjB,EAAAA,EAAAA,SAAO,IAG3BwN,EAAAA,EAAAA,YAAU,KACR,GAAKxM,EAuBL,OAtBAtD,EAAAA,EAAMyH,IAAI,GAAD7D,OAAI+D,EAAO,KAAA/D,OAAIN,IACrBuK,MAAKjF,IAEJ,MAAMid,EAAiB3Y,MAAMkG,QAAQxK,EAAI5F,MACrC4F,EAAI5F,KAAKsC,KAAIwgB,IAAGxP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXwP,GAAG,IACNxC,OAAQwC,EAAIxC,QAAUwC,EAAIzC,UAAYyC,EAAIhjB,QAAU,GAEpDijB,UAAWxE,OAAOuE,EAAIxC,QAAUwC,EAAIzC,UAAYyC,EAAIhjB,QAAU,IAAIoO,OAElEoT,QAASwB,EAAIxB,SAAOhO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACfwP,EAAIxB,SAAO,IACdhB,OAAQwC,EAAIxB,QAAQhB,QAAUwC,EAAIxB,QAAQjB,UAAY,GACtD0C,UAAWxE,OAAOuE,EAAIxB,QAAQhB,QAAUwC,EAAIxB,QAAQjB,UAAY,IAAInS,SAClE,SAEN,GACJuU,EAAYI,EAAe,IAE5BrJ,OAAM,IAAMiJ,EAAY,MAGpB,IAAMA,EAAY,GAAG,GAC3B,CAACniB,KAGJwM,EAAAA,EAAAA,YAAU,KACR,IAAKxM,EAAS,OACd,MAAMmG,EAASuc,eAAetc,QAAQ4b,EAAShiB,IAC/C,GAAImG,EACF,IAAMgc,EAAYpc,KAAKM,MAAMF,GAAU,CAAE,MAAAkL,GAAoB,CAC/D,GACC,CAACrR,KAGJwM,EAAAA,EAAAA,YAAU,KACR,IAAKxM,IAAYhC,EAAM,OACvB,MAAM+c,GAASC,EAAAA,EAAAA,IAtDAne,yBAsJf,OA/FAwlB,EAAUpf,QAAU8X,EACpBA,EAAOc,KAAK,YAAa7b,GAGzB+a,EAAOM,GAAG,gBAAgBzd,IAAgB,IAAf,MAAE+kB,GAAO/kB,EAC7BgM,MAAMkG,QAAQ6S,IACnBP,EAAeO,EAAM,IAGvB5H,EAAOM,GAAG,cAAemH,IACvB,IAAKA,EAAK,OAEV,MAAMI,GAAa5P,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdwP,GAAG,IACNxC,OAAQwC,EAAIxC,QAAUwC,EAAIzC,UAAYyC,EAAIhjB,QAAU,GAEpDijB,UAAWxE,OAAOuE,EAAIxC,QAAUwC,EAAIzC,UAAYyC,EAAIhjB,QAAU,IAAIoO,OAElEoT,QAASwB,EAAIxB,SAAOhO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACfwP,EAAIxB,SAAO,IACdhB,OAAQwC,EAAIxB,QAAQhB,QAAUwC,EAAIxB,QAAQjB,UAAY,GACtD0C,UAAWxE,OAAOuE,EAAIxB,QAAQhB,QAAUwC,EAAIxB,QAAQjB,UAAY,IAAInS,SAClE,OAINuU,GAAY/X,IAWV,GAToBA,EAAKyY,MAAKC,GAC3BN,EAAI/iB,KAAOqjB,EAAYrjB,MAAQ+iB,EAAI/iB,KACnC+iB,EAAIviB,IAAM6iB,EAAY7iB,KAAOuiB,EAAIviB,IACjC6iB,EAAYL,YAAcG,EAAcH,WACxCK,EAAY5L,OAASsL,EAAItL,MACzBtQ,KAAK2Y,IAAI,IAAIld,KAAKygB,EAAY7c,WAAa6c,EAAYC,WAAa1gB,KAAK2gB,OACjE,IAAI3gB,KAAKmgB,EAAIvc,WAAauc,EAAIO,WAAa1gB,KAAK2gB,QAAU,MAInE,OAAO5Y,EAIT,MAAM6Y,EAAe7Y,EAAK8Y,WAAUxE,GAAKA,EAAEmD,SAAWnD,EAAEjf,IAAIyK,WAAW,WACvE,OAAsB,IAAlB+Y,GAAuBL,EAAc7C,WAAa/hB,EAAKyB,IAClD,IAAI2K,EAAKkS,MAAM,EAAG2G,GAAeL,KAAkBxY,EAAKkS,MAAM2G,EAAe,IAG/E,IAAI7Y,EAAMwY,EAAc,IAI7BJ,GAAOA,EAAI/iB,KAAO+iB,EAAIzC,YAAiB,OAAJ/hB,QAAI,IAAJA,OAAI,EAAJA,EAAMyB,MAC3Csb,EAAOc,KAAK,eAAgB,CAAE7b,UAASmhB,UAAWqB,EAAI/iB,KACxD,IAIFsb,EAAOM,GAAG,kBAAkB/C,IAAoB,IAAnB,UAAE6I,GAAW7I,EACxC6J,GAAY/X,GAAQA,EAAKpI,KAAI0c,GAC1BA,EAAEjf,MAAQ0hB,GAAazC,EAAEze,KAAOkhB,GAASnO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAS0L,GAAC,IAAE2C,WAAW,EAAMC,SAAS,EAAMpK,KAAM,KAAOwH,KACnG,IAIJ3D,EAAOM,GAAG,WAAY8H,IAEpB,MAAMC,EAAYD,GAAYnQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACzBmQ,GAAY,IACfnD,OAAQmD,EAAanD,QAAUmD,EAAapD,UAAYoD,EAAa3jB,QAAU,GAC/EijB,UAAWxE,OAAOkF,EAAanD,QAAUmD,EAAapD,UAAYoD,EAAa3jB,QAAU,IAAIoO,OAC7FoT,QAASmC,EAAanC,SAAOhO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACxBmQ,EAAanC,SAAO,IACvBhB,OAAQmD,EAAanC,QAAQhB,QAAUmD,EAAanC,QAAQjB,UAAY,GACxE0C,UAAWxE,OAAOkF,EAAanC,QAAQhB,QAAUmD,EAAanC,QAAQjB,UAAY,IAAInS,SACpF,OACF,KACCwV,GAAcA,EAAUC,aAC7BlB,GAAY/X,IACV,MAAMlI,EAAMkI,EAAK8Y,WAAUxE,GAAKA,EAAE2E,aAAe3E,EAAE2E,cAAgBD,EAAUC,cAC7E,IAAa,IAATnhB,EAAY,CACd,MAAMohB,EAAU,IAAIlZ,GAEpB,OADAkZ,EAAQphB,IAAI8Q,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQoQ,GAAS,IAAEvB,SAAS,EAAOnX,OAAQ,SAChD4Y,CACT,CAEA,MAAO,IAAIlZ,EAAMgZ,EAAU,GAC3B,IAIJrI,EAAOM,GAAG,gBAAgBkI,IAA4B,IAA3B,UAAEpC,EAAS,OAAEzW,GAAQ6Y,EACzCpC,GAAczW,GACnByX,GAAY/X,GAAQA,EAAKpI,KAAI0c,GAAMA,EAAEjf,MAAQ0hB,GAAazC,EAAEze,KAAOkhB,GAASnO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAS0L,GAAC,IAAEhU,WAAWgU,KAAG,IAGjG,KACL3D,EAAOyI,IAAI,kBACXzI,EAAOyI,IAAI,WACXzI,EAAOyI,IAAI,gBACXzI,EAAOyI,IAAI,gBACXzI,EAAOiB,YAAY,CACpB,GACA,CAAChc,EAAShC,IAGb,MAAMylB,GAAcC,EAAAA,EAAAA,cAAY,SAACxM,GAAiC,IAA3ByM,EAAcnf,UAAAzE,OAAA,QAAA0E,IAAAD,UAAA,GAAAA,UAAA,GAAG,KACtD,IAAK6d,EAAUpf,UAAYjF,IAASkZ,EAAKtJ,OAAQ,OAEjD,MAAMyV,GAAcO,EAAAA,EAAAA,MAGd5C,EAAU2C,EAAiB,CAC/BxC,UAAWwC,EAAelkB,KAAOkkB,EAAe1jB,GAChD8f,SAAU4D,EAAe5D,UAAY4D,EAAe3D,OACpDC,WAAY0D,EAAe1D,WAC3B/I,KAAMyM,EAAezM,MACnB,KAGE2M,EAAc,CAClBpkB,IAAI,QAADa,OAAU+iB,GACbrjB,UACAggB,OAAQhiB,EAAKyB,IACbsgB,SAAU/hB,EAAKyB,IACfgjB,UAAWxE,OAAOjgB,EAAKyB,KAAKmO,OAC5BqS,WAAYjiB,EAAK4E,KACjBkhB,aAAc9lB,EAAKyE,OACnByU,OACAmM,cACArC,UACA/a,WAAW,IAAI5D,MAAO6D,cACtB2b,SAAS,EACTnX,OAAQ,WAIVyX,GAAY/X,GAAQ,IAAIA,EAAMyZ,KAG9BxB,EAAUpf,QAAQ4Y,KAAK,cAAe,CACpC7b,UACAggB,OAAQhiB,EAAKyB,IACbsgB,SAAU/hB,EAAKyB,IACfwgB,WAAYjiB,EAAK4E,KACjBkhB,aAAc9lB,EAAKyE,OACnByU,OACA8J,UACAqC,eAEJ,GAAG,CAACrjB,EAAShC,IAGP+lB,GAAgBL,EAAAA,EAAAA,cAAavC,IAC5BkB,EAAUpf,SAAYke,GAC3BkB,EAAUpf,QAAQ4Y,KAAK,gBAAiB,CAAE7b,UAASmhB,aAAY,GAC9D,CAACnhB,KAGJwM,EAAAA,EAAAA,YAAU,KACR,GAAKxM,EACL,IACE0iB,eAAe5c,QAAQkc,EAAShiB,GAAU+F,KAAKC,UAAUkc,GAC3D,CAAE,MAAA7N,GAAO,IACR,CAAC6N,EAAUliB,IAGd,MAAMgkB,GAAiBhlB,EAAAA,EAAAA,QAAO,OAG9BwN,EAAAA,EAAAA,YAAU,KAER,MAAMyX,GAAcC,EAAAA,EAAAA,WAAS,CAACnJ,EAAQ/a,EAASR,EAAQ2kB,EAAUC,KAC1DrJ,GAAoB,OAATqJ,QAAS,IAATA,GAAAA,EAAWnhB,UAC3B8X,EAAOc,KAAK,SAAU,CACpB7b,UACAR,SACA2kB,WACAE,UAAU,IAERD,IAAWA,EAAUnhB,SAAU,GAAK,GACvC,KAMH,OAHA+gB,EAAe/gB,QAAUghB,EAGlB,KAAO,IAADK,EACe,QAA1BA,EAAIN,EAAe/gB,eAAO,IAAAqhB,GAAtBA,EAAwBC,QAC1BP,EAAe/gB,QAAQshB,QACzB,CACD,GACA,IAGH,MAAMC,GAAsBd,EAAAA,EAAAA,cAAY,KACjCrB,EAAUpf,SAAYjF,GAASskB,EAAYrf,SAAY+gB,EAAe/gB,SAC3E+gB,EAAe/gB,QACbof,EAAUpf,QACVjD,EACI,OAAJhC,QAAI,IAAJA,OAAI,EAAJA,EAAMyB,IACF,OAAJzB,QAAI,IAAJA,OAAI,EAAJA,EAAM4E,KACN0f,EACD,GACA,CAACtiB,EAAShC,IAGPymB,GAAqBf,EAAAA,EAAAA,cAAaW,IACtC,GAAKhC,EAAUpf,SAAYjF,EAa3B,GAVIqmB,IAAa/B,EAAYrf,UAC3Bof,EAAUpf,QAAQ4Y,KAAK,SAAU,CAC/B7b,UACAR,OAAQxB,EAAKyB,IACb0kB,SAAUnmB,EAAK4E,KACfyhB,UAAU,IAEZ/B,EAAYrf,SAAU,GAGpBohB,EAEFG,SACK,GAAIlC,EAAYrf,QAAS,CAAC,IAADyhB,EAEJ,QAA1BA,EAAIV,EAAe/gB,eAAO,IAAAyhB,GAAtBA,EAAwBH,QAC1BP,EAAe/gB,QAAQshB,SAEzBlC,EAAUpf,QAAQ4Y,KAAK,SAAU,CAC/B7b,UACAR,OAAQxB,EAAKyB,IACb0kB,SAAUnmB,EAAK4E,KACfyhB,UAAU,IAEZ/B,EAAYrf,SAAU,CACxB,IACC,CAACjD,EAAShC,EAAMwmB,IAGbG,GAAqBjB,EAAAA,EAAAA,cAAYxf,UACrC,GAAKme,EAAUpf,SAAYjF,GAASgC,EAEpC,UAEQtD,EAAAA,EAAMmL,KAAK,GAADvH,OAAI+D,EAAO,KAAA/D,OAAIN,EAAO,SAAS,CAAER,OAAQxB,EAAKyB,MAG9D0iB,GAAY/X,GAAQA,EAAKpI,KAAIwgB,IAE3B,GAAIvE,OAAOuE,EAAIzC,YAAc9B,OAAOjgB,EAAKyB,KAAM,OAAO+iB,EAItD,OADgBA,EAAIoC,QAAUpC,EAAIoC,OAAO/B,MAAKgC,GAAQ5G,OAAO4G,EAAKrlB,UAAYye,OAAOjgB,EAAKyB,OACtE+iB,GAGpBxP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKwP,GAAG,IACNoC,OAAQ,IAAKpC,EAAIoC,QAAU,GAAK,CAAEplB,OAAQxB,EAAKyB,IAAKqlB,OAAQ,IAAIziB,QAAS,MAK7EggB,EAAUpf,QAAQ4Y,KAAK,eAAgB,CAAE7b,UAASR,OAAQxB,EAAKyB,MAG/D4iB,EAAUpf,QAAQ4Y,KAAK,sBAAuB,CAAE7b,WAGlD,CAAE,MAAO8D,GAET,IACC,CAAC9D,EAAShC,EAAMmkB,IAEnB,MAAO,CACLD,WACAuB,cACAM,gBACA5B,cACAL,cACA2C,qBACAE,qBAEJ,C,QClVA,MA6XA,EA7XwB/mB,IAAuG,IAApGskB,SAAU6C,EAAY,cAAExG,EAAa,QAAEve,EAAO,UAAE4f,EAAS,YAAEkC,EAAc,GAAE,YAAEpc,EAAc,GAAG9H,EACvH,MAAM,cAAEmmB,EAAa,YAAEN,EAAW,YAAEtB,EAAW,mBAAEwC,GAAuB1C,EAAcjiB,GAChFglB,GAAUhmB,EAAAA,EAAAA,QAAO,OAEhBimB,EAAYC,IAAiB1mB,EAAAA,EAAAA,WAAS,GAEvC2mB,GAAcnmB,EAAAA,EAAAA,QAAO,CAAC,GAEtBomB,GAAmBpmB,EAAAA,EAAAA,QAAO,GAE1BqmB,GAAgBrmB,EAAAA,EAAAA,SAAO,IAEtBsmB,EAAqBC,IAA0B/mB,EAAAA,EAAAA,WAAS,IAExDgnB,EAAsBC,IAA2BjnB,EAAAA,EAAAA,UAAS,OAE1DknB,EAAmBC,IAAwBnnB,EAAAA,EAAAA,WAAS,IAwB3DgO,EAAAA,EAAAA,YAAU,KACR,IAAKuY,GAAwC,IAAxBA,EAAahlB,OAAc,OAGhD,MAAM6lB,EAAqBb,EAAahlB,OAASqlB,EAAiBniB,QAIlE,GAHAmiB,EAAiBniB,QAAU8hB,EAAahlB,OAGpC6lB,GAAsBZ,EAAQ/hB,QAAS,CACzC,MAAM4iB,EAAiBA,KAChBb,EAAQ/hB,UACb+hB,EAAQ/hB,QAAQ6iB,UAAYd,EAAQ/hB,QAAQ8iB,aAAY,EAG1DF,IAEAjb,WAAWib,EAAgB,IAC3Bjb,WAAWib,EAAgB,IAE7B,IACC,CAACd,KAGJvY,EAAAA,EAAAA,YAAU,KAER6Y,EAAcpiB,SAAU,EACxBsiB,GAAuB,GACvBE,EAAwB,MACxBE,GAAqB,GAGrBR,EAAYliB,QAAU,CAAC,EACvBmiB,EAAiBniB,QAAU,CAAC,GAC3B,CAACjD,KAGJgmB,EAAAA,EAAAA,kBAAgB,KAId,GAAKhB,EAAQ/hB,SAAY2G,MAAMkG,QAAQiV,IAAyC,IAAxBA,EAAahlB,OAArE,CAGA,GAAIslB,EAAcpiB,SAAWyC,EAAc,IAAM4f,EAAqB,CAIpE,MAAMW,EAAiBlB,EAAathB,QAAO+e,IAEzC,GAAIvE,OAAOuE,EAAIzC,YAAc9B,OAAOM,GAAgB,OAAO,EAG3D,QADgBiE,EAAIoC,QAAUpC,EAAIoC,OAAO/B,MAAKgC,GAAQ5G,OAAO4G,EAAKrlB,UAAYye,OAAOM,KACtE,IAKjB,GAAI0H,EAAelmB,OAAS,EAAG,CAE7BkmB,EAAethB,MAAK,CAACoY,EAAGmJ,IAAM,IAAI7jB,KAAK0a,EAAE9W,WAAa,IAAI5D,KAAK6jB,EAAEjgB,aACjE,MAAMkgB,EAAcF,EAAe,GAGnCR,EAAwBU,EAAY1mB,KACpCkmB,GAAqB,GAIrB,MAAMS,EAAwB,WAAkB,IAAjBC,EAAO7hB,UAAAzE,OAAA,QAAA0E,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAGnC2gB,EAAYliB,QAAQkjB,EAAY1mB,MAElC0lB,EAAYliB,QAAQkjB,EAAY1mB,KAAK6mB,eAAe,CAAEC,SAAU,OAAQC,MAAO,WAG/ErB,EAAYliB,QAAQkjB,EAAY1mB,KAAKgnB,UAAUC,IAAI,iBACnD9b,YAAW,KACLua,EAAYliB,QAAQkjB,EAAY1mB,MAClC0lB,EAAYliB,QAAQkjB,EAAY1mB,KAAKgnB,UAAUE,OAAO,gBACxD,GACC,KAGHpB,GAAuB,GAGvB3a,YAAW,KACT+Z,EAAmB3kB,EAAQ,GAC1B,MAGMqmB,EAAU,EAEnBzb,YAAW,IAAMwb,EAAsBC,EAAU,IAAI,IAAMzf,KAAKggB,IAAI,EAAGP,IAIvErB,EAAQ/hB,QAAQ6iB,UAAYd,EAAQ/hB,QAAQ8iB,YAEhD,EAGAK,GACF,MAGEpB,EAAQ/hB,QAAQ6iB,UAAYd,EAAQ/hB,QAAQ8iB,YAEhD,MAAWV,EAAcpiB,UAGvB+hB,EAAQ/hB,QAAQ6iB,UAAYd,EAAQ/hB,QAAQ8iB,cAG9CV,EAAcpiB,SAAU,CA3EiE,CA2E5D,GAC5B,CAAC8hB,EAAcrf,EAAa6Y,EAAeve,EAASslB,EAAqBX,KAG5EnY,EAAAA,EAAAA,YAAU,KACR,MAAMqa,EAAWxQ,OAAOyQ,eACxB,IAAKD,EAAU,OACf,MAAME,EAAaA,KAEb9B,GAAcD,EAAQ/hB,UACxB+hB,EAAQ/hB,QAAQ6iB,UAAYd,EAAQ/hB,QAAQ8iB,aAC9C,EAGF,OADAc,EAASha,iBAAiB,SAAUka,GAC7B,IAAMF,EAAS/Z,oBAAoB,SAAUia,EAAW,GAC9D,CAAC9B,IAGJ,MA6CM+B,EAAqBC,IACzB,MAAMC,EAAc,IAAI7kB,KAAK4kB,GACvBE,EAAQ,IAAI9kB,KACZ+kB,EAAY,IAAI/kB,KAAK8kB,GAC3BC,EAAUC,QAAQD,EAAUzQ,UAAY,GAGxC,MAAM2Q,EAAY,IAAIjlB,KAAK8kB,EAAMrQ,cAAeqQ,EAAMI,WAAYJ,EAAMxQ,WAClE6Q,EAAgB,IAAInlB,KAAK+kB,EAAUtQ,cAAesQ,EAAUG,WAAYH,EAAUzQ,WAClF8Q,EAAkB,IAAIplB,KAAK6kB,EAAYpQ,cAAeoQ,EAAYK,WAAYL,EAAYvQ,WAEhG,OAAI8Q,EAAgBC,YAAcJ,EAAUI,UACnC,QACED,EAAgBC,YAAcF,EAAcE,UAC9C,YAGAR,EAAY5kB,mBAAmB,QAAS,CAC7C6O,MAAO,OACPD,IAAK,UACLE,KAAM8V,EAAYpQ,gBAAkBqQ,EAAMrQ,cAAgB,eAAYrS,GAE1E,EAIIkjB,EAvEuBzF,KAC3B,IAAKtY,MAAMkG,QAAQoS,IAAiC,IAApBA,EAASniB,OAAc,MAAO,GAE9D,MAAM6nB,EAAS,GACf,IAAIC,EAAc,KACdC,EAAe,GAoCnB,OAlCA5F,EAAS6F,SAAQvF,IACf,MAAM0E,EAAc,IAAI7kB,KAAKmgB,EAAIvc,WAAauc,EAAIO,WAAa1gB,KAAK2gB,OAC9DgF,EAAa,IAAI3lB,KACrB6kB,EAAYpQ,cACZoQ,EAAYK,WACZL,EAAYvQ,WACZzQ,cAEE8hB,IAAeH,GAEbC,EAAa/nB,OAAS,GACxB6nB,EAAO9G,KAAK,CACV7P,KAAM4W,EACN3F,SAAU4F,IAKdD,EAAcG,EACdF,EAAe,CAACtF,IAGhBsF,EAAahH,KAAK0B,EACpB,IAIEsF,EAAa/nB,OAAS,GACxB6nB,EAAO9G,KAAK,CACV7P,KAAM4W,EACN3F,SAAU4F,IAIPF,CAAM,EA8BOK,CAAoBlD,GAGpCmD,EAAgBC,IAEpBhG,GAAY/X,GAAQA,EAAK3G,QAAOib,GAAKA,EAAEjf,MAAQ0oB,EAAc1oB,QAE7DgkB,EAAY0E,EAAcjR,KAAMiR,EAAcnH,QAAQ,EAGxD,OACErgB,EAAAA,EAAAA,MAAA,OACE8I,IAAKub,EACLoD,SAhOiBC,KACnB,MAAMC,EAAgBtD,EAAQ/hB,SAAWhG,SAASsrB,iBAC5C,UAAEzC,EAAS,aAAEC,EAAY,aAAEyC,GAAiBF,EAElDpD,EADiBa,GAAgBD,EAAY0C,GAAgB,IACtC,EA6NrB5nB,UAAU,kFACV8M,MAAO,CACL+a,oBAAqB,QACrBnrB,SAAA,EAGFF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,wBAAuBtD,UACpCF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,sFAAqFtD,UAClGqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+DAA8DtD,SAAA,EAC3EF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,yCAAwCtD,UACrDF,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,sBAAqBtD,SAAC,oEAExCF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,yCAAwCtD,UACrDF,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,sBAAqBtD,SAAC,wCAExCF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,yCAAwCtD,UACrDF,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,sBAAqBtD,SAAC,2DAK7CqqB,EAAc5nB,OAAS,EACtB4nB,EAAc3lB,KAAI,CAAC0mB,EAAOC,KACxBhoB,EAAAA,EAAAA,MAAA,OAA+CC,UAAU,wBAAuBtD,SAAA,EAE9EF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,6CAA4CtD,UACzDF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,iGAAgGtD,SAC5G0pB,EAAkB0B,EAAMzX,UAK5ByX,EAAMxG,SAASlgB,KAAI,CAACwgB,EAAKtgB,KACxB,IAAI6d,EAAW,GAEbA,OADiBtb,IAAf+d,EAAIxC,QAAuC,OAAfwC,EAAIxC,OACvB,GACoB,kBAAfwC,EAAIxC,OACTwC,EAAIxC,OAAOvgB,KAAO+iB,EAAIxC,OAAO/f,IAAMuiB,EAAIxC,OAAOxO,UAAYgR,EAAIxC,OAAOvO,OAAS,GAE9E+Q,EAAIxC,OAGjB,MAAMP,EAAQ+C,EAAIC,UACdD,EAAIC,YAAcxE,OAAOM,GAAe3Q,OACxCqQ,OAAO8B,GAAUnS,SAAWqQ,OAAOM,GAAe3Q,OACtD,OACEjN,EAAAA,EAAAA,MAAA,OAEE8I,IAAKkY,GAAOwD,EAAYliB,QAAQuf,EAAI/iB,KAAOkiB,EAC3C/gB,UAAU,SAAQtD,SAAA,CAGjBooB,GAAqBF,IAAyBhD,EAAI/iB,MACjDrC,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,wCAAuCtD,UACpDqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6FAA4FtD,SAAA,CAAC,oBACxFoI,EAAY,UAIpCtI,EAAAA,EAAAA,KAACwrB,EAAiB,CAChB7d,QAASyX,EACT/C,MAAOA,EACPC,UAAW8C,EAAIsB,cAAgBtB,EAAI/f,QAAU+f,EAAIqG,YAASpkB,EAC1Dkb,SAAUoE,EACVnE,UAAWA,CAAC7U,EAASoW,KAEfA,EAjTCA,KACvB,GAAIgE,EAAYliB,QAAQke,IAAc6D,EAAQ/hB,QAAS,CACrD,MAAM6lB,EAAiB3D,EAAYliB,QAAQke,GAC3C2H,EAAexC,eAAe,CAAEC,SAAU,SAAUC,MAAO,WAG3DsC,EAAerC,UAAUC,IAAI,iBAC7B9b,YAAW,KACTke,EAAerC,UAAUE,OAAO,gBAAgB,GAC/C,KACL,GAwSoBoC,CAAgB5H,GAGhBvB,GAAaA,EAAU7U,EACzB,EAEF8U,SAAUqI,MA1BP1F,EAAI/iB,IA4BL,MApDFipB,EAAMzX,MAAI,SAAA3Q,OAAaqoB,OA2DnChoB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+DAA8DtD,SAAA,EAC3EF,EAAAA,EAAAA,KAAA,OAAK+F,MAAM,6BAA6BvC,UAAU,+BAA+BM,KAAK,OAAOD,QAAQ,YAAYE,OAAO,eAAc7D,UACpIF,EAAAA,EAAAA,KAAA,QAAMiE,cAAc,QAAQC,eAAe,QAAQF,YAAY,IAAIG,EAAE,qKAEvEZ,EAAAA,EAAAA,MAAA,KAAGC,UAAU,0BAAyBtD,SAAA,CAAC,oBAAgBF,EAAAA,EAAAA,KAAA,SAAK,iCAK9D6nB,IACA7nB,EAAAA,EAAAA,KAAA,UACEoM,KAAK,SACL5I,UAAU,0JACV2B,QAASA,KACP,MAAMof,EAAKqD,EAAQ/hB,SAAWhG,SAASsrB,gBACnC5G,GACFA,EAAGqH,SAAS,CACVC,IAAKtH,EAAGoE,aACRQ,SAAU,UAEd,EAEF,aAAW,mBAAkBjpB,UAE7BF,EAAAA,EAAAA,KAAA,OAAK+F,MAAM,6BAA6BpC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAOhE,UAACF,EAAAA,EAAAA,KAAA,YAAU2E,OAAO,uBAKtM+f,GAAeA,EAAY/hB,OAAS,IACnC3C,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,6CAA4CtD,UACzDF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,qGAAoGtD,UACjHF,EAAAA,EAAAA,KAAC8rB,EAAe,CAACpH,YAAaA,EAAavD,cAAeA,SAIhEnhB,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,kCAAkCX,GAAG,kBAAkB,cAAY,WAC9E,EC1CV,EAjVqBrC,IAAkG,IAAjG,OAAEurB,EAAM,MAAEne,EAAK,SAAEtB,EAAQ,eAAEia,EAAc,cAAEyF,EAAa,SAAEC,EAAQ,QAAErpB,EAAO,QAAElC,EAAU,IAAIF,EAC/G,MAAM0rB,GAAWtqB,EAAAA,EAAAA,WAEVkN,EAAiBC,IAAsB3N,EAAAA,EAAAA,WAAS,IAChDiN,EAAMC,IAAWlN,EAAAA,EAAAA,UAAS,KAE1B+qB,EAAqBC,IAA0BhrB,EAAAA,EAAAA,WAAS,IAExD,CAAEirB,IAAmBjrB,EAAAA,EAAAA,UAAS,KAC9BkrB,EAAmBC,IAAwBnrB,EAAAA,EAAAA,UAAS,KAGpDorB,EAAqBC,IAA0BrrB,EAAAA,EAAAA,WAAS,IACxD,CAAEsrB,IAAetrB,EAAAA,EAAAA,UAAS,KAC1BurB,EAAeC,IAAoBxrB,EAAAA,EAAAA,UAAS,IAG7CyrB,EAAuBA,KAC3B,MAAMC,EAAWZ,EAASrmB,QAC1B,IAAKinB,EAAU,OAGfA,EAASxc,MAAM1M,OAAS,OAGxB,MAAMmpB,EAAYvjB,KAAKC,IAAIqjB,EAASnE,aAAc,KAGlDmE,EAASxc,MAAM1M,OAAM,GAAAV,OAAM6pB,EAAS,KAAI,GAI1C3d,EAAAA,EAAAA,YAAU,KACHxM,GACLtD,EAAAA,EAAMyH,IAAI,GAAD7D,OApCGzD,wBAoCQ,sBAAAyD,OAAqBN,IACtCuK,MAAKjF,GAAOoG,EAAQpG,EAAI5F,QACxBwZ,OAAMnM,IAAkD,GAAC,GAC3D,CAAC/M,KAGJwM,EAAAA,EAAAA,YAAU,KACRyd,GAAsB,GACrB,CAACjf,KAGJwB,EAAAA,EAAAA,YAAU,KACJ8c,EAASrmB,SAAW+H,GACtBif,GACF,GACC,IAKH,MA6EMG,EAAcvnB,IAEdA,GAAGA,EAAE2W,iBAGLxO,GAASA,EAAM4C,QACjBub,EAAOne,EACT,EA0CIqf,EAAyBlc,IArCNA,KACvB,MAAM+b,EAAWZ,EAASrmB,QACpBqnB,EAAO,IAAAhqB,OAAO6N,EAAIvL,MACxB,GAAKsnB,EAEE,CACL,MAAMpW,EAAQoW,EAASK,eACjBlY,EAAM6X,EAASM,aACfC,GAAUzf,GAAS,IAAIsR,MAAM,EAAGxI,GAChC4W,GAAS1f,GAAS,IAAIsR,MAAMjK,GAGlC,IAAIsY,EAAYF,EACZb,EAEFe,EAAYF,EAAOG,QAAQ,mBAAoB,IAG5BH,IAAW,MAAM3O,KAAK2O,KAEvCE,EAAYF,EAAS,KAIzB,MAAMI,EAASP,EAAU,IAEzB5gB,EADiBihB,EAAYE,EAASH,GAEtC9f,YAAW,KACTsf,EAASY,QACTZ,EAASK,eAAiBL,EAASM,aAAeG,EAAU5qB,OAAS8qB,EAAO9qB,MAAM,GACjF,EACL,MA3BE2J,GAAUsB,GAAS,IAAMsf,GA6B3BT,GAAuB,EAAM,EAK7BkB,CAAgB5c,EAAI,EAKtB,OACExN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sFAAqFtD,SAAA,CAEjGqmB,IACChjB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iEAAgEtD,SAAA,EAC7EF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,6BAA4BtD,SAAC,kBAC5CF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,wDAAuDtD,SAAEqmB,EAAe3G,SAAW2G,EAAezM,MAAQ,MACzH9Z,EAAAA,EAAAA,KAAA,UACEoM,KAAK,SACL5I,UAAU,gEACV2B,QAAS6mB,EAAc9rB,SACxB,qBAMLqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gCAA+BtD,SAAA,EAE5CF,EAAAA,EAAAA,KAAA,YACEqM,IAAK6f,EACL1oB,UAAU,6IACV6M,YAAY,oBACZzC,MAAOA,EACPwC,UAAW,KACXkG,KAAM,EACNhK,SA9JmB7G,IACzB,MAAMmoB,EAAMnoB,EAAEiH,OAAOkB,MACrBtB,EAASshB,GAEL9e,GACFC,GAAmB,GAGrB,MAAM+d,EAAWZ,EAASrmB,QAC1B,GAAIinB,EAAU,CACZ,MAAMe,EAAYf,EAASK,eACrBW,EAAiBF,EAAI1O,MAAM,EAAG2O,GAG9BE,EAAeD,EAAevK,MAAM,wBAC1C,GAAIwK,EAAc,CAChB,MAAMC,EAAYD,EAAa,IAAM,GACrC1B,EAAgB2B,GAEhB,MAAMC,EAAWvtB,EAAQ2F,QAAOib,IACjBA,EAAE9b,MAAQ8b,EAAElN,UAAY,IACzB1D,cAAcmG,SAASmX,EAAUtd,iBAE/C6b,EAAqB0B,EAAS/O,MAAM,EAAG,IACvCkN,GAAuB,GACvBK,GAAuB,EACzB,KAAO,CACLL,GAAuB,GACvBC,EAAgB,IAGhB,MAAM6B,EAAWJ,EAAevK,MAAM,sBACtC,GAAI2K,EAAU,CACZ,MAAMC,EAAQD,EAAS,IAAM,GAC7BxB,EAAYyB,GAEZ,MAAMF,EAAW5f,EAAKhI,QAAO0K,GACpBA,EAAIvL,KAAKkL,cAAcmG,SAASsX,EAAMzd,iBAE/Ckc,EAAiBqB,EAAS/O,MAAM,EAAG,IACnCuN,GAAuB,EACzB,MACEA,GAAuB,GACvBC,EAAY,GAEhB,CACF,CAEIT,GAAUA,EAAS2B,EAAIjrB,OAAS,GAGpCkqB,GAAsB,EA4GhBuB,OAAQA,KAEFnC,GAAUA,GAAS,EAAM,EAE/B5T,UAAW5S,IACT,GAAc,UAAVA,EAAE6S,KAAoB7S,EAAE4oB,SAoBP,UAAV5oB,EAAE6S,KAAmB7S,EAAE4oB,UAEhC7gB,WAAWqf,EAAsB,OAtBG,CACpC,MAAMC,EAAWrnB,EAAEiH,OACbmhB,EAAYf,EAASK,eACrBrT,EAAOgT,EAASlf,MAEhB0gB,EAAexU,EAAKoF,MAAM,EAAG2O,GAE7BU,EAAczU,EAAKoF,MAAM2O,GAEzBW,EAAQF,EAAarrB,MAAM,MAET,KADPurB,EAAMA,EAAM7rB,OAAS,GACzB6N,QAAwC,KAAvB+d,EAAY/d,QAExC/K,EAAE2W,iBACF4Q,EAAWvnB,IAIX+H,WAAWqf,EAAsB,EAErC,CAGA,EAEFvc,MAAO,CAACme,WAAY,MAAOC,SAAU,aAEvC1uB,EAAAA,EAAAA,KAAA,UACEwD,UAAU,4GACV8M,MAAO,CAAEmB,QAAS,OAAQkd,WAAY,UACtCxK,aAAe1e,IAEbA,EAAE2W,gBAAgB,EAEpBwS,YAAcnpB,IAEZA,EAAE2W,gBAAgB,EAEpBjX,QAAUM,IAERunB,EAAWvnB,EAAE,EAEf2G,KAAK,SACL,aAAW,eAAclM,UAEzBF,EAAAA,EAAAA,KAAA,OAAK+F,MAAM,6BAA6BvC,UAAU,UAAUK,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAOhE,UAC5KF,EAAAA,EAAAA,KAAA,QAAMmE,EAAE,iCAKbgoB,GAAuBG,EAAkB3pB,OAAS,IACjD3C,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,+HAA8HtD,SAC1IosB,EAAkB1nB,KAAI0B,IACrB/C,EAAAA,EAAAA,MAAA,UAEEC,UAAU,uGACV4I,KAAK,SACLjH,QAASA,IAvKQmB,KAC3B,MAAMwmB,EAAWZ,EAASrmB,QACpBgpB,EAAW,IAAA3rB,OAAOoD,EAAOd,MAC/B,GAAKsnB,EAEE,CACL,MAAMpW,EAAQoW,EAASK,eACjBlY,EAAM6X,EAASM,aACfC,GAAUzf,GAAS,IAAIsR,MAAM,EAAGxI,GAAO8W,QAAQ,uBAAwB,IACvEF,GAAS1f,GAAS,IAAIsR,MAAMjK,GAC5BwY,EAASoB,EAAc,IAE7BviB,EADiB+gB,EAASI,EAASH,GAEnC9f,YAAW,KACTsf,EAASY,QACTZ,EAASK,eAAiBL,EAASM,aAAeC,EAAO1qB,OAAS8qB,EAAO9qB,MAAM,GAC9E,EACL,MAbE2J,GAAUsB,GAAS,IAAMihB,EAAc,KAczCzC,GAAuB,GACvBC,EAAgB,GAAG,EAoJMyC,CAAoBxoB,GAAQpG,SAAA,CAE1CoG,EAAOjB,SACNrF,EAAAA,EAAAA,KAAA,OAAKsF,IAAKgB,EAAOjB,OAAQE,IAAKe,EAAOd,KAAMhC,UAAU,uCAEvDxD,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,cAAatD,SAAEoG,EAAOd,OACrCc,EAAO8N,WAAY7Q,EAAAA,EAAAA,MAAA,QAAMC,UAAU,wBAAuBtD,SAAA,CAAC,IAAEoG,EAAO8N,cAThE9N,EAAOlE,QAAUkE,EAAOzD,IAAMyD,EAAOjE,SAgBjDmqB,GAAuBG,EAAchqB,OAAS,IAC7C3C,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,+HAA8HtD,SAC1IysB,EAAc/nB,KAAImM,IACjB/Q,EAAAA,EAAAA,KAAA,UAEEwD,UAAU,yFACV4I,KAAK,SACLjH,QAASA,IAAM8nB,EAAsBlc,GAAK7Q,UAE1CqD,EAAAA,EAAAA,MAAA,QAAMC,UAAU,0FAAyFtD,SAAA,CAAC,IACtG6Q,EAAIvL,SANHuL,EAAI1O,SAahBkkB,IACChjB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sHAAqHtD,SAAA,EAClIqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBtD,SAAA,EAC7BqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBtD,SAAA,CAAC,gBACzBF,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,4BAA2BtD,SACpDqmB,EAAe1D,YACkB,kBAA1B0D,EAAe3D,SACpB2D,EAAe3D,OAAOpd,MAAQ+gB,EAAe3D,OAAOxO,WACvD,gBAGJpU,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,sFAAqFtD,SACjGqmB,EAAezM,MAAQ,kBAG5B9Z,EAAAA,EAAAA,KAAA,UACEmF,QAAS6mB,EACTxoB,UAAU,4EACV,aAAW,eAActD,UAEzBqD,EAAAA,EAAAA,MAAA,OAAKwC,MAAM,6BAA6BpC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAOhE,SAAA,EAC/KF,EAAAA,EAAAA,KAAA,QAAMuE,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,QAC/B1E,EAAAA,EAAAA,KAAA,QAAMuE,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,iBAKnC,E,0EClUV,MAodA,EApdsBqqB,MAEpB3f,EAAAA,EAAAA,YAAU,KAER,IAAI4f,EAAenvB,SAASovB,cAAc,yBAa1C,OAVKD,IACHA,EAAenvB,SAASqvB,cAAc,QACtCF,EAAaxpB,KAAO,WACpB3F,SAASsvB,KAAKC,YAAYJ,IAI5BA,EAAapP,QAAU,6EAGhB,KACLoP,EAAapP,QAAU,uCAAuC,CAC/D,GACA,IAGH,MAAO5C,EAAWC,IAAgB7b,EAAAA,EAAAA,UAAS,cAGpCiuB,EAAeC,IAAoBluB,EAAAA,EAAAA,WAAS,GAG7CmuB,GAAmB3tB,EAAAA,EAAAA,QAAO,OAG1B,QAAEgB,IAAY4d,EAAAA,EAAAA,KAEdzf,GAAWC,EAAAA,EAAAA,OACX,KAAEJ,IAASC,EAAAA,EAAAA,MAETyB,KAAMua,EAAS,KAAOC,EAAAA,EAAAA,OACtBxa,KAAM5B,EAAU,KAAOiG,EAAAA,EAAAA,GAAqB/D,IAE9C,QAAE+G,IAAYD,EAAAA,EAAAA,GAAe9G,GAC7B0F,GAAqB,OAAPqB,QAAO,IAAPA,OAAO,EAAPA,EAASrB,cAAe,EAMtC3H,EAAQkc,EAAO8D,MAAKlb,IACxB,MAAMmb,EAAenb,EAAEpD,KAAOoD,EAAE5C,GAEhC,OAAOge,OAAOD,KAAkBC,OAAOje,EAAQ,KAK3C,SAAEkiB,EAAQ,YAAEuB,EAAW,YAAE3B,EAAW,mBAAE2C,EAAkB,mBAAEE,GAAuB1C,EAAcjiB,IAC9F4sB,EAAOC,IAAYruB,EAAAA,EAAAA,UAAS,KAC5BmlB,EAAgBmJ,IAAqBtuB,EAAAA,EAAAA,UAAS,OAGrDgO,EAAAA,EAAAA,YAAU,KACR,GAAI0V,GAAYA,EAASniB,OAAS,GAAK4sB,EAAiB1pB,QAAS,CAE/D,MAAM4iB,EAAiBA,KACjB8G,EAAiB1pB,UACnB0pB,EAAiB1pB,QAAQ6iB,UAAY6G,EAAiB1pB,QAAQ8iB,aAChE,EAIFF,IACAjb,WAAWib,EAAgB,KAC3Bjb,WAAWib,EAAgB,IAC7B,IACC,CAAC3D,KAGJ1V,EAAAA,EAAAA,YAAU,KACR,IAAKxM,EAAS,OAEd2kB,IAEA,MAAMoI,EAAcA,IAAMpI,IAE1B,OADAtO,OAAOxJ,iBAAiB,QAASkgB,GAC1B,KACL1W,OAAOvJ,oBAAoB,QAASigB,EAAY,CACjD,GACA,CAAC/sB,EAAS2kB,KAwCbnY,EAAAA,EAAAA,YAAU,KAER,MAAMwgB,EAAe/vB,SAASqvB,cAAc,SA6E5C,OA5EAU,EAAaC,UAAS,s1DAyEtBhwB,SAASsvB,KAAKC,YAAYQ,GAGnB,KACL/vB,SAASsvB,KAAKW,YAAYF,EAAa,CACxC,GACA,KAGHxgB,EAAAA,EAAAA,YAAU,KACR,MAAM6b,EAAeA,KACnB,MAAM8E,EAAkBlwB,SAASovB,cAAc,0BACzCe,EAAcnwB,SAASovB,cAAc,sBAEvCc,GAAmBC,IACjB/W,OAAOgX,QAAU,IACnBD,EAAY1f,MAAM4f,uBAAyB,OAC3CF,EAAY1f,MAAM6f,wBAA0B,OAC5CH,EAAY1f,MAAM8f,UAAY,0EAE9BJ,EAAY1f,MAAM4f,uBAAyB,IAC3CF,EAAY1f,MAAM6f,wBAA0B,IAC5CH,EAAY1f,MAAM8f,UAAY,QAElC,EAIF,OADAnX,OAAOxJ,iBAAiB,SAAUwb,GAC3B,IAAMhS,OAAOvJ,oBAAoB,SAAUub,EAAa,GAC9D,IAGH,MAAM9J,EAAoB,OAAJvgB,QAAI,IAAJA,OAAI,EAAJA,EAAMyB,IACtBgf,EAAgB3gB,EAAQigB,MAAKW,IAAMA,EAAElf,QAAUkf,EAAEze,MAAQse,IACzDpT,EAAkC,WAAX,OAAbsT,QAAa,IAAbA,OAAa,EAAbA,EAAerb,OAGxBiI,EAAaoiB,IAAkBjvB,EAAAA,EAAAA,UAAS,MAmEzCkvB,EAAmBriB,EACrB6W,EAASze,QAAO+e,GAAOA,EAAItL,MAAQsL,EAAItL,KAAKjD,SAAS,IAAD3T,OAAK+K,EAAYzI,SACrEsf,GAGG3W,EAAUoiB,IAAenvB,EAAAA,EAAAA,WAAS,IAGzCgO,EAAAA,EAAAA,YAAU,KACR,MAAM6b,EAAeA,KACf9c,GAAUoiB,GAAY,EAAM,EAE5BC,EAAcjB,EAAiB1pB,QAIrC,OAHI2qB,GACFA,EAAY/gB,iBAAiB,SAAUwb,GAElC,KACDuF,GACFA,EAAY9gB,oBAAoB,SAAUub,EAC5C,CACD,GACA,CAAC9c,IAKJ,OAAIkhB,GAEA9rB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iEAAgEtD,SAAA,EAE7EqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kFAAiFtD,SAAA,EAE9FF,EAAAA,EAAAA,KAAA,UACEwD,UAAU,mDACV2B,QAASA,IAAMmqB,GAAiB,GAChC,aAAW,eAAcpvB,UAEzBF,EAAAA,EAAAA,KAAA,OAAK2D,MAAM,KAAKC,OAAO,KAAKE,KAAK,OAAOD,QAAQ,YAAYE,OAAO,eAAc7D,UAC/EF,EAAAA,EAAAA,KAAA,QAAMiE,cAAc,QAAQC,eAAe,QAAQF,YAAY,IAAIG,EAAE,yBAIzEnE,EAAAA,EAAAA,KAACywB,EAAAA,EAAW,CAAC9vB,MAAOA,EAAOwE,QAASA,aAGtC5B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4DAA2DtD,SAAA,EACxEF,EAAAA,EAAAA,KAAA,UACEwD,UAAS,wEAAAN,OAAwF,cAAd8Z,EAA4B,+CAAiD,iBAChK7X,QAASA,IAAM8X,EAAa,aAAa/c,SAC1C,gBAGDF,EAAAA,EAAAA,KAAA,UACEwD,UAAS,wEAAAN,OAAwF,YAAd8Z,EAA0B,+CAAiD,iBAC9J7X,QAASA,IAAM8X,EAAa,WAAW/c,SACxC,aAGDF,EAAAA,EAAAA,KAAA,UACEwD,UAAS,wEAAAN,OAAwF,YAAd8Z,EAA0B,+CAAiD,iBAC9J7X,QAASA,IAAM8X,EAAa,WAAW/c,SACxC,gBAKHqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4CAA2CtD,SAAA,CACzC,cAAd8c,IACChd,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,yBAAwBtD,UACrCF,EAAAA,EAAAA,KAAC4hB,EAAAA,EAAQ,CAACjhB,MAAOA,MAGN,YAAdqc,IACChd,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,yBAAwBtD,UACrCF,EAAAA,EAAAA,KAAC0wB,EAAAA,EAAU,CAAC9tB,QAASA,MAGV,YAAdoa,IACChd,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,yBAAwBtD,UACrCF,EAAAA,EAAAA,KAAC0hB,EAAAA,EAAU,CAAChhB,QAASA,EAASC,MAAOA,aAS/CX,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,qEAAoEtD,UACjFqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uFAAsFtD,SAAA,EAEnGF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,wBAAuBtD,UACpCF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,oBAAmBtD,UAChCqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBtD,SAAA,EAClCF,EAAAA,EAAAA,KAAA,UACEwD,UAAU,sEACV2B,QAASA,IAAMpE,EAAS,aACxB,aAAW,OACXqL,KAAK,SAAQlM,UAEbF,EAAAA,EAAAA,KAAA,OAAK2D,MAAM,KAAKC,OAAO,KAAKE,KAAK,OAAOD,QAAQ,YAAYE,OAAO,eAAc7D,UAACF,EAAAA,EAAAA,KAAA,QAAMiE,cAAc,QAAQC,eAAe,QAAQF,YAAY,IAAIG,EAAE,wBAExJxD,IACCX,EAAAA,EAAAA,KAACywB,EAAAA,EAAW,CACV9vB,MAAOA,EACPwE,QAASA,IAAMmqB,GAAiB,GAChCvhB,QAASA,EACTC,YA7KS+C,IAIvB,GAHAsf,EAAetf,GAGXA,EAAK,CACP,MAAMmc,EAAO,IAAAhqB,OAAO6N,EAAIvL,MAClBmrB,EAAcnB,EAAMhf,OAGN,KAAhBmgB,EACFlB,EAASvC,EAAU,KACTyD,EAAY7jB,WAAWogB,IACjCuC,EAASvC,EAAU,IAAMyD,GAI3BnjB,YAAW,KACT,MAAMojB,EAAa/wB,SAASovB,cAAc,eACtC2B,GACFA,EAAWlD,OACb,GACC,GACL,GAwJczf,YAAaA,EACbC,WAtIQ6C,IAGtB,MAAMmc,EAAO,IAAAhqB,OAAO6N,EAAIvL,MAClBmrB,EAAcnB,EAAMhf,OAC1B,GAAoB,KAAhBmgB,EACFlB,EAASvC,EAAU,SACd,IAAIyD,EAAY7jB,WAAWogB,GAEhC,OAGAuC,EAASvC,EAAU,IAAMyD,EAC3B,CAGAnjB,YAAW,KACT,MAAMojB,EAAa/wB,SAASovB,cAAc,eACtC2B,GACFA,EAAWlD,OACb,GACC,GAAG,EAkHQvf,SAAUA,EACVC,eAvFOA,IAAMmiB,GAAavjB,IAAUA,cA+F9ChN,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,WAGfxD,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,4DAA4D6I,IAAKkjB,EAAiBrvB,UAC/FF,EAAAA,EAAAA,KAAC6wB,EAAe,CACd/L,SAAUwL,EACVnP,cAAmB,OAAJvgB,QAAI,IAAJA,OAAI,EAAJA,EAAMyB,IACrByuB,WAAiB,OAALnwB,QAAK,IAALA,OAAK,EAALA,EAAOsP,UACnBrN,QAASA,EACT4f,UAlUa7U,IAAa,IAADojB,EACjCrB,EAAkB/hB,GAEgB,QAAlCojB,EAAAlxB,SAASovB,cAAc,mBAAW,IAAA8B,GAAlCA,EAAoCrD,OAAO,EAgUnChJ,YAAaA,EACbpc,YAAaA,OAIjBtI,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,uBAAsBtD,UACnCF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,mBAAkBtD,UAC/BF,EAAAA,EAAAA,KAACgxB,EAAY,CACXjF,OA3VQjS,IAElB,MAAMmX,EAA0B,kBAATnX,EAAoBA,EAAO+G,OAAO/G,GAAQ,IAC5DmX,EAAQzgB,SAGb6V,EAAY4K,EAAS1K,GAGrBkJ,EAASxhB,EAAW,IAAA/K,OAAO+K,EAAYzI,KAAI,KAAM,IACjDkqB,EAAkB,MAhBdH,EAAiB1pB,UACnB0pB,EAAiB1pB,QAAQ6iB,UAAY6G,EAAiB1pB,QAAQ8iB,cAkBhD,EA+UN/a,MAAO4hB,EACPljB,SAAUmjB,EACVlJ,eAAgBA,EAChByF,cAzUckF,KACxBxB,EAAkB,KAAK,EAyUbzD,SAAU5E,EACVzkB,QAASA,EACTlC,QAASA,QAKduN,IACC1K,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oGAAmGtD,SAAA,EAChHF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,uBACNqD,EAAAA,EAAAA,MAAA,QAAMC,UAAU,uEAAsEtD,SAAA,CAAC,IAAE+N,EAAYzI,SACrGxF,EAAAA,EAAAA,KAAA,UAAQmF,QAjMWgsB,KAI3B,GAHAd,EAAe,MAGXpiB,EAAa,CACf,MAAMif,EAAO,IAAAhqB,OAAO+K,EAAYzI,MAC1BmrB,EAAcnB,EAAMhf,OAEtBmgB,EAAY7jB,WAAWogB,IACzBuC,EAASkB,EAAYrtB,UAAU4pB,EAAQvqB,QAAQ6N,OAEnD,GAsL+ChN,UAAU,4CAA2CtD,SAAC,iBAI/F,C,gICvdV,MAwDA,EAxDuBkxB,KACrB,MAAM,QAAExuB,IAAY4d,EAAAA,EAAAA,MACbxD,EAAWC,IAAgB7b,EAAAA,EAAAA,UAAS,cACnCkB,KAAMua,EAAS,KAAOC,EAAAA,EAAAA,OACtBxa,KAAM5B,EAAU,KAAOiG,EAAAA,EAAAA,GAAqB/D,GAC9CjC,EAAQkc,EAAO8D,MAAKlb,GAAKob,OAAOpb,EAAEpD,KAAOoD,EAAE5C,MAAQge,OAAOje,KAEhE,OACEW,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iEAAgEtD,SAAA,EAE7EF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,4EAA2EtD,UACxFF,EAAAA,EAAAA,KAACywB,EAAAA,EAAW,CAAC9vB,MAAOA,EAAOwE,QAASA,YAGtC5B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4DAA2DtD,SAAA,EACxEF,EAAAA,EAAAA,KAAA,UACEwD,UAAS,wEAAAN,OAAwF,cAAd8Z,EAA4B,+CAAiD,iBAChK7X,QAASA,IAAM8X,EAAa,aAAa/c,SAC1C,gBAGDF,EAAAA,EAAAA,KAAA,UACEwD,UAAS,wEAAAN,OAAwF,YAAd8Z,EAA0B,+CAAiD,iBAC9J7X,QAASA,IAAM8X,EAAa,WAAW/c,SACxC,aAGDF,EAAAA,EAAAA,KAAA,UACEwD,UAAS,wEAAAN,OAAwF,YAAd8Z,EAA0B,+CAAiD,iBAC9J7X,QAASA,IAAM8X,EAAa,WAAW/c,SACxC,gBAKHqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4CAA2CtD,SAAA,CACzC,cAAd8c,IACChd,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,yBAAwBtD,UACrCF,EAAAA,EAAAA,KAAC4hB,EAAAA,EAAQ,CAACjhB,MAAOA,MAGN,YAAdqc,IACChd,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,yBAAwBtD,UACrCF,EAAAA,EAAAA,KAAC0wB,EAAAA,EAAU,CAAC9tB,QAASA,MAGV,YAAdoa,IACChd,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,yBAAwBtD,UACrCF,EAAAA,EAAAA,KAAC0hB,EAAAA,EAAU,CAAChhB,QAASA,EAASC,MAAOA,WAIvC,C,sFCnDV,MAiEA,EAjEuB0wB,KACrB,MAAM,QAAEzuB,IAAY4d,EAAAA,EAAAA,KACdzf,GAAWC,EAAAA,EAAAA,OAGTsB,KAAMua,EAAS,GAAE,UAAE9a,EAAS,QAAEqJ,IAAY0R,EAAAA,EAAAA,MAG5Cnc,EAAQkc,EAAO8D,MAAKlb,IACxB,MAAMmb,EAAenb,EAAEpD,KAAOoD,EAAE5C,GAChC,OAAOge,OAAOD,KAAkBC,OAAOje,EAAQ,IAIjD,OAAIb,GAEA/B,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,qEAAoEtD,UACjFF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,gCAA+BtD,SAAC,+BAMjDkL,IAAYzK,GAEZX,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,qEAAoEtD,UACjFF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,+BAA8BtD,SAAC,qCAMlDqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qEAAoEtD,SAAA,EAEjFqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kFAAiFtD,SAAA,EAC9FF,EAAAA,EAAAA,KAAA,UACEwD,UAAU,wDACV2B,QAASA,IAAMpE,GAAU,GACzB,aAAW,OACXqL,KAAK,SAAQlM,UAEbF,EAAAA,EAAAA,KAAA,OAAK2D,MAAM,KAAKC,OAAO,KAAKE,KAAK,OAAOD,QAAQ,YAAYE,OAAO,eAAc7D,UAC/EF,EAAAA,EAAAA,KAAA,QAAMiE,cAAc,QAAQC,eAAe,QAAQF,YAAY,IAAIG,EAAE,yBAGzEZ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBtD,SAAA,EACtCF,EAAAA,EAAAA,KAAA,OACEsF,IAAK3E,EAAMsP,WAAatP,EAAMsM,UAAYtM,EAAMqP,aAAe,qBAC/DzK,IAAK5E,EAAMkP,OAASlP,EAAMmP,WAAa,QACvCtM,UAAU,2EAEZxD,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,gDAA+CtD,SAC5DS,EAAMkP,OAASlP,EAAMmP,WAAa,iBAMzC9P,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,yBAAwBtD,UACrCF,EAAAA,EAAAA,KAAC4hB,EAAAA,EAAQ,CAACjhB,MAAOA,QAEf,C,yGCnEV,MAAMiJ,E,QAAqBtK,EAAMuK,OAAO,CACtCrK,QAASC,wBACTiI,QAAS,IACTC,QAAS,CACP,eAAgB,sBAKpBiC,EAAmBgB,aAAaC,QAAQC,KACtCN,IAEE,MAAMO,EAActC,aAAaO,QAAQ,gBACzC,IAAIgC,EAAQ,KACZ,GAAID,EACF,IAAK,IAADE,EAEFD,EAAoB,QAAfC,EADUtC,KAAKM,MAAM8B,GACXjK,aAAK,IAAAmK,OAAA,EAAZA,EAAcD,KACxB,CAAE,MAAOvF,GACP,CAMJ,OAHIuF,IACFR,EAAO7C,QAAuB,cAAC,UAAAzE,OAAa8H,IAEvCR,CAAM,IAEf9D,GACSoB,QAAQoD,OAAOxE,KAI1B,MAwIA,EAxIwB,CAMtB4qB,YAAaxqB,UACX,IAGE,aAFuB8C,EAAmB7C,IAAI,oBAAD7D,OAAqBd,KAElDE,KAAKA,IACvB,CAAE,MAAOoE,GAEP,MAAMA,CACR,GAQF6qB,mBAAoBzqB,UAClB,IAGE,aAFuB8C,EAAmB7C,IAAI,qBAAD7D,OAAsBd,KAEnDE,KAAKA,IACvB,CAAE,MAAOoE,GAEP,MAAMA,CACR,GAQF8qB,gBAAiB1qB,UACf,IAGE,aAFuB8C,EAAmB7C,IAAI,gBAAD7D,OAAiBd,KAE9CE,KAAKA,IACvB,CAAE,MAAOoE,GAEP,MAAMA,CACR,GAQF+qB,wBAAyB3qB,UACvB,IAGE,aAFuB8C,EAAmB7C,IAAI,WAAD7D,OAAYN,EAAO,uBAEhDN,KAAKA,IACvB,CAAE,MAAOoE,GAEP,MAAMA,CACR,GAQFgrB,uBAAwB5qB,UACtB,IACE,MAAM1E,EAASuvB,GAAUlpB,aAAaO,QAAQ,UAG9C,aAFuBY,EAAmB7C,IAAI,4BAAD7D,OAA6Bd,KAE1DE,KAAKA,IACvB,CAAE,MAAOoE,GAEP,MAAMA,CACR,GASFkrB,mBAAoB9qB,MAAOlE,EAASivB,KAClC,IAGE,aAFuBjoB,EAAmBa,KAAK,WAADvH,OAAYN,EAAO,cAAAM,OAAa2uB,EAAS,cAEvEvvB,KAAKA,IACvB,CAAE,MAAOoE,GAEP,MAAMA,CACR,GASForB,kBAAmBhrB,MAAOlE,EAASivB,KACjC,IAGE,aAFuBjoB,EAAmBa,KAAK,WAADvH,OAAYN,EAAO,cAAAM,OAAa2uB,EAAS,aAEvEvvB,KAAKA,IACvB,CAAE,MAAOoE,GAEP,MAAMA,CACR,GASF5E,eAAgBgF,MAAOlE,EAASR,KAC9B,IAKE,aAJuBwH,EAAmB0H,OAAO,WAADpO,OAAYN,EAAO,cAAc,CAC/EN,KAAM,CAAEF,aAGME,KAAKA,IACvB,CAAE,MAAOoE,GAEP,MAAMA,CACR,I,cChKG,MAAMoW,EAAcA,KACzB,MAAM,KAAElc,IAASC,EAAAA,EAAAA,KACXuB,EAAa,OAAJxB,QAAI,IAAJA,OAAI,EAAJA,EAAMyB,IAErB,OAAOuE,EAAAA,EAAAA,GAAS,CACdJ,SAAU,CAAC,WAAYpE,GACvByE,QAASA,IAAMkrB,EAAgBT,YAAYlvB,GAC3CK,UAAWL,EACX+G,UAAW,IACX6oB,sBAAsB,GACtB,EA0CSxvB,EAA2BI,IAC/BgE,EAAAA,EAAAA,GAAS,CACdJ,SAAU,CAAC,uBAAwB5D,GACnCiE,QAASA,IAAMkrB,EAAgBN,wBAAwB7uB,GACvDH,UAAWG,EACXuG,UAAW,IACX6oB,sBAAsB,IAyBbC,EAAwBA,KACnC,MAAM5xB,GAAcY,EAAAA,EAAAA,MAEpB,OAAOgJ,EAAAA,EAAAA,GAAY,CACjBC,WAAY1J,IAAA,IAAC,QAAEoC,EAAO,UAAEivB,GAAWrxB,EAAA,OAAKuxB,EAAgBH,mBAAmBhvB,EAASivB,EAAU,EAC9F1rB,UAAWA,CAAC7D,EAAMqI,KAEhBtK,EAAYkG,kBAAkB,CAAEC,SAAU,CAAC,uBAAwBmE,EAAU/H,WAC7EvC,EAAYkG,kBAAkB,CAAEC,SAAU,CAAC,yBAC3CnG,EAAYkG,kBAAkB,CAAEC,SAAU,CAAC,kBAC3CnG,EAAYkG,kBAAkB,CAAEC,SAAU,CAAC,aAAc,GAE3D,EAOS0rB,EAAuBA,KAClC,MAAM7xB,GAAcY,EAAAA,EAAAA,MAEpB,OAAOgJ,EAAAA,EAAAA,GAAY,CACjBC,WAAYgR,IAAA,IAAC,QAAEtY,EAAO,UAAEivB,GAAW3W,EAAA,OAAK6W,EAAgBD,kBAAkBlvB,EAASivB,EAAU,EAC7F1rB,UAAWA,CAAC7D,EAAMqI,KAEhBtK,EAAYkG,kBAAkB,CAAEC,SAAU,CAAC,uBAAwBmE,EAAU/H,WAC7EvC,EAAYkG,kBAAkB,CAAEC,SAAU,CAAC,wBAAyB,GAEtE,EAOSvE,EAAoBA,KAC/B,MAAM5B,GAAcY,EAAAA,EAAAA,MAEpB,OAAOgJ,EAAAA,EAAAA,GAAY,CACjBC,WAAYic,IAAA,IAAC,QAAEvjB,EAAO,OAAER,GAAQ+jB,EAAA,OAAK4L,EAAgBjwB,eAAec,EAASR,EAAO,EACpF+D,UAAWA,CAAC7D,EAAMqI,KAEhBtK,EAAYkG,kBAAkB,CAAEC,SAAU,CAAC,cAC3CnG,EAAYkG,kBAAkB,CAAEC,SAAU,CAAC,eAAgBmE,EAAU/H,WACrEvC,EAAYkG,kBAAkB,CAAEC,SAAU,CAAC,qBAC3CnG,EAAYkG,kBAAkB,CAAEC,SAAU,CAAC,iBAAkB,GAE/D,C,kGCpIJ,MAAM1D,EAAcA,CAAC0C,EAAMpD,KAEzB,GAAIoD,EAAM,CACR,MAAM2sB,EAAY3sB,EAAKvC,MAAM,KAC7B,OAAIkvB,EAAUxvB,QAAU,EACf,GAAAO,OAAGivB,EAAU,GAAGhvB,OAAO,IAAED,OAAGivB,EAAUA,EAAUxvB,OAAS,GAAGQ,OAAO,IAAKC,cAE1EoC,EAAKlC,UAAU,EAAG,GAAGF,aAC9B,CAGA,OAAKhB,EACEA,EAAOkB,UAAU,EAAG,GAAGF,cADV,GACuB,EAIvCgvB,EAAkB5xB,IAAqD,IAApD,QAAEqK,EAAO,UAAEwnB,EAAS,SAAEC,EAAQ,aAAEC,GAAc/xB,EACrE,MAAMO,GAAWC,EAAAA,EAAAA,MAQjB,OACEuC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iEAAgEtD,SAAA,EAC7EqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAyC2B,QAPjCC,KACpByF,GAAYA,EAAQzI,QACzBrB,EAAS,YAADmC,OAAa2H,EAAQzI,QAAS,EAKgDlC,SAAA,EAClFF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,iIAAgItD,SAC5I4C,EAAY+H,EAAQrF,KAAMqF,EAAQzI,WAErCmB,EAAAA,EAAAA,MAAA,OAAArD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,sDAAqDtD,SACjE2K,EAAQrF,MAAI,QAAAtC,OAAY2H,EAAQzI,OAAOkB,UAAU,EAAG,GAAE,UAEzDC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBtD,SAAA,CAAC,aAC1B,IAAI+E,KAAK4F,EAAQ8a,WAAWlM,2BAI7ClW,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYtD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,UACEmF,QAASktB,EACTvsB,SAAUysB,EACV/uB,UAAU,iHACV,aAAW,kBAAiBtD,UAE5BF,EAAAA,EAAAA,KAAA,OAAK2D,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAOhE,UAC5IF,EAAAA,EAAAA,KAAA,YAAU2E,OAAO,wBAGrB3E,EAAAA,EAAAA,KAAA,UACEmF,QAASmtB,EACTxsB,SAAUysB,EACV/uB,UAAU,2GACV,aAAW,iBAAgBtD,UAE3BqD,EAAAA,EAAAA,MAAA,OAAKI,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAOhE,SAAA,EAC5IF,EAAAA,EAAAA,KAAA,QAAMuE,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,QAC/B1E,EAAAA,EAAAA,KAAA,QAAMuE,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,iBAIjC,EA+IV,EAvIyB8tB,KACvB,MAAM,QAAE5vB,IAAY4d,EAAAA,EAAAA,KACdzf,GAAWC,EAAAA,EAAAA,MACXJ,GAAOC,EAAAA,EAAAA,IAAaC,GAASA,EAAMF,OAGzCX,EAAAA,WAAgB,IAEP,KAA+C,GACrD,CAAC2C,IAGJ,MAAQN,KAAMua,EAAS,KAAOC,EAAAA,EAAAA,MACxBnc,EAAQkc,EAAO8D,MAAKlb,GAAKob,OAAOpb,EAAEpD,KAAOoD,EAAE5C,MAAQge,OAAOje,MAI9DN,KAAMC,EAAW,GACjBR,UAAW0wB,EAAe,MAC1B/rB,IACElE,EAAAA,EAAAA,IAAwBI,EAAS,CACnCH,UAAWG,KAAahC,IAIpB8xB,GAAiBT,EAAAA,EAAAA,MACjBU,GAAgBT,EAAAA,EAAAA,MAYhBU,EAAaA,KAGjB7xB,GAAU,EAAE,EAId,OAAI0xB,GAEAlvB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBtD,SAAA,EACrCqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kFAAiFtD,SAAA,EAC9FF,EAAAA,EAAAA,KAAA,UAAQmF,QAASytB,EAAYpvB,UAAU,OAAMtD,UAC3CF,EAAAA,EAAAA,KAAA,OAAK2D,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAOhE,UAC5IF,EAAAA,EAAAA,KAAA,YAAU2E,OAAO,yBAGrB3E,EAAAA,EAAAA,KAAA,MAAIwD,UAAU,wBAAuBtD,SAAC,mBAExCF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,0CAAyCtD,UACtDF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,qFAOnBkD,GAEAnD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBtD,SAAA,EACrCqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kFAAiFtD,SAAA,EAC9FF,EAAAA,EAAAA,KAAA,UAAQmF,QAASytB,EAAYpvB,UAAU,OAAMtD,UAC3CF,EAAAA,EAAAA,KAAA,OAAK2D,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAOhE,UAC5IF,EAAAA,EAAAA,KAAA,YAAU2E,OAAO,yBAGrB3E,EAAAA,EAAAA,KAAA,MAAIwD,UAAU,wBAAuBtD,SAAC,sBAExCF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,uDAAsDtD,SAAC,kDAQ1EqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBtD,SAAA,EAErCqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kFAAiFtD,SAAA,EAC9FF,EAAAA,EAAAA,KAAA,UAAQmF,QAASytB,EAAYpvB,UAAU,OAAMtD,UAC3CF,EAAAA,EAAAA,KAAA,OAAK2D,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAOhE,UAC5IF,EAAAA,EAAAA,KAAA,YAAU2E,OAAO,wBAGpBhE,GACC4C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2CAA0CtD,SAAA,EACvDF,EAAAA,EAAAA,KAACywB,EAAAA,EAAW,CAAC9vB,MAAOA,EAAOwE,QAASA,IAAMpE,EAAS,aAADmC,OAAcN,MAC/DL,EAASI,OAAS,IACjB3C,EAAAA,EAAAA,KAAA,QAAMwD,UAAU,oFAAmFtD,SAChGqC,EAASI,aAKhB3C,EAAAA,EAAAA,KAAA,MAAIwD,UAAU,wBAAuBtD,SAAC,sBAK1CF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,yBAAwBtD,SAChB,IAApBqC,EAASI,QACRY,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iEAAgEtD,SAAA,EAC7EqD,EAAAA,EAAAA,MAAA,OAAKI,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAQV,UAAU,qBAAoBtD,SAAA,EAC3KF,EAAAA,EAAAA,KAAA,QAAMmE,EAAE,+CACRnE,EAAAA,EAAAA,KAAA,UAAQoE,GAAG,MAAMC,GAAG,IAAIC,EAAE,OAC1BtE,EAAAA,EAAAA,KAAA,QAAMuE,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,QAChC1E,EAAAA,EAAAA,KAAA,QAAMuE,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,WAEnC1E,EAAAA,EAAAA,KAAA,KAAAE,SAAG,iCAGLF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,oCAAmCtD,SAC/CqC,EAASqC,KAAKiG,IACb7K,EAAAA,EAAAA,KAACoyB,EAAe,CAEdvnB,QAASA,EACTwnB,UAAWA,KAAMQ,OA9FRhB,EA8FsBhnB,EAAQxI,SA7FnDqwB,EAAe7wB,OAAO,CAAEe,UAASivB,cADZA,KA8FmC,EAC5CS,SAAUA,KAAMQ,OA3FRjB,EA2FqBhnB,EAAQxI,SA1FjDswB,EAAc9wB,OAAO,CAAEe,UAASivB,cADZA,KA2FkC,EAC1CU,aAAcG,EAAe3wB,WAAa4wB,EAAc5wB,WAJnD8I,EAAQxI,aAUnB,C","sources":["index.js","myevents/components/chat/MembersTab.js","myevents/hooks/queries/useEventMembersQuery.js","myevents/services/membersService.js","myevents/hooks/queries/useChatPreviewQuery.js","myevents/services/momentsService.js","myevents/hooks/queries/useMomentsQueries.js","myevents/components/chat/MomentsTab.js","myevents/components/chat/GroupHeader.js","myevents/components/chat/AboutTab.js","myevents/pages/MyEventTicketCard.js","myevents/pages/MyEventsPage.js","myevents/components/event/EventBio.js","myevents/components/event/EventTabs.js","myevents/components/chat/AnnouncementTab.js","myevents/services/eventsService.js","myevents/hooks/queries/useEventBioQuery.js","myevents/services/eventBioService.js","myevents/services/eventTabsService.js","myevents/hooks/queries/useEventAnnouncementsQuery.js","myevents/services/announcementsService.js","myevents/hooks/stores/eventsStore.js","myevents/components/event/EventTagManager.js","myevents/pages/EventPage.js","myevents/hooks/queries/useEventsQuery.js","myevents/hooks/queries/useEventTabsQuery.js","myevents/components/chat/name-colors.js","myevents/components/chat/ChatMessageBubble.js","myevents/components/chat/TypingIndicator.js","myevents/hooks/useChatSocket.js","myevents/components/chat/ChatMessageList.js","myevents/components/chat/ChatInputBox.js","myevents/pages/EventChatPage.js","myevents/pages/EventGroupPage.js","myevents/pages/EventAboutPage.js","myevents/services/myEventsService.js","myevents/hooks/queries/useMyEventsQueries.js","myevents/pages/JoinRequestsPage.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport './styles/index.css';\nimport App from './App';\nimport { queryClient, QueryClientProvider, ReactQueryDevtools } from './query/queryClient';\nimport { initializeAuth } from './stores/authStore';\n\n// Set up axios defaults for API requests\naxios.defaults.baseURL = process.env.REACT_APP_API_GATEWAY_URL || 'http://localhost:3000'; // API Gateway URL is on port 3000\naxios.defaults.withCredentials = true; // Enable cookies for cross-origin requests\n\n// Initialize auth store manually (preventing circular dependencies)\ninitializeAuth();\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n\n    </QueryClientProvider>\n  </React.StrictMode>\n);\n","import React, { useState, useRef } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useEventPendingRequests, useRemoveAttendee } from '../../hooks/queries/useMyEventsQueries';\nimport { useAuthStore } from '../../../stores/authStore';\nimport { useQueryClient } from '@tanstack/react-query';\n\n/**\n * MembersTab displays the list of event attendees\n * @param {Array} members - Array of attendees from the event model\n * @param {Object} event - The event object\n */\nconst MembersTab = ({ members = [], event }) => {\n  const user = useAuthStore(state => state.user);\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  const [processingMember, setProcessingMember] = useState(null);\n  const [localMembers, setLocalMembers] = useState(members);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [memberToRemove, setMemberToRemove] = useState(null);\n  const memberNameRef = useRef('');\n  \n  // Update local members when props change\n  React.useEffect(() => {\n    setLocalMembers(members);\n  }, [members]);\n  \n  // Use the remove attendee mutation\n  const { mutate: removeAttendee, isLoading: isRemoving } = useRemoveAttendee();\n  \n  // Check if current user is the host\n  const isHost = user && event?.host?.userId === user._id;\n  \n  // Get pending requests count if user is host\n  const { data: requests } = useEventPendingRequests(event?._id, {\n    enabled: isHost && !!event?._id\n  });\n  \n  const pendingRequestsCount = requests?.length || 0;\n  \n  // Get event ID for link\n  const eventId = event?._id || event?.id;\n  \n  // Get initials from name for avatar fallback\n  const getInitials = (fullName) => {\n    if (!fullName) return '?';\n    \n    const names = fullName.split(' ');\n    if (names.length >= 2) {\n      return `${names[0].charAt(0)}${names[names.length - 1].charAt(0)}`.toUpperCase();\n    }\n    return fullName.charAt(0).toUpperCase();\n  };\n  \n  // Get initials from user ID if name is not available\n  const getIdInitials = (userId) => {\n    if (!userId) return '?';\n    return userId.substring(0, 2).toUpperCase();\n  };\n  \n  // Handle profile click\n  const handleProfileClick = (userId) => {\n    if (!userId) return;\n    navigate(`/users/${userId}`);\n  };\n  \n  // Show confirmation popup before removing member\n  const showRemoveConfirmation = (e, userId, memberName) => {\n    e.stopPropagation(); // Prevent profile navigation\n    if (!userId || !event?._id) return;\n    \n    // Store the member info for the confirmation dialog\n    setMemberToRemove(userId);\n    memberNameRef.current = memberName || 'this member';\n    setShowConfirmation(true);\n  };\n  \n  // Handle actual member removal after confirmation\n  const handleRemoveMember = () => {\n    if (!memberToRemove || !event?._id) return;\n    \n    setProcessingMember(memberToRemove);\n    removeAttendee(\n      { eventId: event._id, userId: memberToRemove },\n      {\n        onSuccess: () => {\n          // Update local state immediately\n          setLocalMembers(prevMembers => prevMembers.filter(member => {\n            const memberId = member.userId || member.id;\n            return memberId !== memberToRemove;\n          }));\n          \n          // Force refetch event members\n          queryClient.invalidateQueries({ queryKey: ['eventMembers', event._id] });\n          queryClient.invalidateQueries({ queryKey: ['eventDetails', event._id] });\n          \n          // Reset state\n          setProcessingMember(null);\n          setMemberToRemove(null);\n          setShowConfirmation(false);\n        },\n        onError: (error) => {\n          console.error('Error removing member:', error);\n          setProcessingMember(null);\n          setMemberToRemove(null);\n          setShowConfirmation(false);\n        }\n      }\n    );\n  };\n  \n  // Cancel member removal\n  const cancelRemoveMember = () => {\n    setMemberToRemove(null);\n    setShowConfirmation(false);\n  };\n  return (\n  <div className=\"p-4 relative\">\n    {/* Join Requests Link (only visible to host) */}\n    {isHost && eventId && (\n      <Link \n        to={`/myevents/${eventId}/requests`}\n        className=\"flex items-center justify-between p-3 mb-4 bg-gray-50 rounded-lg cursor-pointer hover:bg-gray-100 transition-colors\"\n      >\n        <div className=\"flex items-center gap-3\">\n          <div className=\"w-10 h-10 rounded-full bg-indigo-100 flex items-center justify-center\">\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#4f46e5\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n              <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path>\n              <circle cx=\"8.5\" cy=\"7\" r=\"4\"></circle>\n              <line x1=\"20\" y1=\"8\" x2=\"20\" y2=\"14\"></line>\n              <line x1=\"23\" y1=\"11\" x2=\"17\" y2=\"11\"></line>\n            </svg>\n          </div>\n          <div>\n            <div className=\"font-medium\">Join Requests</div>\n            <div className=\"text-sm text-gray-500\">{pendingRequestsCount} pending</div>\n          </div>\n        </div>\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <polyline points=\"9 18 15 12 9 6\"></polyline>\n        </svg>\n      </Link>\n    )}\n    \n    {localMembers.length === 0 ? (\n      <div className=\"text-center text-gray-400\">No attendees listed yet.</div>\n    ) : (\n      <ul className=\"space-y-2\">\n        {localMembers.map((attendee, idx) => {\n          // Handle both formats: {userId, joinedAt} or {id, name, avatar}\n          const userId = attendee.userId || attendee.id;\n          const joinDate = attendee.joinedAt ? new Date(attendee.joinedAt).toLocaleDateString() : '';\n          \n          return (\n            <li \n              key={userId || idx} \n              className=\"flex items-center justify-between p-2 bg-gray-50 rounded component-card cursor-pointer hover:bg-gray-100 transition-colors\"\n              onClick={() => handleProfileClick(userId)}\n            >\n              <div className=\"flex items-center gap-3\">\n                {attendee.avatar ? (\n                  <img\n                    src={attendee.avatar}\n                    alt={attendee.name || `${userId?.substring(0, 8)}`}\n                    className=\"w-8 h-8 rounded-full object-cover border border-gray-200 bg-white\"\n                  />\n                ) : (\n                  <div \n                    className=\"w-8 h-8 rounded-full flex items-center justify-center bg-indigo-100 text-indigo-800 text-xs font-bold border border-gray-200\"\n                  >\n                    {attendee.name ? getInitials(attendee.name) : getIdInitials(userId)}\n                  </div>\n                )}\n                <div className=\"flex flex-col\">\n                  <span className=\"font-medium text-gray-700 hover:text-indigo-600 transition-colors\">\n                    {attendee.name || `${userId?.substring(0, 8)}`}\n                  </span>\n                  {joinDate && (\n                    <span className=\"text-xs text-gray-500\">Joined {joinDate}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                {/* Remove member button - only visible to host and not for the host's own entry */}\n                {isHost && userId !== user?._id && (\n                  <button\n                    onClick={(e) => showRemoveConfirmation(e, userId, attendee.name || attendee.fullName || null)}\n                    disabled={processingMember === userId || isRemoving}\n                    className=\"p-2 rounded-full text-gray-500 hover:bg-red-50 hover:text-red-600 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n                    aria-label=\"Remove member\"\n                  >\n                    {processingMember === userId ? (\n                      <svg className=\"animate-spin h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                      </svg>\n                    ) : (\n                      <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                        <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"></path>\n                        <polyline points=\"16 17 21 12 16 7\"></polyline>\n                        <line x1=\"21\" y1=\"12\" x2=\"9\" y2=\"12\"></line>\n                      </svg>\n                    )}\n                  </button>\n                )}\n              </div>\n              {attendee.role && (\n                <span className=\"ml-auto text-xs text-theme-accent\">{attendee.role}</span>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    )}\n    \n    {/* Confirmation Dialog */}\n    {showConfirmation && (\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n        <div className=\"bg-white rounded-lg p-5 max-w-md w-full\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Remove Member</h3>\n          <p className=\"text-gray-500 mb-4\">\n            Are you sure you want to remove {memberNameRef.current} from this event? \n            They will no longer have access to event details and chat.\n          </p>\n          <div className=\"flex justify-end gap-3\">\n            <button\n              onClick={cancelRemoveMember}\n              className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\"\n              disabled={isRemoving}\n            >\n              Cancel\n            </button>\n            <button\n              onClick={handleRemoveMember}\n              className=\"px-4 py-2 text-sm font-medium text-white bg-red-600 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n              disabled={isRemoving}\n            >\n              {isRemoving ? 'Removing...' : 'Remove'}\n            </button>\n          </div>\n        </div>\n      </div>\n    )}\n  </div>\n);\n};\n\nexport default MembersTab;\n","// useEventMembersQuery.js\n// React Query hook for fetching event members\nimport { useQuery } from '@tanstack/react-query';\nimport { getEventMembers } from '../../services/membersService';\n\nexport function useEventMembersQuery(eventId) {\n  return useQuery({\n    queryKey: ['eventMembers', eventId],\n    queryFn: () => getEventMembers(eventId),\n    enabled: !!eventId,\n  });\n}\n","// membersService.js\n// Service for fetching event attendees from backend API\nimport axios from 'axios';\n\nexport async function getEventMembers(eventId) {\n  try {\n    if (!eventId) {\n      console.error('Event ID not provided for fetching members');\n      return [];\n    }\n    \n    console.log('Fetching attendees for event:', eventId);\n    const response = await axios.get(`/api/events/${eventId}/attendees`);\n    \n    // Log the response for debugging\n    console.log('Event attendees response:', response.data);\n    \n    // Return the attendees from the event data\n    return response.data.data || [];\n  } catch (error) {\n    console.error(`Error fetching attendees for event ${eventId}:`, error);\n    return [];\n  }\n}\n","import { useQuery } from '@tanstack/react-query';\nimport axios from 'axios';\nimport { useAuthStore } from '../../../stores/authStore';\n\n// Configure service URL with better fallback handling for production\nconst SOCKET_URL = process.env.REACT_APP_CHAT_SERVICE_URL || \n  (process.env.NODE_ENV === 'production' ? window.location.origin : 'http://localhost:3020');\n\n// Log the configured URL for debugging\nconsole.log('Chat service URL configured as:', SOCKET_URL);\n\nconst API_URL = `${SOCKET_URL}/api/messages`;\n\n/**\n * Custom hook to get chat preview data (last message and unread count) for each event\n * @param {Array} eventIds - Array of event IDs to fetch chat previews for\n * @returns {Object} - Object containing chatPreviews and isLoading state\n */\nexport function useChatPreviews(eventIds = []) {\n  const user = useAuthStore(state => state.user);\n  const userId = user?._id;\n\n  // Function to fetch chat preview data (last message and unread count)\n  const fetchChatPreviews = async () => {\n    if (!eventIds.length || !userId) return {};\n    \n    try {\n      console.log('Fetching chat previews for events:', eventIds, 'userId:', userId);\n      console.log('Using API URL:', API_URL);\n      \n      // Configure axios with timeout and headers\n      const axiosConfig = {\n        timeout: 10000, // 10 second timeout\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      };\n      \n      // Fetch last messages for each event\n      const previewPromises = eventIds.map(eventId => {\n        const url = `${API_URL}/chat-preview/${eventId}?userId=${userId}`;\n        console.log('Fetching chat preview from:', url);\n        return axios.get(url, axiosConfig);\n      });\n      \n      const results = await Promise.all(previewPromises);\n      console.log('DEBUG useChatPreviews API results:', results);\n      \n      // Transform results into a map of eventId -> preview data\n      const chatPreviews = results.reduce((acc, res, index) => {\n        const eventId = eventIds[index];\n        \n        // Default preview data\n        const defaultPreview = {\n          lastMessage: null,\n          unreadCount: 0,\n          lastMessageTime: null,\n          lastSenderName: null\n        };\n        \n        // Extract data from response or use defaults\n        const previewData = res.data || defaultPreview;\n        console.log(`Chat preview for event ${eventId}:`, previewData);\n        \n        acc[eventId] = previewData;\n        return acc;\n      }, {});\n      \n      // Store the latest results in localStorage as a fallback\n      try {\n        localStorage.setItem('chat-previews', JSON.stringify({\n          timestamp: new Date().toISOString(),\n          data: chatPreviews\n        }));\n      } catch (e) {\n        console.warn('Failed to store chat previews in localStorage:', e);\n      }\n      \n      return chatPreviews;\n    } catch (error) {\n      console.error(\"Error fetching chat previews:\", error);\n      console.error(\"Error details:\", {\n        message: error.message,\n        response: error.response?.data,\n        status: error.response?.status\n      });\n      \n      // Try to use cached data from localStorage as fallback\n      try {\n        const cached = localStorage.getItem('chat-previews');\n        if (cached) {\n          const parsedCache = JSON.parse(cached);\n          console.log('Using cached chat previews from:', parsedCache.timestamp);\n          return parsedCache.data;\n        }\n      } catch (e) {\n        console.warn('Failed to retrieve cached chat previews:', e);\n      }\n      \n      return {};\n    }\n  };\n\n  // Main query to fetch all chat previews\n  const { data: chatPreviews = {}, isLoading } = useQuery({\n    queryKey: ['chatPreviews', eventIds.sort().join(','), userId],\n    queryFn: fetchChatPreviews,\n    enabled: Boolean(eventIds.length && userId),\n    staleTime: 0, // Always fetch fresh data\n    refetchInterval: 60000, // Poll every minute as a fallback for socket issues\n    retry: 3, // Retry failed requests up to 3 times\n    retryDelay: attemptIndex => Math.min(1000 * 2 ** attemptIndex, 30000), // Exponential backoff\n    onError: (error) => {\n      console.error('Chat preview query error:', error);\n    }\n  });\n\n  return { chatPreviews, isLoading };\n}\n\n// Hook for a single event's chat preview\nexport function useChatPreview(eventId) {\n  const { chatPreviews, isLoading } = useChatPreviews(eventId ? [eventId] : []);\n  return { preview: chatPreviews[eventId] || {}, isLoading };\n}\n","// momentsService.js\n// Service for fetching and uploading event moments/photos from backend API\nimport axios from 'axios';\n\n// Configure axios to connect directly to the event service\nconst eventServiceClient = axios.create({\n  baseURL: process.env.REACT_APP_EVENT_SERVICE_URL || 'http://localhost:3002',\n  timeout: 30000 // Longer timeout for image uploads\n  // No default Content-Type header - will be set automatically based on the request\n});\n\n// Intercept requests to add auth token\neventServiceClient.interceptors.request.use(\n  config => {\n    // Extract token from 'auth-storage' in localStorage\n    const authStorage = localStorage.getItem('auth-storage');\n    let token = null;\n    if (authStorage) {\n      try {\n        const parsed = JSON.parse(authStorage);\n        token = parsed.state?.token;\n      } catch (e) {\n        // Optionally log error\n      }\n    }\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\n/**\n * Get event moments/photos\n * @param {string} eventId - The event ID\n * @returns {Promise<Array>} - Array of photo URLs\n */\nexport async function getEventMoments(eventId) {\n  try {\n    if (!eventId) {\n      console.error('Event ID not provided for fetching moments/photos');\n      return [];\n    }\n    \n    console.log('Fetching moments/photos for event:', eventId);\n    const response = await eventServiceClient.get(`/events/${eventId}/photos`);\n    \n    // Log the response for debugging\n    console.log('Event photos response:', response.data);\n    \n    // Return the photos from the event data\n    return response.data.data || [];\n  } catch (error) {\n    console.error(`Error fetching photos for event ${eventId}:`, error);\n    return [];\n  }\n}\n\n/**\n * Upload moment/photo to an event\n * @param {string} eventId - The event ID\n * @param {File} imageFile - The image file to upload\n * @returns {Promise<Object>} - Response with the uploaded image URL\n */\nexport async function uploadEventMoment(eventId, imageFile) {\n  try {\n    if (!eventId || !imageFile) {\n      throw new Error('Event ID and image file are required');\n    }\n    \n    console.log('Uploading moment/photo for event:', eventId, 'file:', imageFile.name, 'type:', imageFile.type, 'size:', imageFile.size);\n    \n    // Create form data for file upload\n    const formData = new FormData();\n    formData.append('momentImage', imageFile, imageFile.name);\n    \n    // Log FormData contents for debugging\n    console.log('FormData created with file:', imageFile.name);\n    \n    // Important: Do NOT set Content-Type header manually\n    // Let axios set it automatically with the correct boundary for multipart/form-data\n    const config = {\n      headers: {\n        // Explicitly remove Content-Type to let browser set it with boundary\n        'Content-Type': undefined\n      }\n    };\n    \n    // Make API call to upload the image\n    console.log(`Making POST request to: /events/images/${eventId}/moments`);\n    const response = await eventServiceClient.post(`/events/images/${eventId}/moments`, formData, config);\n    console.log('Upload moment response:', response.data);\n    \n    return response.data;\n  } catch (error) {\n    console.error(`Error uploading moment for event ${eventId}:`, error.response ? error.response.data : error.message);\n    throw error;\n  }\n}\n","// useMomentsQueries.js\n// React Query hooks for event moments\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { getEventMoments, uploadEventMoment } from '../../services/momentsService';\n\n/**\n * Hook to fetch event moments/photos\n * @param {string} eventId - The event ID\n * @returns {Object} Query result with data, isLoading, and error\n */\nexport function useEventMomentsQuery(eventId) {\n  return useQuery({\n    queryKey: ['eventMoments', eventId],\n    queryFn: () => getEventMoments(eventId),\n    enabled: !!eventId,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\n/**\n * Hook to upload a moment/photo to an event\n * @returns {Object} Mutation result with mutate function\n */\nexport function useUploadEventMoment() {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: ({ eventId, imageFile }) => uploadEventMoment(eventId, imageFile),\n    onSuccess: (data, variables) => {\n      // Invalidate relevant queries to refresh the moments list\n      queryClient.invalidateQueries({ queryKey: ['eventMoments', variables.eventId] });\n    },\n  });\n}\n","import React, { useState, useRef } from 'react';\nimport { useUploadEventMoment, useEventMomentsQuery } from '../../hooks/queries/useMomentsQueries';\n\nconst MomentsTab = ({ eventId }) => {\n  const { data: photos = [], isLoading, isError, refetch } = useEventMomentsQuery(eventId);\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadError, setUploadError] = useState('');\n  const [uploadSuccess, setUploadSuccess] = useState(false);\n  const [localPhotos, setLocalPhotos] = useState(photos);\n  const fileInputRef = useRef(null);\n  \n  // Update local photos when query data changes\n  React.useEffect(() => {\n    setLocalPhotos(photos);\n  }, [photos]);\n  \n  // Use the upload moment mutation\n  const uploadMoment = useUploadEventMoment();\n  \n  // Handle file input change\n  const handleFileChange = (e) => {\n    const files = Array.from(e.target.files);\n    if (files.length === 0) return;\n    \n    setIsUploading(true);\n    setUploadError('');\n    setUploadSuccess(false);\n    \n    // Process each file\n    const uploadPromises = files.map(file => {\n      return new Promise((resolve, reject) => {\n        // Validate file type\n        if (!file.type.startsWith('image/')) {\n          reject(new Error(`${file.name} is not an image file`));\n          return;\n        }\n        \n        // Validate file size (max 5MB)\n        if (file.size > 5 * 1024 * 1024) {\n          reject(new Error(`${file.name} exceeds the 5MB size limit`));\n          return;\n        }\n        \n        // Upload the file\n        uploadMoment.mutate(\n          { eventId, imageFile: file },\n          {\n            onSuccess: (data) => {\n              // Add the new photo URL to the local state\n              setLocalPhotos(prev => [...prev, data.data.imageUrl]);\n              resolve(data);\n            },\n            onError: (error) => {\n              reject(error);\n            }\n          }\n        );\n      });\n    });\n    \n    // Handle all uploads\n    Promise.allSettled(uploadPromises)\n      .then(results => {\n        const successful = results.filter(r => r.status === 'fulfilled').length;\n        const failed = results.filter(r => r.status === 'rejected').length;\n        \n        if (successful > 0) {\n          setUploadSuccess(true);\n          setTimeout(() => setUploadSuccess(false), 3000); // Hide success message after 3 seconds\n          refetch(); // Refresh the photos list\n        }\n        \n        if (failed > 0) {\n          const errors = results\n            .filter(r => r.status === 'rejected')\n            .map(r => r.reason.message);\n          setUploadError(`Failed to upload ${failed} image(s): ${errors.join(', ')}`);\n        }\n        \n        setIsUploading(false);\n        // Reset file input\n        if (fileInputRef.current) {\n          fileInputRef.current.value = '';\n        }\n      });\n  };\n  \n  // Handle upload button click\n  const handleUploadClick = () => {\n    fileInputRef.current?.click();\n  };\n  \n  if (isLoading) return <div className=\"p-4 text-gray-500\">Loading photos...</div>;\n  if (isError) return <div className=\"p-4 text-red-500\">Failed to load photos.</div>;\n  \n  return (\n    <div className=\"relative min-h-[300px]\">\n      {/* Grid layout for photos */}\n      <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-3 px-4 py-3\">\n        {localPhotos.length === 0 ? (\n          <div className=\"col-span-full text-gray-400 text-center py-4\">No photos yet.</div>\n        ) : (\n          localPhotos.map((url, idx) => (\n            <div \n              key={idx} \n              className=\"relative aspect-square overflow-hidden rounded-lg shadow-sm hover:shadow-md transition-shadow cursor-pointer\"\n            >\n              <img\n                src={url}\n                alt={`Event photo ${idx + 1}`}\n                className=\"w-full h-full object-cover hover:scale-105 transition-transform duration-300\"\n                loading=\"lazy\"\n              />\n            </div>\n          ))\n        )}\n      </div>\n      \n      {/* Floating Action Button (FAB) for upload */}\n      <div className=\"fixed bottom-24 right-6 z-50\">\n        <button \n          onClick={handleUploadClick}\n          disabled={isUploading}\n          className=\"p-4 rounded-full bg-indigo-600 text-white shadow-lg hover:bg-indigo-700 focus:outline-none disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center transition-all hover:scale-105\"\n          aria-label=\"Upload photos\"\n        >\n          {isUploading ? (\n            <svg className=\"animate-spin h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n              <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n              <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n            </svg>\n          ) : (\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n              <path d=\"M12 5v14M5 12h14\"></path>\n            </svg>\n          )}\n        </button>\n      </div>\n      \n      {/* Hidden file input */}\n      <input \n        type=\"file\" \n        ref={fileInputRef} \n        onChange={handleFileChange} \n        accept=\"image/*\" \n        multiple \n        className=\"hidden\" \n      />\n      \n      {/* Status messages */}\n      {uploadError && (\n        <div className=\"fixed bottom-36 right-6 left-6 bg-red-100 border border-red-400 text-red-700 px-4 py-2 rounded z-50\">\n          {uploadError}\n        </div>\n      )}\n      \n      {uploadSuccess && (\n        <div className=\"fixed bottom-36 right-6 left-6 bg-green-100 border border-green-400 text-green-700 px-4 py-2 rounded z-50\">\n          Images uploaded successfully!\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MomentsTab;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useAuthStore } from '../../../stores/authStore';\n\n/**\n * GroupHeader component displays the event (group) name and photo in the chat header.\n * @param {Object} props\n * @param {Object} props.event - The event object containing title and imageUrl\n * @param {Function} props.onClick - Function to call when header is clicked\n * @param {Boolean} props.isAdmin - Whether the current user is an admin\n * @param {Function} props.onTagFilter - Function to call when a tag is clicked for filtering\n * @param {Object} props.selectedTag - The currently selected tag for filtering\n * @param {Function} props.onTagClick - Function to call when a tag is clicked to insert in chat input\n * @param {Boolean} props.showTags - Whether to show the tag pills\n * @param {Function} props.toggleShowTags - Function to toggle the tag pills\n */\n\nconst API_URL = process.env.REACT_APP_CHAT_SERVICE_URL || 'http://localhost:3020';\n\nconst GroupHeader = ({ event, onClick, isAdmin, onTagFilter, selectedTag, onTagClick, showTags = true, toggleShowTags }) => {\n  const [tags, setTags] = useState([]);\n  const [newTag, setNewTag] = useState('');\n  const [editingTagId, setEditingTagId] = useState(null);\n  const [editingTagName, setEditingTagName] = useState('');\n  const [error, setError] = useState('');\n  const [showTagDropdown, setShowTagDropdown] = useState(false);\n  const [tagLoading, setTagLoading] = useState(false);\n  const [isHost, setIsHost] = useState(false);\n  \n  // Get current user from auth store\n  const currentUser = useAuthStore(state => state.user);\n\n  // Debug log\n  console.log('[GroupHeader Debug] isAdmin:', isAdmin, 'tags:', tags, 'event:', event);\n\n  // Check if current user is the host of the event\n  useEffect(() => {\n    if (!currentUser || !event || !event.host) return;\n    if (typeof event.host === 'object') {\n      if (event.host.userId) {\n        setIsHost(event.host.userId.toString() === currentUser._id.toString());\n      } else if (event.host._id) {\n        setIsHost(event.host._id.toString() === currentUser._id.toString());\n      } else if (event.host.id) {\n        setIsHost(event.host.id.toString() === currentUser._id.toString());\n      }\n    } else {\n      setIsHost(event.host.toString() === currentUser._id.toString());\n    }\n  }, [currentUser, event]);\n\n  useEffect(() => {\n    if (!event?._id) return;\n    fetchTags();\n    // eslint-disable-next-line\n  }, [event?._id]);\n  \n  // Add event listener to handle clicks outside the tag dropdown\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      // Check if the click was outside the tag dropdown\n      if (showTagDropdown && !event.target.closest('.tag-dropdown-container')) {\n        setShowTagDropdown(false);\n      }\n    };\n\n    // Add the event listener\n    document.addEventListener('mousedown', handleClickOutside);\n    \n    // Clean up\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [showTagDropdown]);\n\n  const fetchTags = async () => {\n    setTagLoading(true);\n    try {\n      const res = await axios.get(`${API_URL}/api/tags?eventId=${event._id}`);\n      setTags(res.data);\n    } catch (err) {\n      setError('Failed to fetch tags');\n    } finally {\n      setTagLoading(false);\n    }\n  };\n\n  const handleAddTag = async () => {\n    if (!newTag.trim()) return;\n    // Check if tag limit is reached\n    if (tags.length >= 3) {\n      setError('Maximum of 3 tags allowed');\n      return;\n    }\n    setError('');\n    try {\n      // Convert tag name to lowercase before saving\n      const tagNameLowercase = newTag.trim().toLowerCase();\n      await axios.post(`${API_URL}/api/tags`, { name: tagNameLowercase, eventId: event._id });\n      setNewTag('');\n      fetchTags();\n    } catch (err) {\n      setError(err.response?.data?.error || 'Failed to add tag');\n    }\n  };\n\n  const handleEditTag = async (tagId) => {\n    if (!editingTagName.trim()) return;\n    setError('');\n    try {\n      // Convert tag name to lowercase before saving\n      const tagNameLowercase = editingTagName.trim().toLowerCase();\n      await axios.put(`${API_URL}/api/tags/${tagId}`, { name: tagNameLowercase });\n      setEditingTagId(null);\n      setEditingTagName('');\n      fetchTags();\n    } catch (err) {\n      setError(err.response?.data?.error || 'Failed to edit tag');\n    }\n  };\n\n  const handleDeleteTag = async (tagId) => {\n    setError('');\n    try {\n      await axios.delete(`${API_URL}/api/tags/${tagId}`);\n      fetchTags();\n    } catch (err) {\n      setError('Failed to delete tag');\n    }\n  };\n\n  if (!event) return null;\n  // Get event ID (support both _id and id formats)\n  const eventId = event._id || event.id;\n  // Get event title (support both title and eventName formats)\n  const eventTitle = event.title || event.eventName || \"Event\";\n  // Get event image (support multiple image field names)\n  const eventImage = event.event_image || event.thumbnail || event.imageUrl || \"/default-group.png\";\n  \n  // Truncate event title to 25 characters (increased from 21)\n  const displayTitle = eventTitle.length > 25 \n    ? `${eventTitle.substring(0, 25)}...` \n    : eventTitle;\n  \n  console.log('[GroupHeader] Using eventId:', eventId, 'title:', eventTitle);\n  \n  return (\n    <div className=\"flex flex-col w-full\">\n      <div className=\"flex items-center w-full\">\n        <button\n          className=\"flex items-center gap-3 group focus:outline-none w-full transition-all duration-300 justify-start flex-grow\"\n          onClick={onClick}\n          aria-label={`View details for ${eventTitle}`}\n          type=\"button\"\n        >\n          <div className=\"relative flex-shrink-0\">\n            <img\n              src={eventImage}\n              alt={eventTitle}\n              className=\"w-10 h-10 rounded-lg object-cover border border-gray-200 bg-gray-50 group-hover:brightness-95 group-focus:brightness-95 transition-all duration-300 shadow-sm\"\n            />\n            <div className=\"absolute -bottom-1 -right-1 w-3 h-3 bg-green-500 rounded-full border-2 border-white\"></div>\n          </div>\n          <div className=\"flex flex-col items-start flex-grow min-w-0 text-left\">\n            <span \n              className=\"font-semibold text-base text-gray-800 group-hover:text-indigo-600 group-focus:text-indigo-600 transition-colors duration-300 overflow-hidden text-ellipsis whitespace-nowrap w-full text-left\"\n              title={eventTitle}\n            >\n              {displayTitle}\n            </span>\n          </div>\n        </button>\n        \n        {/* Tag add button (+ icon) - only visible to hosts, now to the left of toggle */}\n        {isHost && (\n          <div className=\"relative tag-dropdown-container ml-2\">\n            <button\n              type=\"button\"\n              className=\"w-8 h-8 flex items-center justify-center rounded-full bg-indigo-50 text-indigo-700 hover:bg-indigo-100\"\n              onClick={() => setShowTagDropdown(v => !v)}\n              aria-label=\"Manage tags\"\n            >\n              <span className=\"text-base font-bold\">+</span>\n            </button>\n            {showTagDropdown && (\n              <div className=\"absolute right-0 top-9 z-50 bg-white border border-gray-200 rounded shadow-lg min-w-[180px] max-w-[220px] max-h-64 overflow-y-auto p-2\">\n                {/* Tag limit message */}\n                <div className=\"text-xs text-gray-600 mb-2 italic\">\n                  Only host can add or remove up to 3 tags\n                </div>\n                {/* Add tag input */}\n                <div className=\"flex gap-1 mb-2 items-center\">\n                  <input\n                    type=\"text\"\n                    value={newTag}\n                    onChange={e => setNewTag(e.target.value)}\n                    maxLength={20}\n                    placeholder=\"Add new tag...\"\n                    className=\"border px-2 py-1 rounded text-xs flex-1 w-[100px] min-w-0\"\n                    style={{ maxWidth: \"120px\" }}\n                    disabled={tags.length >= 3}\n                  />\n                  <button\n                    onClick={handleAddTag}\n                    className=\"bg-indigo-600 text-white px-2 py-1 rounded text-xs hover:bg-indigo-700 whitespace-nowrap flex-shrink-0\"\n                    disabled={tags.length >= 3 || !newTag.trim()}\n                    style={{ opacity: (tags.length >= 3 || !newTag.trim()) ? 0.6 : 1 }}\n                  >\n                    Add\n                  </button>\n                </div>\n                {tagLoading ? (\n                  <div className=\"p-2 text-xs text-gray-500\">Loading...</div>\n                ) : error ? (\n                  <div className=\"p-2 text-xs text-red-500\">{error}</div>\n                ) : tags.length === 0 ? (\n                  <div className=\"p-2 text-xs text-gray-400\">No tags</div>\n                ) : (\n                  tags.map(tag => (\n                    <div key={tag._id} className=\"flex items-center w-full mb-2\">\n                      {editingTagId === tag._id ? (\n                        <>\n                          <input\n                            type=\"text\"\n                            value={editingTagName}\n                            onChange={e => setEditingTagName(e.target.value)}\n                            maxLength={20}\n                            className=\"border px-1 py-0.5 rounded text-xs\"\n                            style={{ width: 70 }}\n                          />\n                          <button onClick={() => handleEditTag(tag._id)} className=\"text-green-600 text-xs font-bold\">✔</button>\n                          <button onClick={() => { setEditingTagId(null); setEditingTagName(''); }} className=\"text-gray-400 text-xs font-bold\">✖</button>\n                        </>\n                      ) : (\n                        <div className=\"flex items-center w-full\">\n                          <span className=\"inline-block bg-indigo-100 text-indigo-700 px-3 py-0.5 rounded-full text-sm font-medium hover:bg-indigo-200 flex-shrink-0\">\n                            #{tag.name}\n                          </span>\n                          <div className=\"flex-1\"></div>\n                          <button \n                            onClick={() => handleDeleteTag(tag._id)} \n                            className=\"text-red-600 text-lg font-bold ml-2 p-1 hover:bg-red-50 rounded-full\"\n                            title=\"Delete tag\"\n                          >\n                            🗑\n                          </button>\n                        </div>\n                      )}\n                    </div>\n                  ))\n                )}\n              </div>\n            )}\n          </div>\n        )}\n        \n        {/* Tag toggle chevron icon - now in line with group name */}\n        <button\n          type=\"button\"\n          className=\"flex items-center justify-center w-7 h-7 ml-2 rounded-full border border-indigo-200 bg-white text-indigo-700 hover:bg-indigo-50 transition focus:outline-none\"\n          onClick={toggleShowTags}\n          aria-label={showTags ? 'Hide tags' : 'Show tags'}\n          style={{ minWidth: 28 }}\n        >\n          {showTags ? (\n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 20 20\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\"><polyline points=\"6 12 10 8 14 12\" /></svg>\n          ) : (\n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 20 20\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\"><polyline points=\"6 8 10 12 14 8\" /></svg>\n          )}\n        </button>\n      </div>\n      {/* Tag management and filtering */}\n      <div className=\"flex items-center gap-2 mt-1 relative\">\n        {/* Tag pills for filtering */}\n        <div\n          className={`overflow-hidden transition-all duration-300 ${showTags ? 'max-h-32 opacity-100' : 'max-h-0 opacity-0 pointer-events-none'}`}\n          style={{ display: 'flex', alignItems: 'center', gap: '8px', WebkitOverflowScrolling: 'touch' }}\n        >\n          {tags.map(tag => {\n            const isSelected = selectedTag && selectedTag._id === tag._id;\n            return (\n              <span\n                key={tag._id}\n                className={`inline-flex items-center px-3 py-1 mr-2 rounded-full text-sm font-medium cursor-pointer transition-colors\n                  ${isSelected ? 'bg-indigo-600 text-white' : 'bg-indigo-100 text-indigo-700 hover:bg-indigo-200'}`}\n                onClick={(e) => {\n                  // First add the tag to the chat input\n                  if (onTagClick) {\n                    onTagClick(tag);\n                  }\n                  // Then also filter messages by this tag\n                  onTagFilter && onTagFilter(isSelected ? null : tag);\n                }}\n                style={{ display: 'inline-block' }}\n                title=\"Click to add tag to message and filter by tag\"\n              >\n                #{tag.name}\n              </span>\n            );\n          })}\n        </div>\n      </div>\n      {error && <div className=\"text-red-500 text-xs mt-1\">{error}</div>}\n    </div>\n  );\n};\n\nexport default GroupHeader;\n","import React, { useState, useEffect } from 'react';\nimport { FaMapMarkerAlt, FaExternalLinkAlt, FaTrash, FaTag, FaClock, FaCalendarAlt, FaUsers, FaRupeeSign, FaCheckCircle, FaTimesCircle, FaInfoCircle } from 'react-icons/fa';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { useAuthStore } from '../../../stores/authStore';\nimport { useState as useLocalState } from 'react';\n\nconst TAG_COLORS = [\n  'bg-blue-100 text-blue-800',\n  'bg-green-100 text-green-800',\n  'bg-purple-100 text-purple-800',\n  'bg-pink-100 text-pink-800',\n  'bg-yellow-100 text-yellow-800',\n  'bg-indigo-100 text-indigo-800',\n];\n\n/**\n * AboutTab displays general information about an event, inspired by EventDetailPage\n */\nconst AboutTab = ({ event }) => {\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [error, setError] = useState(null);\n  const [isHost, setIsHost] = useState(false);\n  const [copySuccess, setCopySuccess] = useState(false);\n  const navigate = useNavigate();\n  \n  // Get current user from auth store\n  const currentUser = useAuthStore(state => state.user);\n  \n  // Check if current user is the host of the event\n  useEffect(() => {\n    if (!currentUser || !event || !event.host) return;\n    if (typeof event.host === 'object') {\n      if (event.host.userId) {\n        setIsHost(event.host.userId.toString() === currentUser._id.toString());\n      } else if (event.host._id) {\n        setIsHost(event.host._id.toString() === currentUser._id.toString());\n      } else if (event.host.id) {\n        setIsHost(event.host.id.toString() === currentUser._id.toString());\n      }\n    } else {\n      setIsHost(event.host.toString() === currentUser._id.toString());\n    }\n  }, [currentUser, event]);\n\n  const attendeeCount = Array.isArray(event.attendees) \n    ? event.attendees.length \n    : (typeof event.attendees === 'number' ? event.attendees : 0);\n\n  // Google Maps URL\n  const getGoogleMapsUrl = () => {\n    if (event?.place?.coordinates?.latitude && event?.place?.coordinates?.longitude) {\n      const { latitude, longitude } = event.place.coordinates;\n      return `https://www.google.com/maps/search/?api=1&query=${latitude},${longitude}`;\n    }\n    if (event?.place?.name && event?.location?.city) {\n      return `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(\n        `${event.place.name}, ${event.location.city}, India`\n      )}`;\n    }\n    if (event?.location?.city) {\n      return `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(\n        `${event.location.city}, India`\n      )}`;\n    }\n    return null;\n  };\n  const mapsUrl = getGoogleMapsUrl();\n\n  // Helper: format date/time\n  const formatDate = (date) => {\n    if (!date) return 'Not specified';\n    try {\n      const d = new Date(date);\n      return d.toLocaleDateString('en-US', { day: '2-digit', month: 'long', year: 'numeric' });\n    } catch {\n      return date;\n    }\n  };\n  const formatTime = (time) => {\n    if (!time) return null;\n    if (time.length <= 5 && time.includes(':')) return time;\n    try {\n      return new Date(time).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    } catch {\n      return time;\n    }\n  };\n\n  // Host/Organizer info\n  const host = event.host || event.organizer;\n  const hostName = host?.name || host?.username || host?.email || 'Unknown';\n  const hostAvatar = host?.image || host?.avatar || null;\n  const hostRole = event.organizer ? 'Organizer' : 'Host';\n\n  // Tags\n  const tags = event.tags || event.tagList || [];\n\n  // Event status\n  const isClosed = event.status === 'closed' || event.isClosed;\n\n  // Price\n  const price = event.price || event.fee || 0;\n\n  // RSVP deadline\n  const rsvp = event.rsvpDeadline || event.rsvp || null;\n\n  // Event type\n  const type = event.type || event.eventType || 'Event';\n\n  // End date\n  const endDate = event.date?.end || event.endDate || null;\n\n  // Copy address handler\n  const handleCopyAddress = () => {\n    const address = event?.place?.address || event.location?.city || '';\n    if (!address) return;\n    navigator.clipboard.writeText(address);\n    setCopySuccess(true);\n    setTimeout(() => setCopySuccess(false), 1200);\n  };\n\n  const [showEditModal, setShowEditModal] = useLocalState(false);\n  const [editData, setEditData] = useLocalState({});\n  const [editLoading, setEditLoading] = useLocalState(false);\n  const [editError, setEditError] = useLocalState('');\n\n  // Open edit modal with current event data\n  const handleEditClick = () => {\n    setEditData({\n      title: event.title || event.eventName || '',\n      description: event.description || '',\n      date: event.date?.start || event.date || '',\n      endDate: event.date?.end || event.endDate || '',\n      time: event.time || '',\n      capacity: event.capacity || '',\n      type: event.type || event.eventType || '',\n      price: event.price || event.fee || 0,\n      rsvp: event.rsvpDeadline || event.rsvp || '',\n      location: event.place?.address || event.location?.city || '',\n      tags: (event.tags || event.tagList || []).join(', '),\n    });\n    setShowEditModal(true);\n    setEditError('');\n  };\n\n  // Handle edit form change\n  const handleEditChange = (e) => {\n    const { name, value } = e.target;\n    setEditData(prev => ({ ...prev, [name]: value }));\n  };\n\n  // Handle edit form submit\n  const handleEditSave = async () => {\n    setEditLoading(true);\n    setEditError('');\n    try {\n      const eventId = event._id || event.id;\n      const payload = {\n        title: editData.title,\n        description: editData.description,\n        date: { start: editData.date, end: editData.endDate },\n        time: editData.time,\n        capacity: editData.capacity,\n        type: editData.type,\n        price: editData.price,\n        rsvpDeadline: editData.rsvp,\n        location: { city: editData.location },\n        tags: editData.tags.split(',').map(t => t.trim()).filter(Boolean),\n      };\n      await axios.put(`${process.env.REACT_APP_API_GATEWAY_URL || 'http://localhost:5000'}/api/events/${eventId}`, payload, {\n        headers: { 'x-auth-token': localStorage.getItem('token') }\n      });\n      setShowEditModal(false);\n      window.location.reload(); // Or refetch event info if using React Query\n    } catch (err) {\n      setEditError(err.response?.data?.error || 'Failed to update event.');\n    } finally {\n      setEditLoading(false);\n    }\n  };\n\n  const [showAnnouncementEdit, setShowAnnouncementEdit] = useLocalState(false);\n  const [announcementDraft, setAnnouncementDraft] = useLocalState(event.announcement || '');\n  const [announcementLoading, setAnnouncementLoading] = useLocalState(false);\n  const [announcementError, setAnnouncementError] = useLocalState('');\n\n  // Save announcement\n  const handleAnnouncementSave = async () => {\n    setAnnouncementLoading(true);\n    setAnnouncementError('');\n    try {\n      const eventId = event._id || event.id;\n      await axios.put(`${process.env.REACT_APP_API_GATEWAY_URL || 'http://localhost:5000'}/api/events/${eventId}`, { announcement: announcementDraft }, {\n        headers: { 'x-auth-token': localStorage.getItem('token') }\n      });\n      setShowAnnouncementEdit(false);\n      // Optionally, show a success message or trigger a refetch in parent if needed\n    } catch (err) {\n      setAnnouncementError(err.response?.data?.error || 'Failed to update announcement.');\n    } finally {\n      setAnnouncementLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"p-2 sm:p-4 text-gray-700 space-y-4 overflow-x-hidden\">\n      {/* Announcement Section */}\n      <div className=\"bg-gray-100 rounded-xl p-4 mb-2 flex flex-col gap-2\">\n        <div className=\"flex items-center gap-2 mb-1\">\n          <span className=\"text-2xl\">📌</span>\n          <span className=\"font-semibold text-base\">Announcement</span>\n          {isHost && (\n            <button\n              onClick={() => setShowAnnouncementEdit(true)}\n              className=\"ml-2 text-xs text-indigo-600 hover:underline focus:outline-none\"\n            >\n              Edit\n            </button>\n          )}\n        </div>\n        {event.announcement && !showAnnouncementEdit && (\n          <div className=\"text-gray-800 whitespace-pre-line break-words\">{event.announcement}</div>\n        )}\n        {!event.announcement && !showAnnouncementEdit && (\n          <div className=\"italic text-gray-400\">No announcement yet.</div>\n        )}\n        {/* Edit modal for announcement */}\n        {showAnnouncementEdit && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4 animate-fadein\">\n            <div className=\"bg-white rounded-lg p-5 max-w-md w-full\">\n              <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Edit Announcement</h3>\n              <textarea\n                value={announcementDraft}\n                onChange={e => setAnnouncementDraft(e.target.value)}\n                className=\"w-full border rounded px-2 py-1\"\n                rows={4}\n                placeholder=\"Enter announcement...\"\n                disabled={announcementLoading}\n              />\n              {announcementError && <p className=\"text-red-500 text-xs mt-2\">{announcementError}</p>}\n              <div className=\"flex justify-end gap-2 mt-4\">\n                <button\n                  onClick={() => setShowAnnouncementEdit(false)}\n                  className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\"\n                  disabled={announcementLoading}\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={handleAnnouncementSave}\n                  className=\"px-4 py-2 text-sm font-medium text-white bg-indigo-600 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                  disabled={announcementLoading}\n                >\n                  {announcementLoading ? 'Saving...' : 'Save'}\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* About Card */}\n      <div className=\"bg-gray-100 rounded-xl p-4 mb-2\">\n        <h2 className=\"text-lg font-bold flex items-center gap-2 mb-2\">\n          <FaInfoCircle className=\"text-indigo-500\" /> About this {type}\n        </h2>\n        <p className=\"whitespace-pre-line break-words break-all text-gray-800 text-base animate-fadein\">{event.description || 'No description available.'}</p>\n      </div>\n\n      {/* Details Card */}\n      <div className=\"bg-gray-100 rounded-xl p-4 mb-2\">\n        <h3 className=\"text-base font-semibold flex items-center gap-2 mb-3\">\n          <FaCalendarAlt className=\"text-indigo-500\" /> Details\n        </h3>\n        <div className=\"grid grid-cols-2 gap-x-4 gap-y-2 text-sm\">\n          <div className=\"flex items-center gap-2 justify-start text-gray-600 font-medium\"> <FaCalendarAlt className=\"text-indigo-400\" /> Date:</div>\n          <div className=\"flex items-center justify-end\">{formatDate(event.date?.start || event.date)}</div>\n\n          {endDate && <><div className=\"flex items-center gap-2 justify-start text-gray-600 font-medium\"><FaCalendarAlt className=\"text-indigo-400\" /> End Date:</div><div className=\"flex items-center justify-end\">{formatDate(endDate)}</div></>}\n\n          {event.time && <><div className=\"flex items-center gap-2 justify-start text-gray-600 font-medium\"><FaClock className=\"text-indigo-400\" /> Time:</div><div className=\"flex items-center justify-end\">{formatTime(event.time)}</div></>}\n\n          <div className=\"flex items-center gap-2 justify-start text-gray-600 font-medium\"><FaUsers className=\"text-indigo-400\" /> Attendees:</div>\n          <div className=\"flex items-center justify-end\"><span className=\"inline-block px-2 py-0.5 rounded-full bg-indigo-100 text-indigo-700 text-xs font-semibold\">{attendeeCount} {attendeeCount === 1 ? 'person' : 'people'}</span></div>\n\n          {event.capacity && <><div className=\"flex items-center gap-2 justify-start text-gray-600 font-medium\"><FaUsers className=\"text-indigo-400\" /> Capacity:</div><div className=\"flex items-center justify-end\"><span className=\"inline-block px-2 py-0.5 rounded-full bg-gray-100 text-gray-700 text-xs font-semibold\">{event.capacity}</span></div></>}\n\n          <div className=\"flex items-center gap-2 justify-start text-gray-600 font-medium\"><FaTag className=\"text-indigo-400\" /> Type:</div>\n          <div className=\"flex items-center justify-end\">{type}</div>\n\n          {price !== undefined && <><div className=\"flex items-center gap-2 justify-start text-gray-600 font-medium\"><FaRupeeSign className=\"text-indigo-400\" /> Price:</div><div className=\"flex items-center justify-end\"><span className={`inline-block px-2 py-0.5 rounded-full ${price === 0 ? 'bg-green-100 text-green-700' : 'bg-yellow-100 text-yellow-800'} text-xs font-semibold`}>{price === 0 ? 'Free' : `₹${price}`}</span></div></>}\n\n          {rsvp && <><div className=\"flex items-center gap-2 justify-start text-gray-600 font-medium\"><FaClock className=\"text-indigo-400\" /> RSVP by:</div><div className=\"flex items-center justify-end\">{formatDate(rsvp)}</div></>}\n\n          <div className=\"flex items-center gap-2 justify-start text-gray-600 font-medium\"><FaCheckCircle className=\"text-green-500 animate-pulse\" /> Status:</div>\n          <div className=\"flex items-center justify-end\">{isClosed ? <span className=\"inline-flex items-center gap-1 px-2 py-0.5 rounded-full bg-red-100 text-red-700 text-xs font-semibold\"><FaTimesCircle className=\"text-red-500\" /> Closed</span> : <span className=\"inline-flex items-center gap-1 px-2 py-0.5 rounded-full bg-green-100 text-green-700 text-xs font-semibold\">Open</span>}</div>\n        </div>\n      </div>\n\n      {/* Tags Card */}\n      {tags.length > 0 && (\n        <div className=\"bg-gray-100 rounded-xl p-4 mb-2\">\n          <h3 className=\"text-base font-semibold flex items-center gap-2 mb-3\">\n            <FaTag className=\"text-indigo-500\" /> Tags\n          </h3>\n          <div className=\"flex flex-wrap gap-2\">\n            {tags.map((tag, idx) => (\n              <span key={idx} className={`flex items-center px-3 py-1 rounded-full text-sm font-semibold ${TAG_COLORS[idx % TAG_COLORS.length]} transition-colors duration-200`}>\n                {idx === 0 && <FaTag className=\"mr-1 text-indigo-400 text-xs\" />} {tag}\n              </span>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Location Card */}\n      <div className=\"bg-gray-100 rounded-xl p-4 mb-2\">\n        <h3 className=\"text-base font-semibold flex items-center gap-2 mb-3\">\n          <FaMapMarkerAlt className=\"text-indigo-500\" /> Location\n        </h3>\n        <div className=\"flex items-start gap-2 mb-1\">\n          <FaMapMarkerAlt className=\"text-indigo-400 mt-0.5\" />\n          <div className=\"min-w-0 break-words\">\n            {event?.place?.name && <div className=\"font-medium\">{event.place.name}</div>}\n            <div>{event?.place?.address || event.location?.city || 'Location not specified'}</div>\n          </div>\n        </div>\n        <div className=\"flex gap-2 mt-2\">\n          {mapsUrl && (\n            <a\n              href={mapsUrl}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"inline-flex flex-wrap items-center px-3 py-1.5 text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 max-w-full break-words\"\n            >\n              <FaMapMarkerAlt className=\"mr-1.5\" />\n              Open in Google Maps\n              <FaExternalLinkAlt className=\"ml-1.5 h-3 w-3\" />\n            </a>\n          )}\n          <button\n            onClick={handleCopyAddress}\n            className=\"inline-flex items-center px-3 py-1.5 text-sm font-medium rounded-md bg-gray-100 hover:bg-gray-100 text-gray-700 border border-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-400 transition-colors\"\n          >\n            <FaMapMarkerAlt className=\"mr-1.5 text-indigo-400\" />\n            Copy address\n          </button>\n          {copySuccess && <span className=\"text-green-600 text-xs ml-2 animate-fadein\">Copied!</span>}\n        </div>\n      </div>\n\n      {/* Host/Organizer Card */}\n      {host && (\n        <div\n          className=\"bg-gray-100 rounded-xl p-4 mb-2 flex items-center gap-4 cursor-pointer group\"\n          title=\"View profile\"\n          tabIndex={0}\n          onClick={() => host?.id && navigate(`/profile/${host.id}`)}\n          onKeyDown={e => { if (e.key === 'Enter' && host?.id) navigate(`/profile/${host.id}`); }}\n        >\n          {hostAvatar ? (\n            <img src={hostAvatar} alt={hostName} className=\"w-12 h-12 rounded-full object-cover border border-gray-200 bg-gray-50 group-hover:brightness-95 transition-all duration-200\" />\n          ) : (\n            <div className=\"w-12 h-12 rounded-full flex items-center justify-center bg-indigo-100 text-indigo-700 text-xl font-bold border border-gray-200 group-hover:brightness-95 transition-all duration-200\">\n              {hostName[0]?.toUpperCase() || '?'}\n            </div>\n          )}\n          <div>\n            <div className=\"font-semibold text-gray-800 text-base flex items-center gap-1\">\n              {hostName}\n              {host?.verified && <FaCheckCircle className=\"text-indigo-500 ml-1\" title=\"Verified\" />}\n            </div>\n            <div className=\"text-xs text-gray-500\">{hostRole}{host?.bio && <span className=\"ml-2 text-gray-400\">{host.bio}</span>}</div>\n          </div>\n        </div>\n      )}\n\n      {/* Host Actions (Edit/Delete) */}\n      {isHost && (\n        <div className=\"bg-gray-100 rounded-xl p-4 mb-2 flex flex-col gap-2\">\n          <div className=\"flex gap-2\">\n            <button\n              onClick={handleEditClick}\n              className=\"flex items-center px-3 py-1.5 text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors\"\n              disabled={editLoading}\n            >\n              Edit\n            </button>\n            <button \n              onClick={() => setShowConfirmation(true)}\n              className=\"flex items-center px-3 py-1.5 text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors\"\n              disabled={isDeleting}\n            >\n              <FaTrash className=\"mr-1.5\" />\n              {isDeleting ? 'Deleting...' : 'Delete Event'}\n            </button>\n          </div>\n          {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\n        </div>\n      )}\n\n      {/* Edit Modal */}\n      {showEditModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4 animate-fadein\">\n          <div className=\"bg-white rounded-lg p-5 max-w-md w-full\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Edit Group Info</h3>\n            <div className=\"space-y-3\">\n              <input name=\"title\" value={editData.title} onChange={handleEditChange} className=\"w-full border rounded px-2 py-1\" placeholder=\"Title\" />\n              <textarea name=\"description\" value={editData.description} onChange={handleEditChange} className=\"w-full border rounded px-2 py-1\" placeholder=\"Description\" rows={3} />\n              <input name=\"date\" value={editData.date} onChange={handleEditChange} className=\"w-full border rounded px-2 py-1\" placeholder=\"Start Date\" type=\"date\" />\n              <input name=\"endDate\" value={editData.endDate} onChange={handleEditChange} className=\"w-full border rounded px-2 py-1\" placeholder=\"End Date\" type=\"date\" />\n              <input name=\"time\" value={editData.time} onChange={handleEditChange} className=\"w-full border rounded px-2 py-1\" placeholder=\"Time\" type=\"time\" />\n              <input name=\"capacity\" value={editData.capacity} onChange={handleEditChange} className=\"w-full border rounded px-2 py-1\" placeholder=\"Capacity\" type=\"number\" />\n              <input name=\"type\" value={editData.type} onChange={handleEditChange} className=\"w-full border rounded px-2 py-1\" placeholder=\"Type\" />\n              <input name=\"price\" value={editData.price} onChange={handleEditChange} className=\"w-full border rounded px-2 py-1\" placeholder=\"Price\" type=\"number\" />\n              <input name=\"rsvp\" value={editData.rsvp} onChange={handleEditChange} className=\"w-full border rounded px-2 py-1\" placeholder=\"RSVP Deadline\" type=\"date\" />\n              <input name=\"location\" value={editData.location} onChange={handleEditChange} className=\"w-full border rounded px-2 py-1\" placeholder=\"Location\" />\n              <input name=\"tags\" value={editData.tags} onChange={handleEditChange} className=\"w-full border rounded px-2 py-1\" placeholder=\"Tags (comma separated)\" />\n            </div>\n            {editError && <p className=\"text-red-500 text-xs mt-2\">{editError}</p>}\n            <div className=\"flex justify-end gap-2 mt-4\">\n              <button\n                onClick={() => setShowEditModal(false)}\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\"\n                disabled={editLoading}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleEditSave}\n                className=\"px-4 py-2 text-sm font-medium text-white bg-indigo-600 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                disabled={editLoading}\n              >\n                {editLoading ? 'Saving...' : 'Save'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Confirmation Dialog */}\n      {showConfirmation && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4 animate-fadein\">\n          <div className=\"bg-white rounded-lg p-5 max-w-md w-full\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Delete Event</h3>\n            <p className=\"text-gray-500 mb-4\">Are you sure you want to delete this event? This action is irreversible and all event data will be permanently removed.</p>\n            <div className=\"flex justify-end gap-3\">\n              <button\n                onClick={() => setShowConfirmation(false)}\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\"\n                disabled={isDeleting}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={async () => {\n                  try {\n                    setIsDeleting(true);\n                    setError(null);\n                    const eventId = event._id || event.id;\n                    await axios.delete(`${process.env.REACT_APP_API_GATEWAY_URL || 'http://localhost:5000'}/api/events/${eventId}`);\n                    navigate('/explore');\n                    window.location.reload();\n                  } catch (err) {\n                    console.error('Error deleting event:', err);\n                    setError('Failed to delete event. Please try again.');\n                    setIsDeleting(false);\n                    setShowConfirmation(false);\n                  }\n                }}\n                className=\"px-4 py-2 text-sm font-medium text-white bg-red-600 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n                disabled={isDeleting}\n              >\n                {isDeleting ? 'Deleting...' : 'Delete'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default AboutTab;\n","import React, { useState, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FaShare, FaCheck, FaStar, FaRegStar, FaComment } from 'react-icons/fa';\nimport { isPast } from 'date-fns';\nimport eventService from '../../services/eventService';\n\n// Only use global CSS classes!\nconst MyEventTicketCard = ({ event, isPending = false, unreadCount = 0, showUnreadBadge = false, lastMessage = '', lastMessageTime }) => {\n  console.log('CARD BADGE', { eventTitle: event.title, unreadCount, showUnreadBadge });\n  const navigate = useNavigate();\n\n  // Format the date object into a readable string\n  const formattedDate = event.date && event.date.start \n    ? (() => {\n        const dateObj = new Date(event.date.start);\n        const day = dateObj.getDate().toString().padStart(2, '0');\n        const month = dateObj.toLocaleString('en-US', { month: 'short' });\n        const year = dateObj.getFullYear();\n        return `${day}/${month}/${year}`;\n      })()\n    : 'Date not available'; // Fallback if date or start is missing\n    \n  // Format timestamp to relative time (HH:MM or Date)\n  const formatTime = (ts) => {\n    if (!ts) return '';\n    const date = new Date(ts);\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  // Truncate message to prevent layout issues\n  const truncateMessage = (message, maxLength = 50) => {\n    if (!message) return 'No messages yet';\n    const messageText = typeof message === 'string' ? message : message?.text || 'No messages yet';\n    return messageText.length > maxLength ? `${messageText.substring(0, maxLength)}...` : messageText;\n  };\n  \n  // Process last message for display\n  const displayMessage = useMemo(() => {\n    return truncateMessage(lastMessage);\n  }, [lastMessage]);\n    \n  // Check if event is in the past\n  const isPastEvent = event.date && event.date.start \n    ? isPast(new Date(event.date.start))\n    : false;\n\n  // Get location type for display - will be used in location display\n\n  // Create a formatted location with access type\n  const locationWithAccess = () => {\n    const accessType = event.access === 'private' ? \n      <span className=\"inline-block bg-rose-100 text-rose-700 text-xs font-semibold px-2 py-0.5 rounded-full mr-1\">Private</span> : \n      event.access === 'public' ? \n      <span className=\"inline-block bg-emerald-100 text-emerald-700 text-xs font-semibold px-2 py-0.5 rounded-full mr-1\">Public</span> : \n      null;\n    \n    return (\n      <>\n        {accessType}\n      </>\n    );\n  };\n\n  const handleClick = () => {\n    navigate(`/myevents/${event._id}/chat`);\n  };\n  const [copied, setCopied] = useState(false);\n  const [showFeedbackModal, setShowFeedbackModal] = useState(false);\n  const [hostRating, setHostRating] = useState(0);\n  const [eventRating, setEventRating] = useState(0);\n  const [feedbackComment, setFeedbackComment] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n  // Generate the shareable event URL\n  const eventUrl = `${window.location.origin}/events/${event._id}`;\n  \n  // Handle copy to clipboard\n  const handleCopyLink = (e) => {\n    e.stopPropagation(); // Prevent card click\n    navigator.clipboard.writeText(eventUrl)\n      .then(() => {\n        setCopied(true);\n        // Reset copied state after 2 seconds\n        setTimeout(() => setCopied(false), 2000);\n      })\n      .catch(err => {\n        console.error('Failed to copy: ', err);\n      });\n  };\n  \n  // Handle opening the feedback modal\n  const handleOpenFeedback = (e) => {\n    e.stopPropagation(); // Prevent card click\n    setShowFeedbackModal(true);\n  };\n  \n  // Handle closing the feedback modal\n  const handleCloseFeedback = () => {\n    setShowFeedbackModal(false);\n  };\n  \n  // Handle submitting feedback\n  const handleSubmitFeedback = async (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    \n    try {\n      // Prepare feedback data\n      const feedbackData = {\n        hostRating,\n        eventRating,\n        comment: feedbackComment\n      };\n      \n      // Call the API to submit feedback\n      await eventService.submitFeedback(event._id, feedbackData);\n      \n      // Close modal and reset form\n      setShowFeedbackModal(false);\n      setHostRating(0);\n      setEventRating(0);\n      setFeedbackComment('');\n      \n      // Show success message\n      alert('Thank you for your feedback!');\n    } catch (error) {\n      console.error('Error submitting feedback:', error);\n      alert('Failed to submit feedback. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  // Star rating component\n  const StarRating = ({ rating, setRating, disabled }) => {\n    return (\n      <div className=\"flex\">\n        {[1, 2, 3, 4, 5].map(star => (\n          <button \n            key={star} \n            type=\"button\"\n            disabled={disabled}\n            onClick={() => setRating(star)}\n            className=\"text-xl focus:outline-none\"\n          >\n            {star <= rating ? (\n              <FaStar className=\"text-yellow-400\" />\n            ) : (\n              <FaRegStar className=\"text-gray-300 hover:text-yellow-200\" />\n            )}\n          </button>\n        ))}\n      </div>\n    );\n  };\n  \n  return (\n    <div className=\"w-full flex flex-col px-0 py-2\">\n      <div \n        className={`flex items-center gap-2 ${isPending ? '' : 'cursor-pointer'}`}\n        onClick={handleClick}\n        role={isPending ? undefined : \"button\"}\n        tabIndex={isPending ? undefined : 0}\n        onKeyPress={isPending ? undefined : e => { if (e.key === 'Enter') handleClick(); }}\n      >\n        <div className=\"relative\">\n          <img\n            src={event.event_image}\n            alt={event.title}\n            className=\"w-14 h-14 rounded object-cover border border-gray-200 bg-gray-50\"\n            loading=\"lazy\"\n          />\n          {showUnreadBadge && (\n            <span className=\"absolute -top-1 -right-1 bg-red-600 text-white text-xs font-bold rounded-full px-2 py-0.5 shadow-lg z-10\">\n              {unreadCount}\n            </span>\n          )}\n        </div>\n        <div className=\"flex-1\">\n          <div className=\"flex justify-between items-start\">\n            <div className=\"flex items-center gap-1\">\n              <div className=\"font-semibold text-base text-primary mb-0.5\">{event.title}</div>\n              {locationWithAccess()}\n            </div>\n            {lastMessageTime && (\n              <span className=\"text-xs text-gray-400\">{formatTime(lastMessageTime)}</span>\n            )}\n          </div>\n          {/* Last message preview - with explicit truncation */}\n          <div className=\"text-xs text-gray-600 truncate pr-2 max-w-[240px]\">\n            {displayMessage}\n          </div>\n          <div className=\"flex justify-between items-center mt-1\">\n            <div className=\"text-xs text-theme-accent\"><span className=\"font-mono\">{event.ticketCode}</span></div>\n            <div className=\"flex items-center gap-2\">\n              <span className=\"inline-block bg-white text-indigo-600 text-xs font-semibold px-0 py-0.5\">\n                {formattedDate}\n              </span>\n              {!isPending && !isPastEvent && (\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation(); // Prevent card click\n                    handleCopyLink(e);\n                  }}\n                  className={`flex items-center justify-center p-1.5 rounded text-sm font-medium transition ${copied ? 'bg-green-100 text-green-700' : 'bg-white hover:bg-gray-50 text-indigo-600'}`}\n                >\n                  {copied ? <FaCheck className=\"text-green-700\" size={14} /> : <FaShare className=\"text-indigo-600\" size={14} />}\n                </button>\n              )}\n            </div>\n          </div>\n          {/* Removed status display */}\n        </div>\n      </div>\n      \n      {/* Show different buttons based on event status */}\n      {isPending ? (\n        <div className=\"mt-2 self-end flex items-center justify-center py-1 px-3 rounded text-sm font-medium bg-yellow-100 text-yellow-700\">\n          {event.status === 'rejected' ? 'Rejected' : 'Pending Approval'}\n        </div>\n      ) : isPastEvent ? (\n        <button\n          onClick={handleOpenFeedback}\n          className=\"mt-2 self-end flex items-center justify-center py-1 px-3 rounded text-sm font-medium transition bg-indigo-100 hover:bg-indigo-200 text-indigo-700\"\n        >\n          <FaComment className=\"mr-1\" size={12} />\n          Give Feedback\n        </button>\n      ) : null}\n      \n      {/* Feedback Modal */}\n      {showFeedbackModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-lg shadow-xl p-6 max-w-md w-full\">\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Event Feedback</h2>\n            <form onSubmit={handleSubmitFeedback}>\n              <div className=\"mb-4\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">How would you rate the host?</label>\n                <StarRating rating={hostRating} setRating={setHostRating} disabled={isSubmitting} />\n              </div>\n              \n              <div className=\"mb-4\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">How would you rate the event overall?</label>\n                <StarRating rating={eventRating} setRating={setEventRating} disabled={isSubmitting} />\n              </div>\n              \n              <div className=\"mb-4\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Comments (optional)</label>\n                <textarea\n                  value={feedbackComment}\n                  onChange={(e) => setFeedbackComment(e.target.value)}\n                  disabled={isSubmitting}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                  rows=\"3\"\n                  placeholder=\"Share your thoughts about the event...\"\n                ></textarea>\n              </div>\n              \n              <div className=\"flex justify-end space-x-3\">\n                <button\n                  type=\"button\"\n                  onClick={handleCloseFeedback}\n                  disabled={isSubmitting}\n                  className=\"px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  disabled={isSubmitting || hostRating === 0 || eventRating === 0}\n                  className={`px-4 py-2 rounded-md shadow-sm text-sm font-medium text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 ${(hostRating === 0 || eventRating === 0) ? 'bg-indigo-300 cursor-not-allowed' : 'bg-indigo-600 hover:bg-indigo-700'}`}\n                >\n                  {isSubmitting ? 'Submitting...' : 'Submit Feedback'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MyEventTicketCard;\n","import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useMyEvents } from '../hooks/queries/useMyEventsQueries';\nimport MyEventTicketCard from './MyEventTicketCard';\nimport { isPast } from 'date-fns';\nimport { FaSearch } from 'react-icons/fa';\nimport { useChatPreviews } from '../hooks/queries/useChatPreviewQuery';\nimport { queryClient } from '../../query/queryClient';\nimport { io } from 'socket.io-client';\n// Personal chat functionality will be implemented in the future\n// import PersonalChatCard from '../components/PersonalChatCard';\n// import { useAuthStore } from '../../stores/authStore'; // Will be used when personal chat functionality is implemented\n// Chat API will be used when personal chat functionality is implemented\n// import chatApi from '../../message/services/chatApi';\n\n// useAuthStore import removed as it's not being used\n\nconst SOCKET_URL = process.env.REACT_APP_CHAT_SERVICE_URL || 'http://localhost:3020';\n\nconst MyEventsPage = () => {\n  const { data: events = [], isLoading, isError } = useMyEvents();\n  const location = useLocation();\n  const [activeTab, setActiveTab] = useState(location.state?.activeTab || 'upcoming');\n  \n  // Reset location state after using it\n  useEffect(() => {\n    if (location.state?.activeTab) {\n      window.history.replaceState({}, document.title);\n    }\n  }, [location.state]);\n  const [searchQuery, setSearchQuery] = useState('');\n  // currentUserId removed as it's not being used\n  // const currentUserId = useAuthStore(state => state.user?._id);\n\n  // Helper function to check if an event is in the past\n  const isEventPast = (event) => {\n    if (!event.date || !event.date.start) return false;\n    return isPast(new Date(event.date.start));\n  };\n\n  // Filter events based on the active tab and search query\n  const filteredEvents = events.filter(event => {\n    // First filter by tab\n    const matchesTab = activeTab === 'archieve' ? \n      isEventPast(event) : \n      activeTab === 'pending' ? \n        (event.status === 'pending' || event.status === 'rejected') :\n        (!isEventPast(event) && (event.status === 'accepted' || !event.status));\n    \n    // Then filter by search query if there is one\n    const matchesSearch = searchQuery.trim() === '' || \n      (event.title && event.title.toLowerCase().includes(searchQuery.toLowerCase()));\n    \n    return matchesTab && matchesSearch;\n  });\n\n  // Get chat previews (unread counts) for all filtered events\n  const eventIds = filteredEvents.map(event => event._id);\n  const { chatPreviews } = useChatPreviews(eventIds);\n\n  // Personal one-on-one chats state - will be implemented in the future\n  // const { user } = useAuthStore(); // Will be used when personal chat functionality is implemented\n  /* Personal chat functionality will be implemented in the future\n  const [personalChats, setPersonalChats] = useState([]);\n  const [isLoadingPersonal, setIsLoadingPersonal] = useState(true);\n\n  useEffect(() => {\n    const fetchPersonal = async () => {\n      if (!user?._id) {\n        setIsLoadingPersonal(false);\n        return;\n      }\n      try {\n        setIsLoadingPersonal(true);\n        const chats = await chatApi.getUserChats(user._id);\n        const formatted = (chats || []).map(chat => {\n          const other = chat.otherUser || chat.participants?.find(p => p.userId !== user._id) || chat.participants?.[0] || {};\n          const lastMsg = chat.lastMessage || {};\n          return {\n            id: chat.chatId || chat._id,\n            name: other.name || 'User',\n            avatar: other.avatar || 'https://via.placeholder.com/48?text=U',\n            lastMessage: lastMsg.text || lastMsg,\n            timestamp: lastMsg.timestamp || lastMsg.createdAt || chat.lastActivity || new Date().toISOString(),\n            unread: chat.unreadCount || 0,\n            online: other.online || false\n          };\n        });\n        setPersonalChats(formatted);\n      } catch (err) {\n        console.error('Error loading personal chats', err);\n        setPersonalChats([]);\n      } finally {\n        setIsLoadingPersonal(false);\n      }\n    };\n    fetchPersonal();\n  }, [user]);\n  */\n\n  // Real-time updates for unread counts and attendee status changes\n  useEffect(() => {\n    // Log the environment and URL being used\n    console.log('Environment:', process.env.NODE_ENV);\n    console.log('Setting up socket connection to:', SOCKET_URL);\n    \n    // Enhanced socket connection with better options for production\n    const socket = io(SOCKET_URL, {\n      reconnectionAttempts: 10,\n      reconnectionDelay: 1000,\n      timeout: 30000,\n      transports: ['websocket', 'polling'], // Try WebSocket first, then fallback to polling\n      withCredentials: true, // Enable CORS credentials\n      forceNew: true // Force a new connection\n    });\n    \n    // Connection event handlers with improved logging\n    socket.on('connect', () => {\n      console.log('Socket connected successfully with ID:', socket.id);\n      // Force refetch chat previews on successful connection\n      queryClient.refetchQueries({ queryKey: ['chatPreviews'], exact: false });\n    });\n    \n    socket.on('connect_error', (error) => {\n      console.error('Socket connection error:', error);\n      console.error('Socket connection error details:', {\n        message: error.message,\n        description: error.description,\n        type: error.type\n      });\n      \n      // Fallback: Periodically refetch chat previews even if socket fails\n      const intervalId = setInterval(() => {\n        console.log('Fallback: Refetching chat previews due to socket connection issues');\n        queryClient.refetchQueries({ queryKey: ['chatPreviews'], exact: false });\n      }, 30000); // Every 30 seconds\n      \n      return () => clearInterval(intervalId);\n    });\n    \n    socket.on('disconnect', (reason) => {\n      console.log('Socket disconnected:', reason);\n    });\n    \n    // Listen for unread count changes\n    socket.on('unreadCountsChanged', (data) => {\n      console.log('Received unreadCountsChanged event:', data);\n      queryClient.refetchQueries({ queryKey: ['chatPreviews'], exact: false });\n    });\n    \n    // Listen for attendee status updates\n    socket.on('attendeeStatusUpdated', (data) => {\n      console.log('Received attendeeStatusUpdated event:', data);\n      \n      // Force immediate refetch of all relevant queries\n      Promise.all([\n        queryClient.refetchQueries({ queryKey: ['myEvents'], force: true }),\n        queryClient.refetchQueries({ queryKey: ['eventsAttending'], force: true }),\n        queryClient.refetchQueries({ queryKey: ['hostedEvents'], force: true })\n      ]).then(() => {\n        console.log('Successfully refetched all event data after status update');\n      }).catch(error => {\n        console.error('Error refetching event data:', error);\n      });\n    });\n    \n    // Send a test event after 5 seconds to verify socket is working\n    const testTimer = setTimeout(() => {\n      console.log('Sending test attendee update event');\n      socket.emit('testAttendeeUpdate', { test: true, timestamp: new Date().toISOString() });\n    }, 5000);\n    \n    return () => {\n      clearTimeout(testTimer);\n      socket.disconnect();\n      console.log('Socket disconnected on component unmount');\n    };\n  }, []); // queryClient is stable and doesn't need to be in deps\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      {/* Header section with title and search */}\n      <div className=\"flex items-center justify-between mb-6\">\n        <h1 className=\"text-2xl font-bold text-primary\">Chats</h1>\n        \n        <div className=\"relative w-full max-w-xs ml-3\">\n          <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n            <FaSearch className=\"h-4 w-4 text-gray-400\" />\n          </div>\n          <input\n            type=\"text\"\n            className=\"block w-full pl-10 pr-3 py-2 border border-gray-200 rounded-full text-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent\"\n            placeholder=\"Search chats...\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n          />\n        </div>\n      </div>\n      \n      {/* Tag-style category navigation */}\n      <div className=\"flex flex-col gap-2 mb-6\">\n        <div className=\"flex gap-2\">\n          <button\n            onClick={() => setActiveTab('upcoming')}\n            className={`px-3 py-1.5 rounded-full font-medium text-sm transition \n              ${activeTab === 'upcoming'\n                ? 'bg-indigo-600 text-white shadow'\n                : 'bg-gray-100 text-gray-700 hover:bg-indigo-50'\n              }`}\n          >\n            My Tables\n          </button>\n          {/* Personal tab hidden - will be implemented in the future\n          <button\n            onClick={() => setActiveTab('personal')}\n            className={`px-3 py-1.5 rounded-full font-medium text-sm transition \n              ${activeTab === 'personal'\n                ? 'bg-indigo-600 text-white shadow'\n                : 'bg-gray-100 text-gray-700 hover:bg-indigo-50'\n              }`}\n          >\n            Personal\n          </button>\n          */}\n          <button\n            onClick={() => setActiveTab('pending')}\n            className={`px-3 py-1.5 rounded-full font-medium text-sm transition \n              ${activeTab === 'pending'\n                ? 'bg-indigo-600 text-white shadow'\n                : 'bg-gray-100 text-gray-700 hover:bg-indigo-50'\n              }`}\n          >\n            Pending\n          </button>\n        </div>\n        <div className=\"flex items-center justify-end\">\n          <button\n            onClick={() => setActiveTab('archieve')}\n            className={`flex items-center gap-1 px-3 py-1 rounded-full font-medium text-sm transition \n              ${activeTab === 'archieve'\n                ? 'bg-indigo-600 text-white shadow'\n                : 'bg-gray-100 text-gray-700 hover:bg-indigo-50'\n              }`}\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 7v10a2 2 0 01-2 2H6a2 2 0 01-2-2V7m16 0V5a2 2 0 00-2-2H6a2 2 0 00-2 2v2m16 0H4\" />\n            </svg>\n            Archieve\n          </button>\n        </div>\n      </div>\n\n      {/* Personal tab content hidden - will be implemented in the future */}\n      {isLoading ? (\n        <div className=\"text-gray-500\">Loading events...</div>\n      ) : isError ? (\n        <div className=\"text-red-500\">Failed to load events.</div>\n      ) : !filteredEvents.length ? (\n        <div className=\"text-gray-500\">\n          {searchQuery.trim() !== '' \n            ? `No chats matching \"${searchQuery}\".` \n            : `No ${activeTab === 'archieve' ? 'archieve' : activeTab} events found.`}\n        </div>\n      ) : (\n        <div className=\"flex flex-col space-y-3\">\n          {/* Use event._id as the key, assuming it's the unique ID */}\n          {filteredEvents.map(event => {\n            const preview = chatPreviews?.[event._id] || {};\n            const showUnreadBadge = preview.unreadCount > 0;\n            return (\n              <div key={event._id} className=\"bg-white rounded-lg shadow-sm\">\n                <MyEventTicketCard \n                  event={event} \n                  isPending={activeTab === 'pending'}\n                  unreadCount={preview.unreadCount || 0}\n                  showUnreadBadge={showUnreadBadge}\n                  lastMessage={preview.lastMessage}\n                  lastMessageTime={preview.lastMessageTime}\n                />\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MyEventsPage;\n","import React, { useState } from 'react';\n\nconst MAX_CHARS = 100;\nconst COLLAPSED_CHARS = 45;\n\nconst clampChars = (text, max) => text.slice(0, max);\n\nconst EventBio = ({ bio = '' }) => {\n  const [expanded, setExpanded] = useState(false);\n  const trimmedBio = bio.trim().slice(0, MAX_CHARS);\n  const isLong = trimmedBio.length > COLLAPSED_CHARS;\n  const displayBio = expanded || !isLong\n    ? trimmedBio\n    : clampChars(trimmedBio, COLLAPSED_CHARS);\n\n  return (\n    <div className=\"px-4 pb-2 text-sm text-gray-700 text-left\">\n      <span className=\"font-medium text-theme-accent\">\n        {displayBio}\n        {isLong && !expanded && (\n          <>\n            ...{' '}\n            <button\n              className=\"text-theme-accent underline focus:outline-none\"\n              onClick={() => setExpanded(true)}\n              type=\"button\"\n            >\n              more\n            </button>\n          </>\n        )}\n      </span>\n    </div>\n  );\n};\n\n\nexport default EventBio;\n","import React from 'react';\n\nconst EventTabs = ({ activeTab, setActiveTab, tabs = [] }) => (\n  <div className=\"flex border-b border-gray-200 bg-white sticky top-0 z-10\">\n    {tabs.map(tab => (\n      <button\n        key={tab.key}\n        className={`flex-1 py-2 text-sm font-medium focus:outline-none transition-colors ${activeTab === tab.key ? 'text-theme-accent border-b-2 border-theme-accent bg-gray-50' : 'text-gray-500'}`}\n        onClick={() => setActiveTab(tab.key)}\n      >\n        {tab.label}\n      </button>\n    ))}\n  </div>\n);\n\nexport default EventTabs;\n","import React from 'react';\nconst AnnouncementTab = ({ announcements = [] }) => (\n  <div className=\"p-4\">\n    {announcements.length === 0 ? (\n      <div className=\"text-center text-gray-400\">No announcements yet.</div>\n    ) : (\n      <ul className=\"space-y-2\">\n        {announcements.map((a, idx) => (\n          <li key={a.id || idx} className=\"p-3 bg-yellow-50 rounded component-card border-l-4 border-theme-accent\">\n            <div className=\"font-semibold text-theme-accent mb-1\">{a.title || 'Announcement'}</div>\n            <div className=\"text-gray-700 text-sm\">{a.text || a.content}</div>\n            {a.date && <div className=\"text-xs text-gray-400 mt-1\">{a.date}</div>}\n          </li>\n        ))}\n      </ul>\n    )}\n  </div>\n);\nexport default AnnouncementTab;\n","// eventsService.js\n// Service for fetching events data from backend API\nimport axios from 'axios';\nimport { useAuthStore } from '../../stores/authStore';\n\nexport async function getEvents() {\n  try {\n    // Get the current user ID from auth store\n    const userId = useAuthStore.getState().user?._id;\n    \n    if (!userId) {\n      console.error('User ID not available for fetching events');\n      return [];\n    }\n    \n    // Call backend API\n    console.log('Fetching events for user:', userId);\n    const response = await axios.get(`/api/events/myevents/${userId}`);\n    \n    // Log the response for debugging\n    console.log('Backend events response:', response.data);\n    \n    // Return the data from API\n    return response.data.data || [];\n  } catch (error) {\n    console.error('Error fetching events:', error);\n    return [];\n  }\n}\n\nexport async function getEventById(id) {\n  try {\n    const response = await axios.get(`/api/events/${id}`);\n    return response.data.data;\n  } catch (error) {\n    console.error(`Error fetching event ${id}:`, error);\n    return null;\n  }\n}\n","// useEventBioQuery.js\n// React Query hook for fetching event bio/description\nimport { useQuery } from '@tanstack/react-query';\nimport { getEventBio } from '../../services/eventBioService';\n\nexport function useEventBioQuery(eventId) {\n  return useQuery({\n    queryKey: ['eventBio', eventId],\n    queryFn: () => getEventBio(eventId),\n    enabled: !!eventId,\n  });\n}\n","// eventBioService.js\n// Service for fetching event bio/description from backend API\nimport axios from 'axios';\n\nexport async function getEventBio(eventId) {\n  try {\n    if (!eventId) {\n      console.error('Event ID not provided for fetching bio');\n      return '';\n    }\n    \n    console.log('Fetching bio for event:', eventId);\n    const response = await axios.get(`/api/events/${eventId}`);\n    \n    // Log the response for debugging\n    console.log('Event bio response:', response.data);\n    \n    // Return the bio or description from the event data\n    const event = response.data.data;\n    return event ? (event.bio || event.description || '') : '';\n  } catch (error) {\n    console.error(`Error fetching bio for event ${eventId}:`, error);\n    return '';\n  }\n}\n","// eventTabsService.js\n// Service for fetching event tabs (could be static or from event data)\nexport function getEventTabs() {\n  // Example: static tabs for all events\n  return Promise.resolve([\n    { key: 'moments', label: 'Moments' },\n    { key: 'members', label: 'Members' },\n    { key: 'about', label: 'About' },\n    { key: 'chat', label: 'Chat' },\n  ]);\n}\n","// useEventAnnouncementsQuery.js\n// React Query hook for fetching event announcements\nimport { useQuery } from '@tanstack/react-query';\nimport { getEventAnnouncements } from '../../services/announcementsService';\n\nexport function useEventAnnouncementsQuery(eventId) {\n  return useQuery({\n    queryKey: ['eventAnnouncements', eventId],\n    queryFn: () => getEventAnnouncements(eventId),\n    enabled: !!eventId,\n  });\n}\n","// announcementsService.js\n// Service for fetching event announcements from backend API\nimport axios from 'axios';\n\nexport async function getEventAnnouncements(eventId) {\n  try {\n    if (!eventId) {\n      console.error('Event ID not provided for fetching announcements');\n      return [];\n    }\n    \n    console.log('Fetching announcements for event:', eventId);\n    const response = await axios.get(`/api/events/${eventId}/announcements`);\n    \n    // Log the response for debugging\n    console.log('Announcements response:', response.data);\n    \n    // Return the data from API\n    return response.data.data || [];\n  } catch (error) {\n    console.error(`Error fetching announcements for event ${eventId}:`, error);\n    return [];\n  }\n}\n","// eventsStore.js\n// Zustand store for local UI state related to events (e.g., selected tab)\nimport { create } from 'zustand';\n\nconst useEventsStore = create(set => ({\n  activeTab: 'moments',\n  setActiveTab: tab => set({ activeTab: tab }),\n}));\n\nexport default useEventsStore;\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_CHAT_SERVICE_URL || 'http://localhost:3020';\r\n\r\nconst EventTagManager = ({ eventId, isAdmin }) => {\r\n  const [tags, setTags] = useState([]);\r\n  const [newTag, setNewTag] = useState('');\r\n  const [editingTagId, setEditingTagId] = useState(null);\r\n  const [editingTagName, setEditingTagName] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Fetch tags for the event\r\n  const fetchTags = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.get(`${API_URL}/api/tags?eventId=${eventId}`);\r\n      setTags(res.data);\r\n    } catch (err) {\r\n      setError('Failed to fetch tags');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (eventId) fetchTags();\r\n    // eslint-disable-next-line\r\n  }, [eventId]);\r\n\r\n  // Add a new tag\r\n  const handleAddTag = async () => {\r\n    if (!newTag.trim()) return;\r\n    setError('');\r\n    try {\r\n      await axios.post(`${API_URL}/api/tags`, { name: newTag.trim(), eventId });\r\n      setNewTag('');\r\n      fetchTags();\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Failed to add tag');\r\n    }\r\n  };\r\n\r\n  // Edit a tag\r\n  const handleEditTag = async (tagId) => {\r\n    if (!editingTagName.trim()) return;\r\n    setError('');\r\n    try {\r\n      await axios.put(`${API_URL}/api/tags/${tagId}`, { name: editingTagName.trim() });\r\n      setEditingTagId(null);\r\n      setEditingTagName('');\r\n      fetchTags();\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Failed to edit tag');\r\n    }\r\n  };\r\n\r\n  // Delete a tag\r\n  const handleDeleteTag = async (tagId) => {\r\n    setError('');\r\n    try {\r\n      await axios.delete(`${API_URL}/api/tags/${tagId}`);\r\n      fetchTags();\r\n    } catch (err) {\r\n      setError('Failed to delete tag');\r\n    }\r\n  };\r\n\r\n  if (!isAdmin) return null;\r\n\r\n  return (\r\n    <div className=\"p-4 border rounded bg-gray-50 mt-4\">\r\n      <h3 className=\"font-semibold mb-2\">Manage Tags</h3>\r\n      {error && <div className=\"text-red-500 text-sm mb-2\">{error}</div>}\r\n      <div className=\"flex gap-2 mb-4\">\r\n        <input\r\n          type=\"text\"\r\n          value={newTag}\r\n          onChange={e => setNewTag(e.target.value)}\r\n          maxLength={20}\r\n          placeholder=\"Add new tag...\"\r\n          className=\"border px-2 py-1 rounded text-sm\"\r\n        />\r\n        <button\r\n          onClick={handleAddTag}\r\n          className=\"bg-indigo-600 text-white px-3 py-1 rounded text-sm hover:bg-indigo-700\"\r\n        >\r\n          Add\r\n        </button>\r\n      </div>\r\n      {loading ? (\r\n        <div className=\"text-gray-500 text-sm\">Loading tags...</div>\r\n      ) : (\r\n        <ul className=\"space-y-2\">\r\n          {tags.map(tag => (\r\n            <li key={tag._id} className=\"flex items-center gap-2\">\r\n              {editingTagId === tag._id ? (\r\n                <>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={editingTagName}\r\n                    onChange={e => setEditingTagName(e.target.value)}\r\n                    maxLength={20}\r\n                    className=\"border px-2 py-1 rounded text-sm\"\r\n                  />\r\n                  <button\r\n                    onClick={() => handleEditTag(tag._id)}\r\n                    className=\"bg-green-500 text-white px-2 py-1 rounded text-xs hover:bg-green-600\"\r\n                  >\r\n                    Save\r\n                  </button>\r\n                  <button\r\n                    onClick={() => { setEditingTagId(null); setEditingTagName(''); }}\r\n                    className=\"bg-gray-300 text-gray-700 px-2 py-1 rounded text-xs\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <span className=\"inline-block bg-indigo-100 text-indigo-700 px-2 py-0.5 rounded-full text-xs font-medium\">\r\n                    #{tag.name}\r\n                  </span>\r\n                  <button\r\n                    onClick={() => { setEditingTagId(tag._id); setEditingTagName(tag.name); }}\r\n                    className=\"text-xs text-blue-600 hover:underline\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleDeleteTag(tag._id)}\r\n                    className=\"text-xs text-red-600 hover:underline\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventTagManager; ","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport EventBio from '../components/event/EventBio';\nimport EventTabs from '../components/event/EventTabs';\nimport MembersTab from '../components/chat/MembersTab';\nimport { useNavigate } from 'react-router-dom';\n\nimport AboutTab from '../components/chat/AboutTab';\nimport AnnouncementTab from '../components/chat/AnnouncementTab';\nimport { useEventsQuery } from '../hooks/queries/useEventsQuery';\nimport { useEventBioQuery } from '../hooks/queries/useEventBioQuery';\nimport { useEventTabsQuery } from '../hooks/queries/useEventTabsQuery';\nimport { useEventMembersQuery } from '../hooks/queries/useEventMembersQuery';\nimport { useEventAnnouncementsQuery } from '../hooks/queries/useEventAnnouncementsQuery';\nimport useEventsStore from '../hooks/stores/eventsStore';\nimport EventTagManager from '../components/event/EventTagManager';\nimport { useAuthStore } from '../../stores/authStore';\n\nconst EventPage = () => {\n  const { eventId } = useParams();\n  const navigate = useNavigate();\n  // Query for all events and find the current event\n  const { data: events = [], isLoading: isEventsLoading, isError: isEventsError } = useEventsQuery();\n  console.log('[EventPage] eventId:', eventId);\n  console.log('[EventPage] events:', events);\n  console.log('[EventPage] events:', events.map(e => ({id: e.id, _id: e._id, eventName: e.eventName, title: e.title})));\n  // Find event by either _id or id\n  const event = events.find(e => {\n    const eventIdField = e._id || e.id;\n    console.log('[EventPage] Comparing:', eventIdField, 'with:', eventId);\n    return String(eventIdField) === String(eventId);\n  });\n  console.log('[EventPage] Resolved event:', event);\n  // Zustand store for tab state\n  const activeTab = useEventsStore(state => state.activeTab);\n  const setActiveTab = useEventsStore(state => state.setActiveTab);\n  // Query for bio, tabs, members, and announcements\n  const { data: bio = '', isLoading: isBioLoading } = useEventBioQuery(eventId);\n  const { data: tabs = [], isLoading: isTabsLoading } = useEventTabsQuery();\n  const { data: members = [], isLoading: isMembersLoading } = useEventMembersQuery(eventId);\n  const { data: announcements = [], isLoading: isAnnouncementsLoading } = useEventAnnouncementsQuery(eventId);\n  // Get current user ID\n  const currentUserId = useAuthStore(state => state.user?._id);\n  // Find current user's member object\n  const currentMember = members.find(m => (m.userId || m.id) === currentUserId);\n  const isAdmin = currentMember?.role === 'admin';\n  // Debug logs\n  console.log('[TagManager Debug] members:', members);\n  console.log('[TagManager Debug] currentUserId:', currentUserId);\n  console.log('[TagManager Debug] currentMember:', currentMember);\n  console.log('[TagManager Debug] isAdmin:', isAdmin);\n\n  if (isEventsLoading) return <div className=\"p-4 text-center text-gray-500\">Loading event...</div>;\n  if (isEventsError || !event) return <div className=\"p-4 text-center text-red-500\">Event not found.</div>;\n\n  // Custom handler for tabs: navigate to chat page if chat tab is clicked\n  const handleTabChange = (tab) => {\n    setActiveTab(tab);\n  };\n\n\n  return (\n    <div className=\"bg-white min-h-screen flex flex-col\">\n      {/* WhatsApp-style header */}\n      <div className=\"flex items-center gap-3 p-3 border-b border-gray-100 sticky top-0 bg-white z-20 shadow-sm\">\n        <button\n          className=\"p-1 rounded-full hover:bg-gray-100 focus:outline-none\"\n          onClick={() => navigate(-1)}\n          aria-label=\"Back\"\n          type=\"button\"\n        >\n          <svg width=\"28\" height=\"28\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 19l-7-7 7-7\" /></svg>\n        </button>\n        <img\n          src={event.thumbnail || event.imageUrl || event.event_image || \"/default-group.png\"}\n          alt={event.title || event.eventName || \"Event\"}\n          className=\"w-10 h-10 rounded-full object-cover border border-gray-200 bg-gray-50\"\n        />\n        <span className=\"font-semibold text-base text-primary truncate\">{event.title || event.eventName}</span>\n      </div>\n      {isBioLoading ? (\n        <div className=\"p-4 text-gray-500\">Loading bio...</div>\n      ) : (\n        <EventBio bio={bio} />\n      )}\n      {isTabsLoading ? (\n        <div className=\"p-4 text-gray-500\">Loading tabs...</div>\n      ) : (\n        <EventTabs\n          activeTab={activeTab}\n          setActiveTab={handleTabChange}\n          tabs={tabs.filter(tab => tab.key !== 'chat')}\n        />\n      )}\n      <div className=\"flex-1\">\n        {/* Tag Manager for Admins */}\n        {isAdmin && (\n          <EventTagManager eventId={eventId} isAdmin={isAdmin} />\n        )}\n        {activeTab === 'members' && (\n          isMembersLoading ? (\n            <div className=\"p-4 text-gray-500\">Loading members...</div>\n          ) : (\n            <MembersTab members={members} event={event} />\n          )\n        )}\n        {activeTab === 'announcements' && (\n          isAnnouncementsLoading ? (\n            <div className=\"p-4 text-gray-500\">Loading announcements...</div>\n          ) : (\n            <AnnouncementTab announcements={announcements} />\n          )\n        )}\n        {activeTab === 'about' && <AboutTab event={event} />}\n      </div>\n    </div>\n  );\n};\n\nexport default EventPage;\n","// useEventsQuery.js\n// React Query hook for fetching events\nimport { useQuery } from '@tanstack/react-query';\nimport { getEvents } from '../../services/eventsService';\n\nexport function useEventsQuery() {\n  return useQuery({\n    queryKey: ['events'],\n    queryFn: getEvents\n  });\n}\n","// useEventTabsQuery.js\n// React Query hook for fetching event tabs\nimport { useQuery } from '@tanstack/react-query';\nimport { getEventTabs } from '../../services/eventTabsService';\n\nexport function useEventTabsQuery() {\n  return useQuery({\n    queryKey: ['eventTabs'],\n    queryFn: getEventTabs\n  });\n}\n","/**\n * Utility for generating consistent colors for user names in chat\n */\n\n// Array of vibrant but readable colors for user names\nconst NAME_COLORS = [\n  'text-indigo-600',    // Indigo\n  'text-blue-600',      // Blue\n  'text-emerald-600',   // Emerald\n  'text-amber-600',     // Amber\n  'text-rose-600',      // Rose\n  'text-violet-600',    // Violet\n  'text-cyan-600',      // Cyan\n  'text-fuchsia-600',   // Fuchsia\n  'text-teal-600',      // Teal\n  'text-orange-600',    // Orange\n];\n\n/**\n * Gets a consistent color for a user based on their ID or name\n * @param {string} identifier - User ID or name to generate color for\n * @returns {string} Tailwind CSS color class\n */\nexport const getColorForName = (identifier) => {\n  if (!identifier) return NAME_COLORS[0];\n  \n  // Generate a simple hash from the identifier\n  let hash = 0;\n  for (let i = 0; i < identifier.length; i++) {\n    hash = ((hash << 5) - hash) + identifier.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  \n  // Get a consistent index from the hash\n  const index = Math.abs(hash) % NAME_COLORS.length;\n  return NAME_COLORS[index];\n};\n\nexport default getColorForName;\n","import React, { useState, useRef, forwardRef, useMemo } from 'react';\nimport './ChatMessageBubble.css'; // Import the CSS file for animations\nimport { getColorForName } from './name-colors';\n\nconst LONG_PRESS_DURATION = 600; // ms\nconst MAX_PREVIEW_CHARS = 300;\n\nconst ChatMessageBubble = forwardRef(({ message, isOwn, userPhoto, onDelete, onReplyTo, onResend }, ref) => {\n  // Get initials from name for avatar fallback\n  const getInitials = (fullName) => {\n    if (!fullName) return '?';\n    \n    const names = fullName.split(' ');\n    if (names.length >= 2) {\n      return `${names[0].charAt(0)}${names[names.length - 1].charAt(0)}`.toUpperCase();\n    }\n    return fullName.charAt(0).toUpperCase();\n  };\n  \n  // Get consistent color for sender\n  const senderIdentifier = useMemo(() => {\n    if (isOwn) return 'me';\n    return message.senderId || \n           (typeof message.sender === 'object' ? (message.sender._id || message.sender.id) : message.sender) || \n           message.senderName || \n           'unknown';\n  }, [isOwn, message]);\n  \n  const senderColorClass = useMemo(() => getColorForName(senderIdentifier), [senderIdentifier]);\n  const [pressTimer, setPressTimer] = useState(null);\n  const touchRef = useRef();\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [expanded, setExpanded] = useState(false);\n\n  // Long press for mobile\n  const handleTouchStart = () => {\n    if (!isOwn || message.isDeleted || message.deleted) return;\n    setPressTimer(setTimeout(() => {\n      setShowDeleteConfirm(true);\n    }, LONG_PRESS_DURATION));\n  };\n  const handleTouchEnd = () => {\n    clearTimeout(pressTimer);\n    setPressTimer(null);\n  };\n\n  // Right click for desktop\n  const handleContextMenu = (e) => {\n    if (!isOwn || message.isDeleted || message.deleted) return;\n    e.preventDefault();\n    setShowDeleteConfirm(true); // Show confirmation dialog\n  };\n\n  // Handle reply to this message\n  const handleReplyClick = (e) => {\n    e.stopPropagation();\n    if (message.isDeleted || message.deleted) return;\n    onReplyTo && onReplyTo(message);\n  };\n\n  // Helper to highlight #tags, @mentions, and URLs in message text\n  function highlightTags(text) {\n    if (!text) return null;\n    // Regex to match #tag, @mention, or URL\n    const tagOrMentionOrUrlRegex = /(@[a-zA-Z0-9_\\- ]+)|(#\\w+)|(https?:\\/\\/[\\w\\-._~:/?#[\\]@!$&'()*+,;=%]+)|(www\\.[\\w\\-._~:/?#[\\]@!$&'()*+,;=%]+)/g;\n    const parts = [];\n    let lastIndex = 0;\n    let match;\n    let key = 0;\n    while ((match = tagOrMentionOrUrlRegex.exec(text)) !== null) {\n      if (match.index > lastIndex) {\n        parts.push(text.slice(lastIndex, match.index));\n      }\n      if (match[1]) {\n        // @mention\n        parts.push(\n          <span\n            key={key++}\n            className=\"inline-block bg-yellow-100 text-yellow-800 px-1.5 py-0.5 rounded-full text-xs font-semibold mx-0.5\"\n          >\n            {match[1]}\n          </span>\n        );\n      } else if (match[2]) {\n        // #tag\n        parts.push(\n          <span\n            key={key++}\n            className=\"inline-block bg-indigo-100 text-indigo-700 px-1.5 py-0.5 rounded-full text-xs font-semibold mx-0.5\"\n          >\n            {match[2]}\n          </span>\n        );\n      } else if (match[3] || match[4]) {\n        // URL (http(s) or www)\n        let url = match[3] || match[4];\n        if (url && !/^https?:\\/\\//.test(url)) {\n          url = 'http://' + url;\n        }\n        parts.push(\n          <a\n            key={key++}\n            href={url}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"text-blue-600 underline break-all hover:text-blue-800\"\n          >\n            {match[3] || match[4]}\n          </a>\n        );\n      }\n      lastIndex = match.index + match[0].length;\n    }\n    if (lastIndex < text.length) {\n      parts.push(text.slice(lastIndex));\n    }\n    return parts;\n  }\n\n  // Improved UX: right for self, left for others, avatars accordingly\n  return (\n    <>\n      <div\n        className={`flex items-end mb-2 w-full ${isOwn ? 'justify-end' : 'justify-start'}`}\n      >\n        {/* Avatar for other users (left) */}\n        {!isOwn && (\n          userPhoto ? (\n            <img\n              src={userPhoto}\n              alt=\"Member\"\n              className=\"w-8 h-8 rounded-full object-cover border border-gray-200 bg-gray-50 mr-2\"\n              style={{ order: 0 }}\n            />\n          ) : (\n            <div \n              className=\"w-8 h-8 rounded-full flex items-center justify-center bg-indigo-100 text-indigo-800 text-xs font-bold border border-gray-200 mr-2\"\n              style={{ order: 0 }}\n            >\n              {getInitials(message.senderName || \n                (typeof message.sender === 'object' && (message.sender.name || message.sender.username || message.sender.email || '')) || \n                message.sender || \n                'Unknown')}\n            </div>\n          )\n        )}\n        {/* Message bubble */}\n        <div\n          className={`flex flex-col gap-1 max-w-[85%] relative`}\n          style={{ order: 1 }}\n        >\n          {/* Reply indicator */}\n          {message.replyTo && (\n            <div \n              className={`flex items-center gap-2 rounded-lg px-2 py-1 text-xs w-auto cursor-pointer hover:bg-opacity-80 shadow-sm border-l-4 ${\n                isOwn ? 'bg-indigo-50 border-indigo-400 ml-auto' : 'bg-gray-100 border-gray-300 mr-auto'\n              }`}\n              style={{ minHeight: 36, maxWidth: '95%' }}\n              onClick={(e) => {\n                e.stopPropagation();\n                // Get the original message ID and pass to parent for scrolling\n                const originalMessageId = message.replyTo.messageId;\n                if (originalMessageId && typeof onReplyTo === 'function') {\n                  // Call special handler to scroll to message\n                  onReplyTo(null, originalMessageId);\n                }\n              }}\n            >\n              <div className=\"flex flex-col w-full overflow-hidden\">\n                <span className=\"font-semibold text-indigo-700 truncate max-w-[120px]\">\n                  {message.replyTo.senderName || \n                    (typeof message.replyTo.sender === 'object' && \n                      (message.replyTo.sender.name || message.replyTo.sender.username)) || \n                    'Unknown'}\n                </span>\n                <span className=\"text-[11px] text-gray-600 whitespace-pre-line break-words\">\n                  {message.replyTo.text || message.replyTo.content || '[deleted]'}\n                </span>\n              </div>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"ml-1 text-gray-400 flex-shrink-0\">\n                <polyline points=\"9 17 4 12 9 7\"></polyline>\n                <path d=\"M20 18v-2a4 4 0 0 0-4-4H4\"></path>\n              </svg>\n            </div>\n          )}\n          \n          {/* Message bubble with glass effect */}\n          <div\n            className=\"rounded-lg px-3 py-2 shadow-sm max-w-[85vw] break-words whitespace-pre-line relative text-[13px] leading-snug bg-gray-100 text-gray-900\"\n            aria-label={isOwn ? 'Your message' : 'Member message'}\n            onContextMenu={handleContextMenu}\n            onTouchStart={handleTouchStart}\n            onTouchEnd={handleTouchEnd}\n            ref={(el) => {\n              // Merge refs\n              touchRef.current = el;\n              if (typeof ref === 'function') ref(el);\n              else if (ref) ref.current = el;\n            }}\n            onClick={handleReplyClick}\n          >\n            {/* Sender name above bubble */}\n            <div className={`text-[11px] mb-1 font-medium ${isOwn ? 'text-right text-gray-600' : `text-left ${senderColorClass}`}`}>\n              {isOwn ? 'You' : (\n                message.senderName ||\n                (typeof message.sender === 'object' && (message.sender.name || message.sender.username || message.sender.email || message.sender._id || message.sender.id)) ||\n                message.sender ||\n                'Unknown'\n              )}\n            </div>\n            <div>\n              {(message.isDeleted || message.deleted)\n                ? <span className=\"italic text-gray-400\">This message was deleted</span>\n                : (\n                  <>\n                    <span className=\"break-words\">\n                      {expanded || (message.text || '').length <= MAX_PREVIEW_CHARS\n                        ? highlightTags(message.text)\n                        : highlightTags((message.text || '').slice(0, MAX_PREVIEW_CHARS) + '...')}\n                    </span>\n                    {(message.text || '').length > MAX_PREVIEW_CHARS && (\n                      <button\n                        className={\n                          `ml-2 inline-flex items-center gap-1 text-xs px-2 py-0.5 rounded-full bg-gray-100 text-blue-600 hover:bg-blue-50 hover:text-blue-800 transition-colors border border-blue-100 focus:outline-none focus:ring-2 focus:ring-blue-200`\n                        }\n                        style={{ verticalAlign: 'middle' }}\n                        aria-expanded={expanded}\n                        onClick={e => {\n                          e.stopPropagation();\n                          setExpanded(prev => !prev);\n                        }}\n                      >\n                        {expanded ? 'Show less' : 'Read more'}\n                        <svg\n                          className={`w-3 h-3 transition-transform duration-200 ${expanded ? 'rotate-180' : ''}`}\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth=\"2\"\n                          viewBox=\"0 0 24 24\"\n                          aria-hidden=\"true\"\n                        >\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19 9l-7 7-7-7\" />\n                        </svg>\n                      </button>\n                    )}\n                  </>\n                )}\n            </div>\n            <div className={`text-xs mt-1 text-right flex items-center gap-1 justify-end ${isOwn ? 'text-gray-600' : 'text-gray-500'}`}>\n              {new Date(message.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n              {isOwn && !(message.isDeleted || message.deleted) && (\n                message.pending || message.status === 'pending' ? (\n                  <div className=\"blinking-dot\"></div>\n                ) : (\n                  // Tick for sent message\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3 w-3 text-indigo-500\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n                    <path d=\"M13.485 1.929a.75.75 0 010 1.06L6.06 10.414a.75.75 0 01-1.06 0L2.515 7.93a.75.75 0 111.06-1.06l2.004 2.003 6.36-6.36a.75.75 0 011.06 0z\" />\n                  </svg>\n                )\n              )}\n              {/* Resend button for failed messages */}\n              {isOwn && message.status === 'failed' && (\n                <button\n                  className=\"ml-2 text-xs text-red-600 bg-white rounded px-2 py-0.5 border border-red-200 shadow hover:bg-red-50\"\n                  onClick={() => onResend && onResend(message)}\n                  title=\"Resend message\"\n                >\n                  Resend\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* Delete confirmation dialog */}\n      {showDeleteConfirm && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-40\">\n          <div className=\"bg-white rounded-lg shadow-lg p-6 max-w-xs w-full\">\n            <div className=\"text-base font-semibold mb-4 text-gray-800\">Delete this message?</div>\n            <div className=\"flex justify-end gap-2\">\n              <button\n                className=\"px-3 py-1 rounded text-gray-600 hover:bg-gray-100\"\n                onClick={() => setShowDeleteConfirm(false)}\n              >\n                Cancel\n              </button>\n              <button\n                className=\"px-3 py-1 rounded bg-red-600 text-white hover:bg-red-700\"\n                onClick={() => {\n                  setShowDeleteConfirm(false);\n                  onDelete && onDelete(message._id);\n                }}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n});\n\nexport default ChatMessageBubble;\n","import React from 'react';\n\n/**\n * Displays a modern typing indicator when users are typing in the chat\n * @param {Object} props Component props\n * @param {Array} props.typingUsers Array of users who are currently typing\n * @param {string} props.currentUserId ID of the current user to exclude from the typing list\n */\nconst TypingIndicator = ({ typingUsers, currentUserId }) => {\n  // Filter out current user from typing users\n  const otherTypingUsers = typingUsers.filter(user => user.id !== currentUserId);\n  \n  if (otherTypingUsers.length === 0) {\n    return null;\n  }\n\n  // Format typing message based on number of users\n  const formatTypingMessage = () => {\n    if (otherTypingUsers.length === 1) {\n      return (\n        <span className=\"text-gray-600\">\n          <span className=\"font-medium text-indigo-600\">{otherTypingUsers[0].name}</span> is typing\n        </span>\n      );\n    } else if (otherTypingUsers.length === 2) {\n      return (\n        <span className=\"text-gray-600\">\n          <span className=\"font-medium text-indigo-600\">{otherTypingUsers[0].name}</span> and{' '}\n          <span className=\"font-medium text-indigo-600\">{otherTypingUsers[1].name}</span> are typing\n        </span>\n      );\n    } else {\n      return (\n        <span className=\"text-gray-600\">\n          <span className=\"font-medium text-indigo-600\">{otherTypingUsers.length} people</span> are typing\n        </span>\n      );\n    }\n  };\n\n  return (\n    <div className=\"flex items-center px-4 py-2 text-sm bg-white bg-opacity-90 backdrop-filter backdrop-blur-sm border border-slate-200 rounded-full transition-all duration-300 ease-in-out shadow-glass\">\n      <div className=\"typing-indicator mr-2\">\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n      {formatTypingMessage()}\n    </div>\n  );\n};\n\nexport default TypingIndicator;\n","import { useState, useEffect, useCallback, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport axios from 'axios';\nimport { useAuthStore } from '../../stores/authStore';\nimport { v4 as uuidv4 } from 'uuid';\nimport { debounce } from 'lodash';\n\nconst SOCKET_URL = process.env.REACT_APP_CHAT_SERVICE_URL || 'http://localhost:3020'; // Change to your backend address if needed\nconst API_URL = `${process.env.REACT_APP_CHAT_SERVICE_URL || 'http://localhost:3020'}/api/messages`;\n\n// util for sessionStorage key\nconst cacheKey = (eventId) => `chat-${eventId}`;\n\n// useChatSocket: Real-time messaging with REST history\nexport function useChatSocket(eventId) {\n  const [messages, setMessages] = useState([]);\n  const [typingUsers, setTypingUsers] = useState([]);\n  const socketRef = useRef(null);\n  const user = useAuthStore(state => state.user);\n  const isTypingRef = useRef(false);\n\n  // Fetch chat history on mount/eventId change\n  useEffect(() => {\n    if (!eventId) return;\n    axios.get(`${API_URL}/${eventId}`)\n      .then(res => {\n        // Normalize all messages to ensure sender field exists\n        const normalizedMsgs = Array.isArray(res.data)\n          ? res.data.map(msg => ({\n              ...msg,\n              sender: msg.sender || msg.senderId || msg.userId || '',\n              // Ensure consistent sender ID format for comparison\n              _senderId: String(msg.sender || msg.senderId || msg.userId || '').trim(),\n              // Normalize replyTo if it exists\n              replyTo: msg.replyTo ? {\n                ...msg.replyTo,\n                sender: msg.replyTo.sender || msg.replyTo.senderId || '',\n                _senderId: String(msg.replyTo.sender || msg.replyTo.senderId || '').trim()\n              } : null\n            }))\n          : [];\n        setMessages(normalizedMsgs);\n      })\n      .catch(() => setMessages([]));\n    \n    // Clear messages when changing events\n    return () => setMessages([]);\n  }, [eventId]);\n\n  // Load from session cache first for instant render\n  useEffect(() => {\n    if (!eventId) return;\n    const cached = sessionStorage.getItem(cacheKey(eventId));\n    if (cached) {\n      try { setMessages(JSON.parse(cached)); } catch { /* ignore */ }\n    }\n  }, [eventId]);\n\n  // Setup socket connection\n  useEffect(() => {\n    if (!eventId || !user) return;\n    const socket = io(SOCKET_URL);\n    socketRef.current = socket;\n    socket.emit('joinEvent', eventId);\n    \n    // Listen for typing status updates\n    socket.on('typingStatus', ({ users }) => {\n      if (!Array.isArray(users)) return;\n      setTypingUsers(users);\n    });\n    \n    socket.on('newMessage', (msg) => {\n      if (!msg) return; // safeguard\n      // Normalize message to ensure sender field exists and properly handle replyTo\n      const normalizedMsg = {\n        ...msg,\n        sender: msg.sender || msg.senderId || msg.userId || '',\n        // Ensure consistent sender ID format for comparison\n        _senderId: String(msg.sender || msg.senderId || msg.userId || '').trim(),\n        // Normalize replyTo if it exists\n        replyTo: msg.replyTo ? {\n          ...msg.replyTo,\n          sender: msg.replyTo.sender || msg.replyTo.senderId || '',\n          _senderId: String(msg.replyTo.sender || msg.replyTo.senderId || '').trim()\n        } : null\n      };\n      \n      // Check if this message already exists in our messages array to avoid duplicates\n      setMessages(prev => {\n        // Check if we already have this message (by ID if available, or by matching content and sender)\n        const isDuplicate = prev.some(existingMsg => \n          (msg._id && existingMsg._id === msg._id) || \n          (msg.id && existingMsg.id === msg.id) ||\n          (existingMsg._senderId === normalizedMsg._senderId && \n           existingMsg.text === msg.text && \n           Math.abs(new Date(existingMsg.timestamp || existingMsg.createdAt || Date.now()) - \n                   new Date(msg.timestamp || msg.createdAt || Date.now())) < 5000)\n        );\n        \n        if (isDuplicate) {\n          return prev; // Don't add duplicate messages\n        }\n        \n        // If this is a message we sent and it's pending, replace the pending message\n        const pendingIndex = prev.findIndex(m => m.pending && m._id.startsWith('temp-'));\n        if (pendingIndex !== -1 && normalizedMsg.senderId === user._id) {\n          return [...prev.slice(0, pendingIndex), normalizedMsg, ...prev.slice(pendingIndex + 1)];\n        }\n        \n        return [...prev, normalizedMsg];\n      });\n      \n      // send delivered ack if message from others\n      if (msg && msg._id && msg.senderId !== user?._id) {\n        socket.emit('deliveredAck', { eventId, messageId: msg._id });\n      }\n    });\n    \n    // Listen for messageDeleted event\n    socket.on('messageDeleted', ({ messageId }) => {\n      setMessages(prev => prev.map(m =>\n        (m._id === messageId || m.id === messageId) ? { ...m, isDeleted: true, deleted: true, text: '' } : m\n      ));\n    });\n\n    // Ack from server with final stored message\n    socket.on('sentAck', (storedMsgRaw) => {\n      // Normalize like in newMessage handler to ensure sender/_senderId exist\n      const storedMsg = storedMsgRaw ? {\n        ...storedMsgRaw,\n        sender: storedMsgRaw.sender || storedMsgRaw.senderId || storedMsgRaw.userId || '',\n        _senderId: String(storedMsgRaw.sender || storedMsgRaw.senderId || storedMsgRaw.userId || '').trim(),\n        replyTo: storedMsgRaw.replyTo ? {\n          ...storedMsgRaw.replyTo,\n          sender: storedMsgRaw.replyTo.sender || storedMsgRaw.replyTo.senderId || '',\n          _senderId: String(storedMsgRaw.replyTo.sender || storedMsgRaw.replyTo.senderId || '').trim()\n        } : null\n      } : null;\n      if (!storedMsg || !storedMsg.clientMsgId) return; // guard\n      setMessages(prev => {\n        const idx = prev.findIndex(m => m.clientMsgId && m.clientMsgId === storedMsg.clientMsgId);\n        if (idx !== -1) {\n          const updated = [...prev];\n          updated[idx] = { ...storedMsg, pending: false, status: 'sent' };\n          return updated;\n        }\n        // if we didn't find pending, push it (in case user opened in second tab)\n        return [...prev, storedMsg];\n      });\n    });\n\n    // statusUpdate (e.g., delivered/read)\n    socket.on('statusUpdate', ({ messageId, status }) => {\n      if (!messageId || !status) return;\n      setMessages(prev => prev.map(m => (m._id === messageId || m.id === messageId) ? { ...m, status } : m));\n    });\n\n    return () => {\n      socket.off('messageDeleted');\n      socket.off('sentAck');\n      socket.off('statusUpdate');\n      socket.off('typingStatus');\n      socket.disconnect();\n    };\n  }, [eventId, user]);\n\n  // Send message with support for replies\n  const sendMessage = useCallback((text, replyToMessage = null) => {\n    if (!socketRef.current || !user || !text.trim()) return;\n    \n    const clientMsgId = uuidv4();\n    \n    // Prepare reply metadata if replying to a message\n    const replyTo = replyToMessage ? {\n      messageId: replyToMessage._id || replyToMessage.id,\n      senderId: replyToMessage.senderId || replyToMessage.sender, \n      senderName: replyToMessage.senderName,\n      text: replyToMessage.text\n    } : null;\n    \n    // Create a temporary message object to show immediately in the UI\n    const tempMessage = {\n      _id: `temp-${clientMsgId}`,\n      eventId,\n      sender: user._id,\n      senderId: user._id,\n      _senderId: String(user._id).trim(),\n      senderName: user.name,\n      senderAvatar: user.avatar,\n      text,\n      clientMsgId,\n      replyTo,\n      timestamp: new Date().toISOString(),\n      pending: true, // Mark as pending until confirmed by server\n      status: 'pending'\n    };\n    \n    // Add the message to the local state immediately\n    setMessages(prev => [...prev, tempMessage]);\n    \n    // Emit message with reply metadata\n    socketRef.current.emit('sendMessage', {\n      eventId,\n      sender: user._id, // Ensure sender field is present\n      senderId: user._id, // For backward compatibility\n      senderName: user.name,\n      senderAvatar: user.avatar,\n      text,\n      replyTo,\n      clientMsgId,\n    });\n  }, [eventId, user]);\n\n  // Delete message\n  const deleteMessage = useCallback((messageId) => {\n    if (!socketRef.current || !messageId) return;\n    socketRef.current.emit('deleteMessage', { eventId, messageId });\n  }, [eventId]);\n\n  // Persist messages to sessionStorage whenever they change\n  useEffect(() => {\n    if (!eventId) return;\n    try {\n      sessionStorage.setItem(cacheKey(eventId), JSON.stringify(messages));\n    } catch {}\n  }, [messages, eventId]);\n\n  // Create a ref to store the debounced function instance\n  const debouncedFnRef = useRef(null);\n  \n  // Initialize the debounced function once\n  useEffect(() => {\n    // Create the debounced function\n    const debouncedFn = debounce((socket, eventId, userId, userName, typingRef) => {\n      if (!socket || !typingRef?.current) return;\n      socket.emit('typing', {\n        eventId,\n        userId,\n        userName,\n        isTyping: false\n      });\n      if (typingRef) typingRef.current = false;\n    }, 2000);\n    \n    // Store it in the ref\n    debouncedFnRef.current = debouncedFn;\n    \n    // Clean up on unmount\n    return () => {\n      if (debouncedFnRef.current?.cancel) {\n        debouncedFnRef.current.cancel();\n      }\n    };\n  }, []);\n  \n  // Send typing status - debounced to avoid flooding\n  const debouncedStopTyping = useCallback(() => {\n    if (!socketRef.current || !user || !isTypingRef.current || !debouncedFnRef.current) return;\n    debouncedFnRef.current(\n      socketRef.current, \n      eventId, \n      user?._id, \n      user?.name, \n      isTypingRef\n    );\n  }, [eventId, user]);\n\n  // Update typing status\n  const updateTypingStatus = useCallback((isTyping) => {\n    if (!socketRef.current || !user) return;\n    \n    // Only emit if status changed to avoid unnecessary events\n    if (isTyping && !isTypingRef.current) {\n      socketRef.current.emit('typing', {\n        eventId,\n        userId: user._id,\n        userName: user.name,\n        isTyping: true\n      });\n      isTypingRef.current = true;\n    }\n    \n    if (isTyping) {\n      // Reset the debounce timer each time user types\n      debouncedStopTyping();\n    } else if (isTypingRef.current) {\n      // Immediately stop typing indicator if explicitly set to false\n      if (debouncedFnRef.current?.cancel) {\n        debouncedFnRef.current.cancel();\n      }\n      socketRef.current.emit('typing', {\n        eventId,\n        userId: user._id,\n        userName: user.name,\n        isTyping: false\n      });\n      isTypingRef.current = false;\n    }\n  }, [eventId, user, debouncedStopTyping]);\n\n  // Enhanced markMessagesAsRead function to properly mark messages as read\n  const markMessagesAsRead = useCallback(async () => {\n    if (!socketRef.current || !user || !eventId) return;\n    \n    try {\n      // Call the API to mark messages as read\n      await axios.post(`${API_URL}/${eventId}/read`, { userId: user._id });\n      \n      // Update local state to reflect messages as read\n      setMessages(prev => prev.map(msg => {\n        // Skip messages sent by this user\n        if (String(msg.senderId) === String(user._id)) return msg;\n        \n        // Check if user has already read this message\n        const hasRead = msg.readBy && msg.readBy.some(read => String(read.userId) === String(user._id));\n        if (hasRead) return msg;\n        \n        // Add user to readBy array\n        return {\n          ...msg,\n          readBy: [...(msg.readBy || []), { userId: user._id, readAt: new Date() }]\n        };\n      }));\n      \n      // Notify other clients that messages have been read\n      socketRef.current.emit('messagesRead', { eventId, userId: user._id });\n      \n      // Trigger update of unread counts\n      socketRef.current.emit('unreadCountsChanged', { eventId });\n      \n      console.log('Marked all messages as read for event:', eventId);\n    } catch (error) {\n      console.error('Error marking messages as read:', error);\n    }\n  }, [eventId, user, setMessages]);\n\n  return {\n    messages,\n    sendMessage,\n    deleteMessage,\n    setMessages,\n    typingUsers,\n    updateTypingStatus,\n    markMessagesAsRead\n  };\n}\n","import React, { useEffect, useRef, useState, useLayoutEffect } from 'react';\nimport ChatMessageBubble from './ChatMessageBubble';\nimport TypingIndicator from './TypingIndicator';\nimport { useChatSocket } from '../../hooks/useChatSocket';\nimport './typing-indicator.css';\nimport '../../../styles/chat-custom.css';\n\nconst ChatMessageList = ({ messages: propMessages, currentUserId, eventId, onReplyTo, typingUsers = [], unreadCount = 0 }) => {\n  const { deleteMessage, sendMessage, setMessages, markMessagesAsRead } = useChatSocket(eventId);\n  const listRef = useRef(null);\n  // internal state to track if user is near the bottom\n  const [isAtBottom, setIsAtBottom] = useState(true);\n  // Store refs to message elements for scrolling\n  const messageRefs = useRef({});\n  // Keep track of previous message count to detect new messages\n  const prevMessageCount = useRef(0);\n  // Track first render per event\n  const isFirstRender = useRef(true);\n  // Track if we've scrolled to unread messages\n  const [hasScrolledToUnread, setHasScrolledToUnread] = useState(false);\n  // Store the first unread message ID\n  const [firstUnreadMessageId, setFirstUnreadMessageId] = useState(null);\n  // Track if there's an unread divider displayed\n  const [showUnreadDivider, setShowUnreadDivider] = useState(false);\n\n  // Function to scroll to a specific message by ID\n  const scrollToMessage = (messageId) => {\n    if (messageRefs.current[messageId] && listRef.current) {\n      const messageElement = messageRefs.current[messageId];\n      messageElement.scrollIntoView({ behavior: 'smooth', block: 'center' });\n      \n      // Flash highlight effect on the message\n      messageElement.classList.add('bg-yellow-100');\n      setTimeout(() => {\n        messageElement.classList.remove('bg-yellow-100');\n      }, 1500);\n    }\n  };\n\n  // Scroll handler to flag bottom proximity\n  const handleScroll = () => {\n    const scrollElement = listRef.current || document.documentElement;\n    const { scrollTop, scrollHeight, clientHeight } = scrollElement;\n    const atBottom = scrollHeight - (scrollTop + clientHeight) < 100; // px threshold\n    setIsAtBottom(atBottom);\n  };\n\n  useEffect(() => {\n    if (!propMessages || propMessages.length === 0) return;\n    \n    // Detect if new messages arrived\n    const newMessagesArrived = propMessages.length > prevMessageCount.current;\n    prevMessageCount.current = propMessages.length;\n\n    // Force scroll on new messages\n    if (newMessagesArrived && listRef.current) {\n      const scrollToBottom = () => {\n        if (!listRef.current) return;\n        listRef.current.scrollTop = listRef.current.scrollHeight;\n      };\n      // immediate scroll\n      scrollToBottom();\n      // extra scroll after keyboard/layout settles\n      setTimeout(scrollToBottom, 50);\n      setTimeout(scrollToBottom, 150);\n      console.log('Auto-scrolling to new message (with keyboard-safe retries)');\n    }\n  }, [propMessages]);\n\n  // Reset state when event changes\n  useEffect(() => {\n    console.log('Event changed, resetting chat state');\n    isFirstRender.current = true;\n    setHasScrolledToUnread(false);\n    setFirstUnreadMessageId(null);\n    setShowUnreadDivider(false);\n    \n    // Clear message refs when changing events\n    messageRefs.current = {};\n    prevMessageCount.current = 0;\n  }, [eventId]);\n\n  // Find the first unread message and scroll to it on first render\n  useLayoutEffect(() => {\n    console.log('ChatMessageList useLayoutEffect - messages, unreadCount:', propMessages.length, unreadCount);\n    \n    // Only process if we have messages and the component is mounted\n    if (!listRef.current || !Array.isArray(propMessages) || propMessages.length === 0) return;\n    \n    // If this is the first render and we have unread messages\n    if (isFirstRender.current && unreadCount > 0 && !hasScrolledToUnread) {\n      console.log('Processing unread messages, count:', unreadCount);\n      \n      // Find messages not sent by current user and not read by current user\n      const unreadMessages = propMessages.filter(msg => {\n        // Skip messages sent by this user\n        if (String(msg.senderId) === String(currentUserId)) return false;\n        // Check if user has read this message\n        const hasRead = msg.readBy && msg.readBy.some(read => String(read.userId) === String(currentUserId));\n        return !hasRead;\n      });\n      \n      console.log('Found unread messages:', unreadMessages.length);\n      \n      if (unreadMessages.length > 0) {\n        // Sort by timestamp to get the oldest unread message\n        unreadMessages.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n        const firstUnread = unreadMessages[0];\n        console.log('First unread message:', firstUnread);\n        \n        setFirstUnreadMessageId(firstUnread._id);\n        setShowUnreadDivider(true);\n        \n        // Use a series of timeouts with increasing delays to ensure the DOM is ready\n        // This helps with race conditions where the refs might not be set yet\n        const scrollToUnreadMessage = (attempt = 1) => {\n          console.log(`Attempt ${attempt} to scroll to unread message`);\n          \n          if (messageRefs.current[firstUnread._id]) {\n            // Scroll to the first unread message\n            messageRefs.current[firstUnread._id].scrollIntoView({ behavior: 'auto', block: 'center' });\n            \n            // Add a visual highlight\n            messageRefs.current[firstUnread._id].classList.add('bg-yellow-100');\n            setTimeout(() => {\n              if (messageRefs.current[firstUnread._id]) {\n                messageRefs.current[firstUnread._id].classList.remove('bg-yellow-100');\n              }\n            }, 2000);\n            \n            // Mark that we've scrolled to unread\n            setHasScrolledToUnread(true);\n            \n            // Mark messages as read after a short delay\n            setTimeout(() => {\n              markMessagesAsRead(eventId);\n            }, 1000);\n            \n            console.log('Successfully scrolled to unread message');\n          } else if (attempt < 5) {\n            // Try again with increasing delay (exponential backoff)\n            setTimeout(() => scrollToUnreadMessage(attempt + 1), 100 * Math.pow(2, attempt));\n          } else {\n            console.log('Failed to scroll to unread message after multiple attempts');\n            // Fallback to bottom scroll if we can't find the message after several attempts\n            listRef.current.scrollTop = listRef.current.scrollHeight;\n          }\n        };\n        \n        // Start the scroll attempt process\n        scrollToUnreadMessage();\n      } else {\n        // If no unread messages found, scroll to bottom as usual\n        console.log('No unread messages found, scrolling to bottom');\n        listRef.current.scrollTop = listRef.current.scrollHeight;\n      }\n    } else if (isFirstRender.current) {\n      // If no unread messages, scroll to bottom as usual\n      console.log('No unread count, scrolling to bottom');\n      listRef.current.scrollTop = listRef.current.scrollHeight;\n    }\n    \n    isFirstRender.current = false;\n  }, [propMessages, unreadCount, currentUserId, eventId, hasScrolledToUnread, markMessagesAsRead]);\n\n  // Handle virtual keyboard resize on mobile browsers\n  useEffect(() => {\n    const viewport = window.visualViewport;\n    if (!viewport) return; // fallback for desktop\n    const onVVResize = () => {\n      // When keyboard opens the viewport height shrinks; keep last msg visible\n      if (isAtBottom && listRef.current) {\n        listRef.current.scrollTop = listRef.current.scrollHeight;\n      }\n    };\n    viewport.addEventListener('resize', onVVResize);\n    return () => viewport.removeEventListener('resize', onVVResize);\n  }, [isAtBottom]);\n\n  // Group messages by date\n  const groupMessagesByDate = (messages) => {\n    if (!Array.isArray(messages) || messages.length === 0) return [];\n    \n    const groups = [];\n    let currentDate = null;\n    let currentGroup = [];\n    \n    messages.forEach(msg => {\n      const messageDate = new Date(msg.timestamp || msg.createdAt || Date.now());\n      const messageDay = new Date(\n        messageDate.getFullYear(),\n        messageDate.getMonth(),\n        messageDate.getDate()\n      ).toISOString();\n      \n      if (messageDay !== currentDate) {\n        // If we have messages in the current group, save it\n        if (currentGroup.length > 0) {\n          groups.push({\n            date: currentDate,\n            messages: currentGroup\n          });\n        }\n        \n        // Start a new group\n        currentDate = messageDay;\n        currentGroup = [msg];\n      } else {\n        // Add to current group\n        currentGroup.push(msg);\n      }\n    });\n    \n    // Add the last group\n    if (currentGroup.length > 0) {\n      groups.push({\n        date: currentDate,\n        messages: currentGroup\n      });\n    }\n    \n    return groups;\n  };\n  \n  // Format date for display\n  const formatMessageDate = (dateString) => {\n    const messageDate = new Date(dateString);\n    const today = new Date();\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    \n    // Reset hours to compare just the date\n    const todayDate = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n    const yesterdayDate = new Date(yesterday.getFullYear(), yesterday.getMonth(), yesterday.getDate());\n    const messageDateOnly = new Date(messageDate.getFullYear(), messageDate.getMonth(), messageDate.getDate());\n    \n    if (messageDateOnly.getTime() === todayDate.getTime()) {\n      return 'Today';\n    } else if (messageDateOnly.getTime() === yesterdayDate.getTime()) {\n      return 'Yesterday';\n    } else {\n      // Format as Month Day, Year for older dates\n      return messageDate.toLocaleDateString('en-US', { \n        month: 'long', \n        day: 'numeric',\n        year: messageDate.getFullYear() !== today.getFullYear() ? 'numeric' : undefined \n      });\n    }\n  };\n  \n  // Group messages by date\n  const messageGroups = groupMessagesByDate(propMessages);\n\n  // Handler to resend failed messages\n  const handleResend = (failedMessage) => {\n    // Remove the failed message from the list\n    setMessages(prev => prev.filter(m => m._id !== failedMessage._id));\n    // Re-send the message (call sendMessage with the same text/replyTo)\n    sendMessage(failedMessage.text, failedMessage.replyTo);\n  };\n\n  return (\n    <div\n      ref={listRef}\n      onScroll={handleScroll}\n      className=\"flex flex-col gap-1 w-full pb-16 overflow-y-auto flex-1 relative chat-scrollbar\"\n      style={{\n        scrollPaddingBottom: '90px'\n      }}\n    >\n      {/* Encryption Notice Banner */}\n      <div className=\"w-full px-3 pt-2 pb-1\">\n        <div className=\"w-full bg-white/90 backdrop-blur-sm rounded-xl shadow-sm p-3 border border-gray-100\">\n          <div className=\"flex flex-col gap-1 justify-center text-center text-gray-700\">\n            <div className=\"flex items-center justify-center gap-1\">\n              <span className=\"text-sm font-medium\">🔒 All messages are end‑to‑end encrypted</span>\n            </div>\n            <div className=\"flex items-center justify-center gap-1\">\n              <span className=\"text-sm font-medium\">💬 Single Tap to Reply</span>\n            </div>\n            <div className=\"flex items-center justify-center gap-1\">\n              <span className=\"text-sm font-medium\">❌ Long‑Press to Delete your message</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      {messageGroups.length > 0 ? (\n        messageGroups.map((group, groupIndex) => (\n          <div key={group.date || `group-${groupIndex}`} className=\"flex flex-col gap-0.5\">\n            {/* Date separator for each group */}\n            <div className=\"sticky top-0 z-10 flex justify-center my-2\">\n              <div className=\"bg-white bg-opacity-80 backdrop-blur-sm text-xs text-gray-500 px-3 py-1 rounded-full shadow-sm\">\n                {formatMessageDate(group.date)}\n              </div>\n            </div>\n            \n            {/* Messages in this date group */}\n            {group.messages.map((msg, idx) => {\n              let senderId = '';\n              if (msg.sender === undefined || msg.sender === null) {\n                senderId = '';\n              } else if (typeof msg.sender === 'object') {\n                senderId = msg.sender._id || msg.sender.id || msg.sender.username || msg.sender.email || '';\n              } else {\n                senderId = msg.sender;\n              }\n              // Check if the message has a pre-processed _senderId field\n              const isOwn = msg._senderId \n                ? msg._senderId === String(currentUserId).trim()\n                : String(senderId).trim() === String(currentUserId).trim();\n              return (\n                <div\n                  key={msg._id}\n                  ref={el => (messageRefs.current[msg._id] = el)}\n                  className=\"w-full\"\n                >\n                  {/* Unread messages divider */}\n                  {showUnreadDivider && firstUnreadMessageId === msg._id && (\n                    <div className=\"flex items-center justify-center my-2\">\n                      <div className=\"bg-red-100 text-red-600 text-xs px-4 py-1 rounded-full font-medium shadow-sm animate-pulse\">\n                        Unread Messages ({unreadCount})\n                      </div>\n                    </div>\n                  )}\n                  <ChatMessageBubble\n                    message={msg}\n                    isOwn={isOwn}\n                    userPhoto={msg.senderAvatar || msg.avatar || msg.photo || undefined}\n                    onDelete={deleteMessage}\n                    onReplyTo={(message, messageId) => {\n                      // If messageId is provided, scroll to that message\n                      if (messageId) {\n                        scrollToMessage(messageId);\n                      } else {\n                        // Otherwise, use the original onReplyTo handler\n                        onReplyTo && onReplyTo(message);\n                      }\n                    }}\n                    onResend={handleResend}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        ))\n      ) : (\n        /* Empty state when no messages */\n        <div className=\"flex flex-col items-center justify-center h-64 text-gray-500\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-16 w-16 mb-4 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1\" d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n          </svg>\n          <p className=\"text-center font-medium\">No messages yet.<br/>Start the conversation!</p>\n        </div>\n      )}\n      \n      {/* scroll-to-bottom button */}\n      {!isAtBottom && (\n        <button\n          type=\"button\"\n          className=\"fixed left-4 bottom-36 bg-indigo-600 text-white p-2 rounded-full shadow-lg hover:bg-indigo-700 focus:outline-none z-40 flex items-center justify-center\"\n          onClick={() => {\n            const el = listRef.current || document.documentElement;\n            if (el) {\n              el.scrollTo({\n                top: el.scrollHeight,\n                behavior: 'smooth'\n              });\n            }\n          }}\n          aria-label=\"Scroll to latest\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polyline points=\"6 9 12 15 18 9\"></polyline></svg>\n        </button>\n      )}\n      \n      {/* Typing indicator - shown at the bottom of the chat */}\n      {typingUsers && typingUsers.length > 0 && (\n        <div className=\"sticky bottom-0 w-full z-10 animate-fadeIn\">\n          <div className=\"mx-2 mb-2 rounded-full shadow-sm overflow-hidden transform transition-all duration-300 ease-in-out\">\n            <TypingIndicator typingUsers={typingUsers} currentUserId={currentUserId} />\n          </div>\n        </div>\n      )}\n      <div className=\"h-20 w-full flex-shrink-0 pb-16\" id=\"chat-end-spacer\" aria-hidden=\"true\"></div>\n    </div>\n  );\n};\n\nexport default ChatMessageList;\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_CHAT_SERVICE_URL || 'http://localhost:3020';\r\n\r\nconst ChatInputBox = ({ onSend, value, onChange, replyToMessage, onCancelReply, onTyping, eventId, members = [] }) => {\r\n  const inputRef = useRef();\r\n  // Keep showTagDropdown state for reference in handleInputChange\r\n  const [showTagDropdown, setShowTagDropdown] = useState(false);\r\n  const [tags, setTags] = useState([]);\r\n  // Mention state\r\n  const [showMentionDropdown, setShowMentionDropdown] = useState(false);\r\n  // We still need setMentionQuery for the handleInputChange function\r\n  const [, setMentionQuery] = useState('');\r\n  const [mentionCandidates, setMentionCandidates] = useState([]);\r\n  \r\n  // Tag autocomplete state\r\n  const [showTagAutocomplete, setShowTagAutocomplete] = useState(false);\r\n  const [, setTagQuery] = useState(''); // Only need the setter\r\n  const [tagCandidates, setTagCandidates] = useState([]);\r\n\r\n  // Function to adjust textarea height based on content\r\n  const adjustTextareaHeight = () => {\r\n    const textarea = inputRef.current;\r\n    if (!textarea) return;\r\n    \r\n    // Reset height to auto to get the correct scrollHeight\r\n    textarea.style.height = 'auto';\r\n    \r\n    // Calculate new height (limit to max-height defined in CSS)\r\n    const newHeight = Math.min(textarea.scrollHeight, 120); // 120px max height (5-6 lines)\r\n    \r\n    // Set the height\r\n    textarea.style.height = `${newHeight}px`;\r\n  };\r\n\r\n  // Fetch tags for the event (only for autocomplete functionality)\r\n  useEffect(() => {\r\n    if (!eventId) return;\r\n    axios.get(`${API_URL}/api/tags?eventId=${eventId}`)\r\n      .then(res => setTags(res.data))\r\n      .catch(err => console.error('Failed to fetch tags:', err));\r\n  }, [eventId]);\r\n\r\n  // Adjust height whenever value changes\r\n  useEffect(() => {\r\n    adjustTextareaHeight();\r\n  }, [value]);\r\n\r\n  // Adjust height on component mount\r\n  useEffect(() => {\r\n    if (inputRef.current && value) {\r\n      adjustTextareaHeight();\r\n    }\r\n  }, []);\r\n\r\n  // Tag management functions removed as functionality was moved to GroupHeader\r\n\r\n  // Handle input change for @mention detection\r\n  const handleInputChange = (e) => {\r\n    const val = e.target.value;\r\n    onChange(val);\r\n    // Close tag dropdown if open (though the dropdown UI was moved to GroupHeader)\r\n    if (showTagDropdown) {\r\n      setShowTagDropdown(false);\r\n    }\r\n    // Detect @mention and #tag\r\n    const textarea = inputRef.current;\r\n    if (textarea) {\r\n      const cursorPos = textarea.selectionStart;\r\n      const textUpToCursor = val.slice(0, cursorPos);\r\n      \r\n      // Check for @mention\r\n      const mentionMatch = textUpToCursor.match(/@([a-zA-Z0-9_\\- ]*)$/);\r\n      if (mentionMatch) {\r\n        const queryText = mentionMatch[1] || '';\r\n        setMentionQuery(queryText);\r\n        // Filter members by name or username\r\n        const filtered = members.filter(m => {\r\n          const name = m.name || m.username || '';\r\n          return name.toLowerCase().includes(queryText.toLowerCase());\r\n        });\r\n        setMentionCandidates(filtered.slice(0, 8));\r\n        setShowMentionDropdown(true);\r\n        setShowTagAutocomplete(false); // Hide tag autocomplete when showing mentions\r\n      } else {\r\n        setShowMentionDropdown(false);\r\n        setMentionQuery('');\r\n        \r\n        // Check for #tag\r\n        const tagMatch = textUpToCursor.match(/#([a-zA-Z0-9_-]*)$/);\r\n        if (tagMatch) {\r\n          const query = tagMatch[1] || '';\r\n          setTagQuery(query);\r\n          // Filter tags by name\r\n          const filtered = tags.filter(tag => {\r\n            return tag.name.toLowerCase().includes(query.toLowerCase());\r\n          });\r\n          setTagCandidates(filtered.slice(0, 5));\r\n          setShowTagAutocomplete(true);\r\n        } else {\r\n          setShowTagAutocomplete(false);\r\n          setTagQuery('');\r\n        }\r\n      }\r\n    }\r\n    // ...existing typing logic...\r\n    if (onTyping) onTyping(val.length > 0);\r\n    \r\n    // Adjust textarea height as user types\r\n    adjustTextareaHeight();\r\n  };\r\n\r\n  // Insert mention at cursor\r\n  const handleMentionSelect = (member) => {\r\n    const textarea = inputRef.current;\r\n    const mentionText = `@${member.name}`;\r\n    if (!textarea) {\r\n      onChange((value || '') + mentionText + ' ');\r\n    } else {\r\n      const start = textarea.selectionStart;\r\n      const end = textarea.selectionEnd;\r\n      const before = (value || '').slice(0, start).replace(/@([a-zA-Z0-9_\\- ]*)$/, '');\r\n      const after = (value || '').slice(end);\r\n      const insert = mentionText + ' ';\r\n      const newValue = before + insert + after;\r\n      onChange(newValue);\r\n      setTimeout(() => {\r\n        textarea.focus();\r\n        textarea.selectionStart = textarea.selectionEnd = before.length + insert.length;\r\n      }, 0);\r\n    }\r\n    setShowMentionDropdown(false);\r\n    setMentionQuery('');\r\n  };\r\n\r\n  const handleSend = (e) => {\r\n    // Prevent default to avoid keyboard dismissal\r\n    if (e) e.preventDefault();\r\n    \r\n    // Only send if there's content\r\n    if (value && value.trim()) {\r\n      onSend(value);\r\n    }\r\n  };\r\n\r\n\r\n  // Insert tag at cursor position (used for both dropdown and autocomplete)\r\n  const handleTagInsert = (tag) => {\r\n    const textarea = inputRef.current;\r\n    const tagText = `#${tag.name}`;\r\n    if (!textarea) {\r\n      onChange((value || '') + tagText);\r\n    } else {\r\n      const start = textarea.selectionStart;\r\n      const end = textarea.selectionEnd;\r\n      const before = (value || '').slice(0, start);\r\n      const after = (value || '').slice(end);\r\n      \r\n      // For autocomplete, replace the partial tag\r\n      let newBefore = before;\r\n      if (showTagAutocomplete) {\r\n        // Remove the partial #tag that was being typed\r\n        newBefore = before.replace(/#[a-zA-Z0-9_-]*$/, '');\r\n      } else {\r\n        // Add a space if needed when inserting from dropdown\r\n        const needsSpace = before && !/\\s$/.test(before);\r\n        if (needsSpace) {\r\n          newBefore = before + ' ';\r\n        }\r\n      }\r\n      \r\n      const insert = tagText + ' ';\r\n      const newValue = newBefore + insert + after;\r\n      onChange(newValue);\r\n      setTimeout(() => {\r\n        textarea.focus();\r\n        textarea.selectionStart = textarea.selectionEnd = newBefore.length + insert.length;\r\n      }, 0);\r\n    }\r\n    // Only need to hide tag autocomplete as dropdown was moved to GroupHeader\r\n    setShowTagAutocomplete(false);\r\n  };\r\n  \r\n  // Handle tag selection from autocomplete\r\n  const handleTagAutocomplete = (tag) => {\r\n    handleTagInsert(tag);\r\n  };\r\n\r\n  // Event listener removed as tag dropdown was moved to GroupHeader\r\n\r\n  return (\r\n    <div className=\"flex w-full gap-2 items-end p-2 border-t border-gray-200 bg-white relative flex-col\">\r\n      {/* Reply preview: show full message when replying */}\r\n      {replyToMessage && (\r\n        <div className=\"w-full mb-2 p-2 rounded bg-gray-100 border-l-4 border-blue-400\">\r\n          <div className=\"text-xs text-gray-500 mb-1\">Replying to:</div>\r\n          <div className=\"text-sm text-gray-800 whitespace-pre-line break-words\">{replyToMessage.content || replyToMessage.text || ''}</div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"mt-1 text-xs text-blue-600 hover:underline focus:outline-none\"\r\n            onClick={onCancelReply}\r\n          >\r\n            Cancel Reply\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"flex w-full gap-2 items-start\">\r\n        {/* Tag button removed and moved to GroupHeader */}\r\n        <textarea\r\n          ref={inputRef}\r\n          className=\"flex-1 min-w-0 px-2 py-1 rounded-2xl border border-gray-300 text-base focus:outline-none resize-none min-h-[28px] overflow-auto chat-input\"\r\n          placeholder=\"Type a message...\"\r\n          value={value}\r\n          maxLength={1500}\r\n          rows={1}\r\n          onChange={handleInputChange}\r\n          onBlur={() => {\r\n            // Stop typing indicator when input loses focus\r\n            if (onTyping) onTyping(false);\r\n          }}\r\n          onKeyDown={e => {\r\n            if (e.key === 'Enter' && !e.shiftKey) {\r\n              const textarea = e.target;\r\n              const cursorPos = textarea.selectionStart;\r\n              const text = textarea.value;\r\n              // Get the text before the cursor\r\n              const beforeCursor = text.slice(0, cursorPos);\r\n              // Get the text after the cursor\r\n              const afterCursor = text.slice(cursorPos);\r\n              // Check if the line before the cursor is empty (i.e., double Enter)\r\n              const lines = beforeCursor.split('\\n');\r\n              const lastLine = lines[lines.length - 1];\r\n              if (lastLine.trim() === '' && afterCursor.trim() === '') {\r\n                // Double Enter: send message\r\n                e.preventDefault();\r\n                handleSend(e);\r\n              } else {\r\n                // Single Enter: add newline\r\n                // Let default behavior happen, then adjust height\r\n                setTimeout(adjustTextareaHeight, 0);\r\n              }\r\n            } else if (e.key === 'Enter' && e.shiftKey) {\r\n              // Allow newline with Shift+Enter and adjust height\r\n              setTimeout(adjustTextareaHeight, 0);\r\n            }\r\n          }}\r\n          style={{lineHeight: '1.5', overflow: 'hidden'}}\r\n        />\r\n        <button\r\n          className=\"btn btn-primary flex-shrink-0 inline-flex items-center justify-center w-10 h-10 rounded-full p-0 self-end\"\r\n          style={{ display: 'grid', placeItems: 'center' }}\r\n          onTouchStart={(e) => {\r\n            // Prevent default behavior on touch start\r\n            e.preventDefault();\r\n          }}\r\n          onMouseDown={(e) => {\r\n            // Prevent default behavior on mouse down\r\n            e.preventDefault();\r\n          }}\r\n          onClick={(e) => {\r\n            // Handle the click with preventDefault\r\n            handleSend(e);\r\n          }}\r\n          type=\"button\"\r\n          aria-label=\"Send message\"\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n            <path d=\"M12 19V5M5 12l7-7 7 7\"/>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      {/* Mention dropdown */}\r\n      {showMentionDropdown && mentionCandidates.length > 0 && (\r\n        <div className=\"absolute left-12 bottom-14 z-50 bg-white border border-gray-200 rounded shadow-lg min-w-[180px] max-h-48 overflow-y-auto p-1\">\r\n          {mentionCandidates.map(member => (\r\n            <button\r\n              key={member.userId || member.id || member._id}\r\n              className=\"w-full text-left px-3 py-1 hover:bg-indigo-100 rounded text-sm text-gray-800 flex items-center gap-2\"\r\n              type=\"button\"\r\n              onClick={() => handleMentionSelect(member)}\r\n            >\r\n              {member.avatar && (\r\n                <img src={member.avatar} alt={member.name} className=\"w-6 h-6 rounded-full object-cover\" />\r\n              )}\r\n              <span className=\"font-medium\">{member.name}</span>\r\n              {member.username && <span className=\"text-xs text-gray-500\">@{member.username}</span>}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      )}\r\n      \r\n      {/* Tag autocomplete dropdown */}\r\n      {showTagAutocomplete && tagCandidates.length > 0 && (\r\n        <div className=\"absolute left-12 bottom-14 z-50 bg-white border border-gray-200 rounded shadow-lg min-w-[150px] max-h-48 overflow-y-auto p-1\">\r\n          {tagCandidates.map(tag => (\r\n            <button\r\n              key={tag._id}\r\n              className=\"w-full text-left px-3 py-1 hover:bg-indigo-100 rounded text-sm flex items-center gap-2\"\r\n              type=\"button\"\r\n              onClick={() => handleTagAutocomplete(tag)}\r\n            >\r\n              <span className=\"inline-block bg-indigo-100 text-indigo-700 px-2 py-0.5 rounded-full text-xs font-medium\">\r\n                #{tag.name}\r\n              </span>\r\n            </button>\r\n          ))}\r\n        </div>\r\n      )}\r\n      {/* Reply Preview */}\r\n      {replyToMessage && (\r\n        <div className=\"absolute left-0 right-0 bottom-full bg-gray-50 border-t border-gray-200 px-3 py-2 flex justify-between items-center\">\r\n          <div className=\"flex-1 min-w-0\">\r\n            <div className=\"text-xs text-gray-500\">\r\n              Replying to <span className=\"font-medium text-gray-700\">\r\n                {replyToMessage.senderName || \r\n                (typeof replyToMessage.sender === 'object' && \r\n                  (replyToMessage.sender.name || replyToMessage.sender.username)) || \r\n                'Unknown'}\r\n              </span>\r\n            </div>\r\n            <div className=\"text-sm text-gray-700 mt-1 max-h-20 overflow-y-auto break-words whitespace-pre-wrap\">\r\n              {replyToMessage.text || '[deleted]'}\r\n            </div>\r\n          </div>\r\n          <button \r\n            onClick={onCancelReply}\r\n            className=\"ml-2 p-1 text-gray-500 hover:text-gray-700 rounded-full hover:bg-gray-200\"\r\n            aria-label=\"Cancel reply\"\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n              <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n              <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInputBox;\r\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport ChatMessageList from '../components/chat/ChatMessageList';\nimport ChatInputBox from '../components/chat/ChatInputBox';\nimport GroupHeader from '../components/chat/GroupHeader';\nimport MomentsTab from '../components/chat/MomentsTab';\nimport MembersTab from '../components/chat/MembersTab';\nimport AboutTab from '../components/chat/AboutTab';\n\nimport { useMyEvents } from '../hooks/queries/useMyEventsQueries';\nimport { useAuthStore } from '../../stores/authStore';\nimport { useChatSocket } from '../hooks/useChatSocket';\nimport { useEventMembersQuery } from '../hooks/queries/useEventMembersQuery';\nimport { useChatPreview } from '../hooks/queries/useChatPreviewQuery';\n\n\nconst EventChatPage = () => {\n  // Add meta viewport tag to prevent zooming when keyboard opens\n  useEffect(() => {\n    // Get existing viewport meta tag\n    let viewportMeta = document.querySelector('meta[name=\"viewport\"]');\n    \n    // If it doesn't exist, create it\n    if (!viewportMeta) {\n      viewportMeta = document.createElement('meta');\n      viewportMeta.name = 'viewport';\n      document.head.appendChild(viewportMeta);\n    }\n    \n    // Set viewport properties to prevent zooming\n    viewportMeta.content = 'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no';\n    \n    // Cleanup function to restore original viewport settings\n    return () => {\n      viewportMeta.content = 'width=device-width, initial-scale=1.0';\n    };\n  }, []);\n  \n  // State for active tab\n  const [activeTab, setActiveTab] = useState('groupinfo');\n  \n  // State for showing group tabbed interface\n  const [showGroupTabs, setShowGroupTabs] = useState(false);\n  \n  // Ref for the chat container to control scrolling\n  const chatContainerRef = useRef(null);\n  \n  console.log('EventChatPage mounted.');\n  const { eventId } = useParams();\n  console.log('EventChatPage useParams eventId:', eventId);\n  const navigate = useNavigate();\n  const { user } = useAuthStore();\n  // Fetch user's events and find the current event from backend\n  const { data: events = [] } = useMyEvents();\n  const { data: members = [] } = useEventMembersQuery(eventId);\n  // Get chat preview with unread count for this event\n  const { preview } = useChatPreview(eventId);\n  const unreadCount = preview?.unreadCount || 0;\n  console.log('Chat preview for current event:', preview);\n  console.log('Unread count for current event:', unreadCount);\n  console.log('Fetched events from useMyEvents:', events);\n  \n  // Find event by either _id or id, with detailed logging\n  const event = events.find(e => {\n    const eventIdField = e._id || e.id;\n    console.log('Comparing event ID:', eventIdField, 'with param:', eventId, 'match:', String(eventIdField) === String(eventId));\n    return String(eventIdField) === String(eventId);\n  });\n  \n  console.log('Resolved event from events list:', event);\n  // useChatSocket returns an array of message objects as per the backend structure\n  const { messages, sendMessage, typingUsers, updateTypingStatus, markMessagesAsRead } = useChatSocket(eventId);\n  const [input, setInput] = useState('');\n  const [replyToMessage, setReplyToMessage] = useState(null);\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    if (messages && messages.length > 0 && chatContainerRef.current) {\n      // Scroll to bottom immediately\n      const scrollToBottom = () => {\n        if (chatContainerRef.current) {\n          chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n        }\n      };\n      \n      // Execute scroll immediately and after a short delay to handle layout adjustments\n      scrollToBottom();\n      setTimeout(scrollToBottom, 100);\n      setTimeout(scrollToBottom, 300); // Additional delay for slower devices\n    }\n  }, [messages]);\n\n  // Mark messages as read on mount and when window regains focus\n  useEffect(() => {\n    if (!eventId) return;\n    // Mark as read on mount\n    markMessagesAsRead();\n    // Mark as read when window regains focus\n    const handleFocus = () => markMessagesAsRead();\n    window.addEventListener('focus', handleFocus);\n    return () => {\n      window.removeEventListener('focus', handleFocus);\n    };\n  }, [eventId, markMessagesAsRead]);\n\n  // Function to scroll to bottom of chat\n  const scrollToBottom = () => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  };\n\n  // Handle sending messages\n  const handleSend = (text) => {\n    // Ensure text is a string and not empty\n    const textStr = typeof text === 'string' ? text : String(text || '');\n    if (!textStr.trim()) return;\n    \n    // Send the message - sendMessage expects (text, replyToMessage)\n    sendMessage(textStr, replyToMessage);\n    \n    // Clear the input but prepare it with the selected tag if one exists\n    setInput(selectedTag ? `#${selectedTag.name} ` : '');\n    setReplyToMessage(null);\n    \n    // Scroll to bottom after sending\n    scrollToBottom();\n  };\n\n  const handleReplyTo = (message) => {\n    setReplyToMessage(message);\n    // Focus on input field after selecting a message to reply to\n    document.querySelector('textarea')?.focus();\n  };\n\n  const handleCancelReply = () => {\n    setReplyToMessage(null);\n  };\n\n  // Debug: Log the event object to inspect its structure\n  console.log('EventChatPage event:', event);\n\n  // Add global styles for the chat background\n  useEffect(() => {\n    // Create a style element\n    const styleElement = document.createElement('style');\n    styleElement.innerHTML = `\n      .chat-background-container {\n        position: relative;\n        width: 100%;\n        padding-left: 0;\n        padding-right: 0;\n        margin-left: auto;\n        margin-right: auto;\n        overflow-x: hidden;\n        background-color: #ffffff;\n      }\n      \n      .chat-header-container {\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n        z-index: 40;\n        max-width: 600px;\n        width: 100%;\n        margin: 0 auto;\n        transition: all 0.3s ease;\n      }\n      \n      .chat-header-glass {\n        background-color: rgba(255, 255, 255, 0.8);\n        backdrop-filter: blur(10px);\n        border-bottom-left-radius: 16px;\n        border-bottom-right-radius: 16px;\n        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n        padding: 12px;\n        transition: all 0.3s ease;\n      }\n      \n      .chat-header-content {\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        gap: 12px;\n        width: 100%;\n        padding: 0 4px;\n      }\n      \n      .chat-input-container {\n        position: fixed;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        z-index: 40;\n        max-width: 600px;\n        width: 100%;\n        margin: 0 auto;\n        transition: all 0.3s ease;\n      }\n      \n      .chat-input-glass {\n        background-color: rgba(255, 255, 255, 0.8);\n        backdrop-filter: blur(10px);\n        border-top-left-radius: 16px;\n        border-top-right-radius: 16px;\n        box-shadow: 0 -4px 6px -1px rgba(0, 0, 0, 0.1), 0 -2px 4px -1px rgba(0, 0, 0, 0.06);\n        padding: 12px;\n        transition: all 0.3s ease;\n      }\n      \n      .chat-content-wrapper {\n        padding-left: 0;\n        padding-right: 0;\n        max-width: 100%;\n      }\n    `;\n    \n    // Append the style element to the head\n    document.head.appendChild(styleElement);\n    \n    // Clean up function\n    return () => {\n      document.head.removeChild(styleElement);\n    };\n  }, []);\n\n  // Handle scroll effect for header\n  useEffect(() => {\n    const handleScroll = () => {\n      const headerContainer = document.querySelector('.chat-header-container');\n      const headerGlass = document.querySelector('.chat-header-glass');\n      \n      if (headerContainer && headerGlass) {\n        if (window.scrollY > 10) {\n          headerGlass.style.borderBottomLeftRadius = '16px';\n          headerGlass.style.borderBottomRightRadius = '16px';\n          headerGlass.style.boxShadow = '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)';\n        } else {\n          headerGlass.style.borderBottomLeftRadius = '0';\n          headerGlass.style.borderBottomRightRadius = '0';\n          headerGlass.style.boxShadow = 'none';\n        }\n      }\n    };\n    \n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  // Find current user's member object for admin check\n  const currentUserId = user?._id;\n  const currentMember = members.find(m => (m.userId || m.id) === currentUserId);\n  const isAdmin = currentMember?.role === 'admin';\n\n  // Tag filtering state\n  const [selectedTag, setSelectedTag] = useState(null);\n  const handleTagFilter = (tag) => {\n    setSelectedTag(tag);\n    \n    // If a tag is selected, automatically add it to the input field\n    if (tag) {\n      const tagText = `#${tag.name}`;\n      const currentText = input.trim();\n      \n      // Only add the tag if it's not already at the beginning of the input\n      if (currentText === '') {\n        setInput(tagText + ' ');\n      } else if (!currentText.startsWith(tagText)) {\n        setInput(tagText + ' ' + currentText);\n      }\n      \n      // Focus the input field\n      setTimeout(() => {\n        const inputField = document.querySelector('.chat-input');\n        if (inputField) {\n          inputField.focus();\n        }\n      }, 50);\n    }\n  };\n  \n  // Clear tag filter and remove tag from input\n  const handleClearTagFilter = () => {\n    setSelectedTag(null);\n    \n    // If input starts with the tag, remove it\n    if (selectedTag) {\n      const tagText = `#${selectedTag.name}`;\n      const currentText = input.trim();\n      \n      if (currentText.startsWith(tagText)) {\n        setInput(currentText.substring(tagText.length).trim());\n      }\n    }\n  };\n  \n  // Handle inserting a tag into the chat input\n  const handleTagClick = (tag) => {\n    // Add the tag as the first word in the input\n    // If there's already text, add a space after the tag\n    const tagText = `#${tag.name}`;\n    const currentText = input.trim();\n    if (currentText === '') {\n      setInput(tagText + ' ');\n    } else if (currentText.startsWith(tagText)) {\n      // If the input already starts with this tag, don't add it again\n      return;\n    } else {\n      // Add the tag at the beginning and keep the existing text\n      setInput(tagText + ' ' + currentText);\n    }\n    \n    // Focus the input field after inserting the tag\n    setTimeout(() => {\n      const inputField = document.querySelector('.chat-input');\n      if (inputField) {\n        inputField.focus();\n      }\n    }, 50);\n  };\n\n  // Filter messages by selected tag\n  const filteredMessages = selectedTag\n    ? messages.filter(msg => msg.text && msg.text.includes(`#${selectedTag.name}`))\n    : messages;\n\n  // Tag visibility state\n  const [showTags, setShowTags] = useState(false);\n\n  // Hide tags on scroll\n  useEffect(() => {\n    const handleScroll = () => {\n      if (showTags) setShowTags(false);\n    };\n    const chatContent = chatContainerRef.current;\n    if (chatContent) {\n      chatContent.addEventListener('scroll', handleScroll);\n    }\n    return () => {\n      if (chatContent) {\n        chatContent.removeEventListener('scroll', handleScroll);\n      }\n    };\n  }, [showTags]);\n\n  // Toggle function\n  const toggleShowTags = () => setShowTags((prev) => !prev);\n\n  if (showGroupTabs) {\n    return (\n      <div className=\"flex flex-col h-screen bg-white max-w-[600px] mx-auto relative\">\n        {/* Header (back button + consistent GroupHeader) */}\n        <div className=\"sticky top-0 z-40 bg-white border-b border-gray-100 p-3 flex items-center gap-3\">\n          {/* Back Button */}\n          <button\n            className=\"p-2 rounded hover:bg-gray-100 focus:outline-none\"\n            onClick={() => setShowGroupTabs(false)}\n            aria-label=\"Back to Chat\"\n          >\n            <svg width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 19l-7-7 7-7\" />\n            </svg>\n          </button>\n          {/* Group header styled same as chat */}\n          <GroupHeader event={event} onClick={() => {}} />\n        </div>\n        {/* Tab navigation */}\n        <div className=\"flex border-b border-gray-200 bg-white sticky top-16 z-30\">\n          <button\n            className={`flex-1 py-3 text-sm font-medium focus:outline-none transition-colors ${activeTab === 'groupinfo' ? 'text-indigo-600 border-b-2 border-indigo-600' : 'text-gray-500'}`}\n            onClick={() => setActiveTab('groupinfo')}\n          >\n            Group Info\n          </button>\n          <button\n            className={`flex-1 py-3 text-sm font-medium focus:outline-none transition-colors ${activeTab === 'moments' ? 'text-indigo-600 border-b-2 border-indigo-600' : 'text-gray-500'}`}\n            onClick={() => setActiveTab('moments')}\n          >\n            Moments\n          </button>\n          <button\n            className={`flex-1 py-3 text-sm font-medium focus:outline-none transition-colors ${activeTab === 'members' ? 'text-indigo-600 border-b-2 border-indigo-600' : 'text-gray-500'}`}\n            onClick={() => setActiveTab('members')}\n          >\n            Members\n          </button>\n        </div>\n        {/* Main content area */}\n        <div className=\"flex-1 flex flex-col overflow-hidden pt-2\">\n          {activeTab === 'groupinfo' && (\n            <div className=\"flex-1 overflow-y-auto\">\n              <AboutTab event={event} />\n            </div>\n          )}\n          {activeTab === 'moments' && (\n            <div className=\"flex-1 overflow-y-auto\">\n              <MomentsTab eventId={eventId} />\n            </div>\n          )}\n          {activeTab === 'members' && (\n            <div className=\"flex-1 overflow-y-auto\">\n              <MembersTab members={members} event={event} />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col h-screen bg-white relative chat-background-container\">\n      <div className=\"max-w-[600px] mx-auto w-full flex flex-col h-full relative z-10 chat-content-wrapper\">\n        {/* Header with glassy effect */}\n        <div className=\"chat-header-container\">\n          <div className=\"chat-header-glass\">\n            <div className=\"chat-header-content\">\n              <button\n                className=\"p-1 rounded-full hover:bg-gray-100 focus:outline-none flex-shrink-0\"\n                onClick={() => navigate('/myevents')}\n                aria-label=\"Back\"\n                type=\"button\"\n              >\n                <svg width=\"28\" height=\"28\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 19l-7-7 7-7\" /></svg>\n              </button>\n              {event && (\n                <GroupHeader\n                  event={event}\n                  onClick={() => setShowGroupTabs(true)}\n                  isAdmin={isAdmin}\n                  onTagFilter={handleTagFilter}\n                  selectedTag={selectedTag}\n                  onTagClick={handleTagClick}\n                  showTags={showTags}\n                  toggleShowTags={toggleShowTags}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n        \n        {/* Add padding to account for fixed header */}\n        <div className=\"pt-16\"></div>\n        \n        {/* Chat messages with scrolling */}\n        <div className=\"chat-content-wrapper flex flex-col flex-1 overflow-hidden\" ref={chatContainerRef}>\n          <ChatMessageList\n            messages={filteredMessages}\n            currentUserId={user?._id}\n            otherPhoto={event?.thumbnail}\n            eventId={eventId}\n            onReplyTo={handleReplyTo}\n            typingUsers={typingUsers}\n            unreadCount={unreadCount}\n          />\n        </div>\n        {/* Input box - fixed to viewport bottom for consistent behavior across webviews */}\n        <div className=\"chat-input-container\">\n          <div className=\"chat-input-glass\">\n            <ChatInputBox\n              onSend={handleSend}\n              value={input}\n              onChange={setInput}\n              replyToMessage={replyToMessage}\n              onCancelReply={handleCancelReply}\n              onTyping={updateTypingStatus}\n              eventId={eventId}\n              members={members}\n            />\n          </div>\n        </div>\n        {/* Show active tag filter */}\n        {selectedTag && (\n          <div className=\"flex items-center gap-2 px-4 py-1 bg-indigo-50 border-b border-indigo-200 text-indigo-700 text-xs\">\n            <span>Filtering by tag:</span>\n            <span className=\"bg-indigo-200 text-indigo-800 px-2 py-0.5 rounded-full font-semibold\">#{selectedTag.name}</span>\n            <button onClick={handleClearTagFilter} className=\"ml-2 text-xs text-red-500 hover:underline\">Clear</button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default EventChatPage;\n","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MomentsTab from '../components/chat/MomentsTab';\nimport MembersTab from '../components/chat/MembersTab';\nimport AboutTab from '../components/chat/AboutTab';\nimport GroupHeader from '../components/chat/GroupHeader'; // Import GroupHeader component\nimport { useMyEvents } from '../hooks/queries/useMyEventsQueries';\nimport { useEventMembersQuery } from '../hooks/queries/useEventMembersQuery';\n\nconst EventGroupPage = () => {\n  const { eventId } = useParams();\n  const [activeTab, setActiveTab] = useState('groupinfo');\n  const { data: events = [] } = useMyEvents();\n  const { data: members = [] } = useEventMembersQuery(eventId);\n  const event = events.find(e => String(e._id || e.id) === String(eventId));\n\n  return (\n    <div className=\"flex flex-col h-screen bg-white max-w-[600px] mx-auto relative\">\n      {/* Header reused from GroupHeader for consistency */}\n      <div className=\"sticky top-0 z-40 bg-white border-b border-gray-100 p-3 flex items-center\">\n        <GroupHeader event={event} onClick={() => {}} />\n      </div>\n      {/* Tab navigation */}\n      <div className=\"flex border-b border-gray-200 bg-white sticky top-16 z-30\">\n        <button\n          className={`flex-1 py-3 text-sm font-medium focus:outline-none transition-colors ${activeTab === 'groupinfo' ? 'text-indigo-600 border-b-2 border-indigo-600' : 'text-gray-500'}`}\n          onClick={() => setActiveTab('groupinfo')}\n        >\n          Group Info\n        </button>\n        <button\n          className={`flex-1 py-3 text-sm font-medium focus:outline-none transition-colors ${activeTab === 'moments' ? 'text-indigo-600 border-b-2 border-indigo-600' : 'text-gray-500'}`}\n          onClick={() => setActiveTab('moments')}\n        >\n          Moments\n        </button>\n        <button\n          className={`flex-1 py-3 text-sm font-medium focus:outline-none transition-colors ${activeTab === 'members' ? 'text-indigo-600 border-b-2 border-indigo-600' : 'text-gray-500'}`}\n          onClick={() => setActiveTab('members')}\n        >\n          Members\n        </button>\n      </div>\n      {/* Main content area */}\n      <div className=\"flex-1 flex flex-col overflow-hidden pt-2\">\n        {activeTab === 'groupinfo' && (\n          <div className=\"flex-1 overflow-y-auto\">\n            <AboutTab event={event} />\n          </div>\n        )}\n        {activeTab === 'moments' && (\n          <div className=\"flex-1 overflow-y-auto\">\n            <MomentsTab eventId={eventId} />\n          </div>\n        )}\n        {activeTab === 'members' && (\n          <div className=\"flex-1 overflow-y-auto\">\n            <MembersTab members={members} event={event} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default EventGroupPage;\n","import React from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useMyEvents } from '../hooks/queries/useMyEventsQueries';\nimport AboutTab from '../components/chat/AboutTab';\n\n/**\n * EventAboutPage Component\n * \n * Displays detailed information about an event using the AboutTab component\n */\nconst EventAboutPage = () => {\n  const { eventId } = useParams();\n  const navigate = useNavigate();\n  \n  // Fetch user's events and find the current event\n  const { data: events = [], isLoading, isError } = useMyEvents();\n  \n  // Find event by either _id or id\n  const event = events.find(e => {\n    const eventIdField = e._id || e.id;\n    return String(eventIdField) === String(eventId);\n  });\n  \n  // Loading state\n  if (isLoading) {\n    return (\n      <div className=\"flex flex-col min-h-screen bg-white max-w-[600px] mx-auto relative\">\n        <div className=\"p-4 text-center text-gray-500\">Loading event details...</div>\n      </div>\n    );\n  }\n  \n  // Error state\n  if (isError || !event) {\n    return (\n      <div className=\"flex flex-col min-h-screen bg-white max-w-[600px] mx-auto relative\">\n        <div className=\"p-4 text-center text-red-500\">Failed to load event details.</div>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"flex flex-col min-h-screen bg-white max-w-[600px] mx-auto relative\">\n      {/* Header */}\n      <div className=\"sticky top-0 z-40 bg-white border-b border-gray-100 p-3 flex items-center gap-3\">\n        <button\n          className=\"p-1 rounded-full hover:bg-gray-100 focus:outline-none\"\n          onClick={() => navigate(-1)}\n          aria-label=\"Back\"\n          type=\"button\"\n        >\n          <svg width=\"28\" height=\"28\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 19l-7-7 7-7\" />\n          </svg>\n        </button>\n        <div className=\"flex items-center gap-3\">\n          <img\n            src={event.thumbnail || event.imageUrl || event.event_image || \"/default-group.png\"}\n            alt={event.title || event.eventName || \"Event\"}\n            className=\"w-10 h-10 rounded-full object-cover border border-gray-200 bg-gray-50\"\n          />\n          <span className=\"font-semibold text-base text-primary truncate\">\n            {event.title || event.eventName || \"Event\"}\n          </span>\n        </div>\n      </div>\n      \n      {/* Main content */}\n      <div className=\"flex-1 overflow-y-auto\">\n        <AboutTab event={event} />\n      </div>\n    </div>\n  );\n};\n\nexport default EventAboutPage;\n","import axios from 'axios';\n\n// Configure axios to connect directly to the event service\n// Note: This bypasses the API gateway\nconst eventServiceClient = axios.create({\n  baseURL: process.env.REACT_APP_EVENT_SERVICE_URL || 'http://localhost:3002', // Event service runs on port 3002\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Intercept requests to add auth token\neventServiceClient.interceptors.request.use(\n  config => {\n    // Extract token from 'auth-storage' in localStorage\n    const authStorage = localStorage.getItem('auth-storage');\n    let token = null;\n    if (authStorage) {\n      try {\n        const parsed = JSON.parse(authStorage);\n        token = parsed.state?.token;\n      } catch (e) {\n        // Optionally log error\n      }\n    }\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\nconst myEventsService = {\n  /**\n   * Get all events for the current user (both hosting and attending)\n   * @param {string} userId - The user's ID\n   * @returns {Promise} - Promise resolving to an array of events\n   */\n  getMyEvents: async (userId) => {\n    try {\n      const response = await eventServiceClient.get(`/events/myevents/${userId}`);\n      console.log('My events response:', response.data);\n      return response.data.data;\n    } catch (error) {\n      console.error('Error fetching my events:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Get events the user is attending but not hosting\n   * @param {string} userId - The user's ID\n   * @returns {Promise} - Promise resolving to an array of events\n   */\n  getEventsAttending: async (userId) => {\n    try {\n      const response = await eventServiceClient.get(`/events/attending/${userId}`);\n      console.log('Events attending response:', response.data);\n      return response.data.data;\n    } catch (error) {\n      console.error('Error fetching events attending:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Get events the user is hosting\n   * @param {string} userId - The user's ID\n   * @returns {Promise} - Promise resolving to an array of events\n   */\n  getHostedEvents: async (userId) => {\n    try {\n      const response = await eventServiceClient.get(`/events/host/${userId}`);\n      console.log('Hosted events response:', response.data);\n      return response.data.data;\n    } catch (error) {\n      console.error('Error fetching hosted events:', error);\n      throw error;\n    }\n  },\n  \n  /**\n   * Get pending join requests for a specific event\n   * @param {string} eventId - The event's ID\n   * @returns {Promise} - Promise resolving to an array of pending requests\n   */\n  getEventPendingRequests: async (eventId) => {\n    try {\n      const response = await eventServiceClient.get(`/events/${eventId}/requests/pending`);\n      console.log('Event pending requests response:', response.data);\n      return response.data.data;\n    } catch (error) {\n      console.error('Error fetching event pending requests:', error);\n      throw error;\n    }\n  },\n  \n  /**\n   * Get all pending join requests for events hosted by the current user\n   * @param {string} hostId - The host's ID (optional, defaults to current user)\n   * @returns {Promise} - Promise resolving to an array of events with pending requests\n   */\n  getPendingJoinRequests: async (hostId) => {\n    try {\n      const userId = hostId || localStorage.getItem('userId');\n      const response = await eventServiceClient.get(`/events/requests/pending/${userId}`);\n      console.log('All pending join requests response:', response.data);\n      return response.data.data;\n    } catch (error) {\n      console.error('Error fetching all pending join requests:', error);\n      throw error;\n    }\n  },\n  \n  /**\n   * Approve a join request\n   * @param {string} eventId - The event's ID\n   * @param {string} requestId - The request's ID\n   * @returns {Promise} - Promise resolving to the updated event\n   */\n  approveJoinRequest: async (eventId, requestId) => {\n    try {\n      const response = await eventServiceClient.post(`/events/${eventId}/requests/${requestId}/approve`);\n      console.log('Approve join request response:', response.data);\n      return response.data.data;\n    } catch (error) {\n      console.error('Error approving join request:', error);\n      throw error;\n    }\n  },\n  \n  /**\n   * Reject a join request\n   * @param {string} eventId - The event's ID\n   * @param {string} requestId - The request's ID\n   * @returns {Promise} - Promise resolving to the updated event\n   */\n  rejectJoinRequest: async (eventId, requestId) => {\n    try {\n      const response = await eventServiceClient.post(`/events/${eventId}/requests/${requestId}/reject`);\n      console.log('Reject join request response:', response.data);\n      return response.data.data;\n    } catch (error) {\n      console.error('Error rejecting join request:', error);\n      throw error;\n    }\n  },\n  \n  /**\n   * Remove an attendee from an event\n   * @param {string} eventId - The event's ID\n   * @param {string} userId - The user's ID to remove\n   * @returns {Promise} - Promise resolving to the updated event\n   */\n  removeAttendee: async (eventId, userId) => {\n    try {\n      const response = await eventServiceClient.delete(`/events/${eventId}/attendees`, {\n        data: { userId }\n      });\n      console.log('Remove attendee response:', response.data);\n      return response.data.data;\n    } catch (error) {\n      console.error('Error removing attendee:', error);\n      throw error;\n    }\n  },\n};\n\nexport default myEventsService;\n","import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport myEventsService from '../../services/myEventsService';\nimport { useAuthStore } from '../../../stores/authStore';\n\n/**\n * Hook to fetch all events related to the current user (both hosting and attending)\n * @returns {Object} Query result with data, isLoading, and error\n */\nexport const useMyEvents = () => {\n  const { user } = useAuthStore();\n  const userId = user?._id;\n\n  return useQuery({\n    queryKey: ['myEvents', userId],\n    queryFn: () => myEventsService.getMyEvents(userId),\n    enabled: !!userId,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n    refetchOnWindowFocus: false,\n  });\n};\n\n/**\n * Hook to fetch events the user is attending but not hosting\n * @returns {Object} Query result with data, isLoading, and error\n */\nexport const useEventsAttending = () => {\n  const { user } = useAuthStore();\n  const userId = user?._id;\n\n  return useQuery({\n    queryKey: ['eventsAttending', userId],\n    queryFn: () => myEventsService.getEventsAttending(userId),\n    enabled: !!userId,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n    refetchOnWindowFocus: false,\n  });\n};\n\n/**\n * Hook to fetch events the user is hosting\n * @returns {Object} Query result with data, isLoading, and error\n */\nexport const useHostedEvents = () => {\n  const { user } = useAuthStore();\n  const userId = user?._id;\n\n  return useQuery({\n    queryKey: ['hostedEvents', userId],\n    queryFn: () => myEventsService.getHostedEvents(userId),\n    enabled: !!userId,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n    refetchOnWindowFocus: false,\n  });\n};\n\n/**\n * Hook to fetch pending join requests for a specific event\n * @param {string} eventId - The event's ID\n * @returns {Object} Query result with data, isLoading, and error\n */\nexport const useEventPendingRequests = (eventId) => {\n  return useQuery({\n    queryKey: ['eventPendingRequests', eventId],\n    queryFn: () => myEventsService.getEventPendingRequests(eventId),\n    enabled: !!eventId,\n    staleTime: 1 * 60 * 1000, // 1 minute (shorter stale time for requests)\n    refetchOnWindowFocus: true,\n  });\n};\n\n/**\n * Hook to fetch all pending join requests for events hosted by the current user\n * @returns {Object} Query result with data, isLoading, and error\n */\nexport const usePendingJoinRequests = () => {\n  const { user } = useAuthStore();\n  const userId = user?._id;\n\n  return useQuery({\n    queryKey: ['pendingJoinRequests', userId],\n    queryFn: () => myEventsService.getPendingJoinRequests(userId),\n    enabled: !!userId,\n    staleTime: 1 * 60 * 1000, // 1 minute\n    refetchOnWindowFocus: true,\n  });\n};\n\n/**\n * Hook to approve a join request\n * @returns {Object} Mutation result with mutate function\n */\nexport const useApproveJoinRequest = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: ({ eventId, requestId }) => myEventsService.approveJoinRequest(eventId, requestId),\n    onSuccess: (data, variables) => {\n      // Invalidate relevant queries\n      queryClient.invalidateQueries({ queryKey: ['eventPendingRequests', variables.eventId] });\n      queryClient.invalidateQueries({ queryKey: ['pendingJoinRequests'] });\n      queryClient.invalidateQueries({ queryKey: ['hostedEvents'] });\n      queryClient.invalidateQueries({ queryKey: ['myEvents'] });\n    },\n  });\n};\n\n/**\n * Hook to reject a join request\n * @returns {Object} Mutation result with mutate function\n */\nexport const useRejectJoinRequest = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: ({ eventId, requestId }) => myEventsService.rejectJoinRequest(eventId, requestId),\n    onSuccess: (data, variables) => {\n      // Invalidate relevant queries\n      queryClient.invalidateQueries({ queryKey: ['eventPendingRequests', variables.eventId] });\n      queryClient.invalidateQueries({ queryKey: ['pendingJoinRequests'] });\n    },\n  });\n};\n\n/**\n * Hook to remove an attendee from an event\n * @returns {Object} Mutation result with mutate function\n */\nexport const useRemoveAttendee = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: ({ eventId, userId }) => myEventsService.removeAttendee(eventId, userId),\n    onSuccess: (data, variables) => {\n      // Invalidate relevant queries\n      queryClient.invalidateQueries({ queryKey: ['myEvents'] });\n      queryClient.invalidateQueries({ queryKey: ['eventDetails', variables.eventId] });\n      queryClient.invalidateQueries({ queryKey: ['eventsAttending'] });\n      queryClient.invalidateQueries({ queryKey: ['hostedEvents'] });\n    },\n  });\n};\n","import React from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useEventPendingRequests, useApproveJoinRequest, useRejectJoinRequest, useMyEvents } from '../hooks/queries/useMyEventsQueries';\r\nimport { useAuthStore } from '../../stores/authStore';\r\nimport GroupHeader from '../components/chat/GroupHeader';\r\n\r\n// Get initials from name or user ID for avatar fallback\r\nconst getInitials = (name, userId) => {\r\n  // If name is available, use it for initials\r\n  if (name) {\r\n    const nameParts = name.split(' ');\r\n    if (nameParts.length >= 2) {\r\n      return `${nameParts[0].charAt(0)}${nameParts[nameParts.length - 1].charAt(0)}`.toUpperCase();\r\n    }\r\n    return name.substring(0, 2).toUpperCase();\r\n  }\r\n  \r\n  // Fallback to user ID if name is not available\r\n  if (!userId) return '?';\r\n  return userId.substring(0, 2).toUpperCase();\r\n};\r\n\r\n// Join Request Card Component\r\nconst JoinRequestCard = ({ request, onApprove, onReject, isProcessing }) => {\r\n  const navigate = useNavigate();\r\n  \r\n  // Handle profile click\r\n  const handleProfileClick = () => {\r\n    if (!request || !request.userId) return;\r\n    navigate(`/profile/${request.userId}`);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"flex items-center justify-between p-4 border-b border-gray-100\">\r\n      <div className=\"flex items-center gap-3 cursor-pointer\" onClick={handleProfileClick}>\r\n        <div className=\"w-10 h-10 rounded-full flex items-center justify-center bg-indigo-100 text-indigo-800 text-sm font-bold border border-gray-200\">\r\n          {getInitials(request.name, request.userId)}\r\n        </div>\r\n        <div>\r\n          <div className=\"font-medium hover:text-indigo-600 transition-colors\">\r\n            {request.name || `User ${request.userId.substring(0, 8)}...`}\r\n          </div>\r\n          <div className=\"text-sm text-gray-500\">\r\n            Requested {new Date(request.createdAt).toLocaleString()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex gap-2\">\r\n        <button\r\n          onClick={onApprove}\r\n          disabled={isProcessing}\r\n          className=\"p-2 rounded-full bg-green-50 text-green-600 hover:bg-green-100 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          aria-label=\"Approve request\"\r\n        >\r\n          <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n            <polyline points=\"20 6 9 17 4 12\"></polyline>\r\n          </svg>\r\n        </button>\r\n        <button\r\n          onClick={onReject}\r\n          disabled={isProcessing}\r\n          className=\"p-2 rounded-full bg-red-50 text-red-600 hover:bg-red-100 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          aria-label=\"Reject request\"\r\n        >\r\n          <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * JoinRequestsPage displays and manages pending join requests for an event\r\n * Only the host can access this page\r\n */\r\nconst JoinRequestsPage = () => {\r\n  const { eventId } = useParams();\r\n  const navigate = useNavigate();\r\n  const user = useAuthStore(state => state.user);\r\n  \r\n  // Log component lifecycle\r\n  React.useEffect(() => {\r\n    console.log('JoinRequestsPage mounted for event:', eventId);\r\n    return () => console.log('JoinRequestsPage unmounted');\r\n  }, [eventId]);\r\n  \r\n  // Get event data for the GroupHeader\r\n  const { data: events = [] } = useMyEvents();\r\n  const event = events.find(e => String(e._id || e.id) === String(eventId));\r\n  \r\n  // Get pending requests directly without host check\r\n  const { \r\n    data: requests = [], \r\n    isLoading: requestsLoading, \r\n    error \r\n  } = useEventPendingRequests(eventId, {\r\n    enabled: !!eventId && !!user\r\n  });\r\n  \r\n  // Mutation hooks for approving/rejecting requests\r\n  const approveRequest = useApproveJoinRequest();\r\n  const rejectRequest = useRejectJoinRequest();\r\n  \r\n  // Handlers for approving/rejecting requests\r\n  const handleApprove = (requestId) => {\r\n    approveRequest.mutate({ eventId, requestId });\r\n  };\r\n  \r\n  const handleReject = (requestId) => {\r\n    rejectRequest.mutate({ eventId, requestId });\r\n  };\r\n  \r\n  // Handle back button\r\n  const handleBack = () => {\r\n    // Use browser history to go back instead of hardcoded navigation\r\n    // This will ensure we don't create circular navigation\r\n    navigate(-1);\r\n  };\r\n  \r\n  // Loading state\r\n  if (requestsLoading) {\r\n    return (\r\n      <div className=\"flex flex-col h-screen\">\r\n        <div className=\"sticky top-0 z-10 bg-white border-b border-gray-200 px-4 py-3 flex items-center\">\r\n          <button onClick={handleBack} className=\"mr-4\">\r\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n              <polyline points=\"15 18 9 12 15 6\"></polyline>\r\n            </svg>\r\n          </button>\r\n          <h1 className=\"text-lg font-semibold\">Loading...</h1>\r\n        </div>\r\n        <div className=\"flex-1 flex items-center justify-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  // Error state\r\n  if (error) {\r\n    return (\r\n      <div className=\"flex flex-col h-screen\">\r\n        <div className=\"sticky top-0 z-10 bg-white border-b border-gray-200 px-4 py-3 flex items-center\">\r\n          <button onClick={handleBack} className=\"mr-4\">\r\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n              <polyline points=\"15 18 9 12 15 6\"></polyline>\r\n            </svg>\r\n          </button>\r\n          <h1 className=\"text-lg font-semibold\">Join Requests</h1>\r\n        </div>\r\n        <div className=\"flex-1 flex items-center justify-center text-red-500\">\r\n          Error loading requests. Please try again.\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      {/* Header with GroupHeader component */}\r\n      <div className=\"sticky top-0 z-10 bg-white border-b border-gray-200 px-4 py-3 flex items-center\">\r\n        <button onClick={handleBack} className=\"mr-4\">\r\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n            <polyline points=\"15 18 9 12 15 6\"></polyline>\r\n          </svg>\r\n        </button>\r\n        {event ? (\r\n          <div className=\"flex-1 flex items-center justify-between\">\r\n            <GroupHeader event={event} onClick={() => navigate(`/myevents/${eventId}`)} />\r\n            {requests.length > 0 && (\r\n              <span className=\"ml-2 bg-indigo-100 text-indigo-800 text-xs font-medium px-2.5 py-0.5 rounded-full\">\r\n                {requests.length}\r\n              </span>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <h1 className=\"text-lg font-semibold\">Join Requests</h1>\r\n        )}\r\n      </div>\r\n      \r\n      {/* Content - no padding/margin at top */}\r\n      <div className=\"flex-1 overflow-y-auto\">\r\n        {requests.length === 0 ? (\r\n          <div className=\"flex flex-col items-center justify-center h-full text-gray-500\">\r\n            <svg width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"mb-4 text-gray-300\">\r\n              <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path>\r\n              <circle cx=\"8.5\" cy=\"7\" r=\"4\"></circle>\r\n              <line x1=\"20\" y1=\"8\" x2=\"20\" y2=\"14\"></line>\r\n              <line x1=\"23\" y1=\"11\" x2=\"17\" y2=\"11\"></line>\r\n            </svg>\r\n            <p>No pending join requests</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"divide-y divide-gray-100 bg-white\">\r\n            {requests.map((request) => (\r\n              <JoinRequestCard\r\n                key={request._id}\r\n                request={request}\r\n                onApprove={() => handleApprove(request._id)}\r\n                onReject={() => handleReject(request._id)}\r\n                isProcessing={approveRequest.isLoading || rejectRequest.isLoading}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JoinRequestsPage;\r\n"],"names":["axios","defaults","baseURL","process","withCredentials","initializeAuth","ReactDOM","document","getElementById","render","_jsx","React","children","QueryClientProvider","client","queryClient","BrowserRouter","App","_ref","_event$host","members","event","user","useAuthStore","state","navigate","useNavigate","useQueryClient","processingMember","setProcessingMember","useState","localMembers","setLocalMembers","showConfirmation","setShowConfirmation","memberToRemove","setMemberToRemove","memberNameRef","useRef","mutate","removeAttendee","isLoading","isRemoving","useRemoveAttendee","isHost","host","userId","_id","data","requests","useEventPendingRequests","enabled","pendingRequestsCount","length","eventId","id","getInitials","fullName","names","split","concat","charAt","toUpperCase","getIdInitials","substring","_jsxs","className","Link","to","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cx","cy","r","x1","y1","x2","y2","points","map","attendee","idx","joinDate","joinedAt","Date","toLocaleDateString","onClick","handleProfileClick","avatar","src","alt","name","e","showRemoveConfirmation","memberName","stopPropagation","current","disabled","xmlns","role","cancelRemoveMember","handleRemoveMember","onSuccess","prevMembers","filter","member","invalidateQueries","queryKey","onError","error","useEventMembersQuery","useQuery","queryFn","async","get","getEventMembers","API_URL","useChatPreviews","eventIds","arguments","undefined","chatPreviews","sort","join","axiosConfig","timeout","headers","previewPromises","url","Promise","all","reduce","acc","res","index","previewData","lastMessage","unreadCount","lastMessageTime","lastSenderName","localStorage","setItem","JSON","stringify","timestamp","toISOString","cached","getItem","parse","Boolean","staleTime","refetchInterval","retry","retryDelay","attemptIndex","Math","min","useChatPreview","preview","eventServiceClient","create","useEventMomentsQuery","getEventMoments","useUploadEventMoment","useMutation","mutationFn","imageFile","Error","formData","FormData","append","config","post","uploadEventMoment","variables","interceptors","request","use","authStorage","token","_parsed$state","reject","photos","isError","refetch","isUploading","setIsUploading","uploadError","setUploadError","uploadSuccess","setUploadSuccess","localPhotos","setLocalPhotos","fileInputRef","uploadMoment","loading","handleUploadClick","_fileInputRef$current","click","type","ref","onChange","files","Array","from","target","uploadPromises","file","resolve","startsWith","size","prev","imageUrl","allSettled","then","results","successful","status","failed","setTimeout","errors","reason","message","value","accept","multiple","isAdmin","onTagFilter","selectedTag","onTagClick","showTags","toggleShowTags","tags","setTags","newTag","setNewTag","editingTagId","setEditingTagId","editingTagName","setEditingTagName","setError","showTagDropdown","setShowTagDropdown","tagLoading","setTagLoading","setIsHost","currentUser","useEffect","toString","fetchTags","handleClickOutside","closest","addEventListener","removeEventListener","err","eventTitle","title","eventName","eventImage","event_image","thumbnail","displayTitle","v","maxLength","placeholder","style","maxWidth","trim","tagNameLowercase","toLowerCase","_err$response","_err$response$data","response","opacity","tag","_Fragment","put","tagId","_err$response2","_err$response2$data","handleEditTag","delete","handleDeleteTag","minWidth","display","alignItems","gap","WebkitOverflowScrolling","isSelected","TAG_COLORS","_event$date","_event$date4","_event$place6","_event$place7","_event$location5","_hostName$","isDeleting","setIsDeleting","copySuccess","setCopySuccess","attendeeCount","isArray","attendees","mapsUrl","getGoogleMapsUrl","_event$place","_event$place$coordina","_event$place2","_event$place2$coordin","_event$place3","_event$location","_event$location2","place","coordinates","latitude","longitude","location","city","encodeURIComponent","formatDate","date","day","month","year","_unused","organizer","hostName","username","email","hostAvatar","image","hostRole","tagList","isClosed","price","fee","rsvp","rsvpDeadline","eventType","endDate","end","showEditModal","setShowEditModal","useLocalState","editData","setEditData","editLoading","setEditLoading","editError","setEditError","handleEditChange","_objectSpread","showAnnouncementEdit","setShowAnnouncementEdit","announcementDraft","setAnnouncementDraft","announcement","announcementLoading","setAnnouncementLoading","announcementError","setAnnouncementError","rows","FaInfoCircle","description","FaCalendarAlt","start","time","FaClock","includes","toLocaleTimeString","hour","minute","_unused2","formatTime","FaUsers","capacity","FaTag","FaRupeeSign","FaCheckCircle","FaTimesCircle","FaMapMarkerAlt","address","href","rel","FaExternalLinkAlt","handleCopyAddress","_event$place4","_event$location3","navigator","clipboard","writeText","tabIndex","onKeyDown","key","verified","bio","handleEditClick","_event$date2","_event$date3","_event$place5","_event$location4","FaTrash","payload","t","window","reload","isPending","showUnreadBadge","formattedDate","dateObj","getDate","padStart","toLocaleString","getFullYear","displayMessage","useMemo","messageText","text","truncateMessage","isPastEvent","isPast","handleClick","copied","setCopied","showFeedbackModal","setShowFeedbackModal","hostRating","setHostRating","eventRating","setEventRating","feedbackComment","setFeedbackComment","isSubmitting","setIsSubmitting","eventUrl","origin","StarRating","_ref2","rating","setRating","star","FaStar","FaRegStar","onKeyPress","locationWithAccess","accessType","access","ts","ticketCode","catch","handleCopyLink","FaCheck","FaShare","FaComment","onSubmit","preventDefault","feedbackData","comment","eventService","submitFeedback","alert","handleCloseFeedback","MyEventsPage","_location$state","events","useMyEvents","useLocation","activeTab","setActiveTab","_location$state2","history","replaceState","searchQuery","setSearchQuery","isEventPast","filteredEvents","matchesTab","matchesSearch","socket","io","reconnectionAttempts","reconnectionDelay","transports","forceNew","on","refetchQueries","exact","intervalId","setInterval","clearInterval","force","testTimer","emit","test","clearTimeout","disconnect","FaSearch","MyEventTicketCard","expanded","setExpanded","trimmedBio","slice","isLong","displayBio","max","clampChars","tabs","tab","label","announcements","a","content","getEvents","_useAuthStore$getStat","getState","useEventBioQuery","getEventBio","getEventTabs","useEventAnnouncementsQuery","getEventAnnouncements","set","setLoading","EventPage","useParams","isEventsLoading","isEventsError","find","eventIdField","String","useEventsStore","isBioLoading","isTabsLoading","isMembersLoading","isAnnouncementsLoading","currentUserId","_state$user","currentMember","m","EventBio","EventTabs","EventTagManager","MembersTab","AnnouncementTab","AboutTab","NAME_COLORS","getColorForName","identifier","hash","i","charCodeAt","abs","forwardRef","isOwn","userPhoto","onDelete","onReplyTo","onResend","senderIdentifier","senderId","sender","senderName","senderColorClass","pressTimer","setPressTimer","touchRef","showDeleteConfirm","setShowDeleteConfirm","highlightTags","tagOrMentionOrUrlRegex","parts","match","lastIndex","exec","push","order","replyTo","minHeight","originalMessageId","messageId","onContextMenu","isDeleted","deleted","onTouchStart","handleTouchStart","onTouchEnd","handleTouchEnd","el","verticalAlign","pending","typingUsers","otherTypingUsers","cacheKey","useChatSocket","messages","setMessages","setTypingUsers","socketRef","isTypingRef","normalizedMsgs","msg","_senderId","sessionStorage","users","normalizedMsg","some","existingMsg","createdAt","now","pendingIndex","findIndex","storedMsgRaw","storedMsg","clientMsgId","updated","_ref3","off","sendMessage","useCallback","replyToMessage","uuidv4","tempMessage","senderAvatar","deleteMessage","debouncedFnRef","debouncedFn","debounce","userName","typingRef","isTyping","_debouncedFnRef$curre","cancel","debouncedStopTyping","updateTypingStatus","_debouncedFnRef$curre2","markMessagesAsRead","readBy","read","readAt","propMessages","listRef","isAtBottom","setIsAtBottom","messageRefs","prevMessageCount","isFirstRender","hasScrolledToUnread","setHasScrolledToUnread","firstUnreadMessageId","setFirstUnreadMessageId","showUnreadDivider","setShowUnreadDivider","newMessagesArrived","scrollToBottom","scrollTop","scrollHeight","useLayoutEffect","unreadMessages","b","firstUnread","scrollToUnreadMessage","attempt","scrollIntoView","behavior","block","classList","add","remove","pow","viewport","visualViewport","onVVResize","formatMessageDate","dateString","messageDate","today","yesterday","setDate","todayDate","getMonth","yesterdayDate","messageDateOnly","getTime","messageGroups","groups","currentDate","currentGroup","forEach","messageDay","groupMessagesByDate","handleResend","failedMessage","onScroll","handleScroll","scrollElement","documentElement","clientHeight","scrollPaddingBottom","group","groupIndex","ChatMessageBubble","photo","messageElement","scrollToMessage","scrollTo","top","TypingIndicator","onSend","onCancelReply","onTyping","inputRef","showMentionDropdown","setShowMentionDropdown","setMentionQuery","mentionCandidates","setMentionCandidates","showTagAutocomplete","setShowTagAutocomplete","setTagQuery","tagCandidates","setTagCandidates","adjustTextareaHeight","textarea","newHeight","handleSend","handleTagAutocomplete","tagText","selectionStart","selectionEnd","before","after","newBefore","replace","insert","focus","handleTagInsert","val","cursorPos","textUpToCursor","mentionMatch","queryText","filtered","tagMatch","query","onBlur","shiftKey","beforeCursor","afterCursor","lines","lineHeight","overflow","placeItems","onMouseDown","mentionText","handleMentionSelect","EventChatPage","viewportMeta","querySelector","createElement","head","appendChild","showGroupTabs","setShowGroupTabs","chatContainerRef","input","setInput","setReplyToMessage","handleFocus","styleElement","innerHTML","removeChild","headerContainer","headerGlass","scrollY","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","setSelectedTag","filteredMessages","setShowTags","chatContent","GroupHeader","MomentsTab","currentText","inputField","ChatMessageList","otherPhoto","_document$querySelect","ChatInputBox","textStr","handleCancelReply","handleClearTagFilter","EventGroupPage","EventAboutPage","getMyEvents","getEventsAttending","getHostedEvents","getEventPendingRequests","getPendingJoinRequests","hostId","approveJoinRequest","requestId","rejectJoinRequest","myEventsService","refetchOnWindowFocus","useApproveJoinRequest","useRejectJoinRequest","nameParts","JoinRequestCard","onApprove","onReject","isProcessing","JoinRequestsPage","requestsLoading","approveRequest","rejectRequest","handleBack","handleApprove","handleReject"],"sourceRoot":""}