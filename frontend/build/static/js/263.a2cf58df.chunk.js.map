{"version":3,"file":"static/js/263.a2cf58df.chunk.js","mappings":"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","sources":["pages/info/ContactPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Header from '../../components/layout/Header';\nimport '../../styles/InfoPages.css';\n\n// Following Single Responsibility Principle - ContactPage only handles contact form and display\nconst ContactPage = () => {\n  // Form state\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    subject: '',\n    message: ''\n  });\n  \n  // Success state for form submission\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  \n  // Handle input changes\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  \n  // Handle form submission\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // In a real implementation, this would send the form data to a backend API\n    console.log('Form submitted:', formData);\n    // Show success message\n    setIsSubmitted(true);\n    // Reset form\n    setFormData({\n      name: '',\n      email: '',\n      subject: '',\n      message: ''\n    });\n  };\n  \n  return (\n    <div className=\"info-page-container\">\n      <Header />\n      <div className=\"info-content-wrapper\">\n        <div className=\"info-content\">\n          <h1>Contact Us</h1>\n          \n          <section className=\"info-section\">\n            <p className=\"intro-text\">\n              Have questions, feedback, or need assistance? We're here to help!\n              Fill out the form below, and our team will get back to you as soon as possible.\n            </p>\n          </section>\n          \n          <section className=\"info-section\">\n            <div className=\"contact-container\">\n              <div className=\"contact-info\">\n                <h2>Get in Touch</h2>\n                <div className=\"contact-method\">\n                  <h3>Email</h3>\n                  <p>support@tymout.com</p>\n                </div>\n                <div className=\"contact-method\">\n                  <h3>Office</h3>\n                  <p>123 Experience Street<br />Bangalore, Karnataka 560001<br />India</p>\n                </div>\n                <div className=\"contact-method\">\n                  <h3>Support Hours</h3>\n                  <p>Monday - Friday: 9:00 AM - 6:00 PM IST</p>\n                </div>\n              </div>\n              \n              <div className=\"contact-form\">\n                {isSubmitted ? (\n                  <div className=\"success-message\">\n                    <h2>Thank You!</h2>\n                    <p>Your message has been sent successfully. We'll get back to you soon.</p>\n                    <button \n                      className=\"primary-button mt-4\"\n                      onClick={() => setIsSubmitted(false)}\n                    >\n                      Send Another Message\n                    </button>\n                  </div>\n                ) : (\n                  <form onSubmit={handleSubmit}>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"name\">Name</label>\n                      <input\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"name\"\n                        value={formData.name}\n                        onChange={handleChange}\n                        required\n                      />\n                    </div>\n                    \n                    <div className=\"form-group\">\n                      <label htmlFor=\"email\">Email</label>\n                      <input\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        value={formData.email}\n                        onChange={handleChange}\n                        required\n                      />\n                    </div>\n                    \n                    <div className=\"form-group\">\n                      <label htmlFor=\"subject\">Subject</label>\n                      <input\n                        type=\"text\"\n                        id=\"subject\"\n                        name=\"subject\"\n                        value={formData.subject}\n                        onChange={handleChange}\n                        required\n                      />\n                    </div>\n                    \n                    <div className=\"form-group\">\n                      <label htmlFor=\"message\">Message</label>\n                      <textarea\n                        id=\"message\"\n                        name=\"message\"\n                        rows=\"5\"\n                        value={formData.message}\n                        onChange={handleChange}\n                        required\n                      ></textarea>\n                    </div>\n                    \n                    <button type=\"submit\" className=\"primary-button\">\n                      Send Message\n                    </button>\n                  </form>\n                )}\n              </div>\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactPage;\n"],"names":["ContactPage","formData","setFormData","useState","name","email","subject","message","isSubmitted","setIsSubmitted","handleChange","e","value","target","prevState","_objectSpread","_jsxs","className","children","_jsx","Header","onClick","onSubmit","preventDefault","htmlFor","type","id","onChange","required","rows"],"sourceRoot":""}