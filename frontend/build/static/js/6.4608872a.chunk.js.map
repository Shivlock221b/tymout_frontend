{"version":3,"file":"static/js/6.4608872a.chunk.js","mappings":"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","sources":["stores/uiStore.js","hooks/useEventCard.js","components/common/EventCard.js"],"sourcesContent":["import { create } from 'zustand';\nimport { createStore } from './middleware';\n\n/**\n * UI store for managing client-side UI state\n * Following Single Responsibility Principle - this store only manages UI state\n */\nexport const useUIStore = create(\n  createStore('ui', (set, get) => ({\n    // Scroll state - maps pages to element IDs\n    scrollTargets: {},\n    \n    // Modal state\n    modalState: {\n      isOpen: false,\n      modalType: null,\n      modalProps: {},\n    },\n    \n    // ScrollToElement actions - matching previous context API functionality\n    setScrollTarget: (page, elementId) => \n      set((state) => ({ \n        scrollTargets: { ...state.scrollTargets, [page]: elementId } \n      })),\n    \n    getScrollTarget: (page) => {\n      return get().scrollTargets[page];\n    },\n    \n    clearScrollTarget: (page) => \n      set((state) => {\n        const newTargets = { ...state.scrollTargets };\n        delete newTargets[page];\n        return { scrollTargets: newTargets };\n      }),\n    \n    // Original scroll functionality (deprecated - use the above methods instead)\n    scrollToElement: (id) => {\n      const element = document.getElementById(id);\n      if (element) {\n        element.scrollIntoView({ \n          behavior: 'smooth', \n          block: 'start' \n        });\n      }\n    },\n    \n    // Actions for modal state\n    openModal: (modalType, modalProps = {}) => \n      set({ modalState: { isOpen: true, modalType, modalProps } }),\n    \n    closeModal: () => set({\n      modalState: { isOpen: false, modalType: null, modalProps: {} }\n    }),\n  }))\n);\n","import { useNavigate } from 'react-router-dom';\nimport { useUIStore } from '../stores/uiStore';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { toast } from 'react-toastify';\nimport { useMemo, useCallback } from 'react';\n\n/**\n * Custom hook for event card interactions\n * \n * Follows Single Responsibility Principle by handling only event card interaction logic\n * Abstracts Zustand and React Query usage to simplify components\n * \n * @param {string} source - Source page/section where the card is displayed\n * @returns {Object} Event card interaction methods\n */\nconst useEventCard = (source = 'explore') => {\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  \n  // Get setScrollTarget with a primitive selector to prevent unnecessary re-renders\n  const setScrollTarget = useUIStore(state => state.setScrollTarget);\n  \n  /**\n   * Generate a unique element ID for a card\n   * @param {string} type - Type of card (event, table, circle)\n   * @param {string} id - Item ID\n   * @returns {string} Unique element ID\n   */\n  const getCardElementId = useCallback((type, id) => `${type}-card-${id}`, []);\n  \n  /**\n   * Get the navigation path for a card\n   * @param {string} type - Type of card\n   * @param {string} id - Item ID\n   * @returns {string} Navigation path\n   */\n  const getNavigationPath = useCallback((type, id) => {\n    // Use the pluralized format that matches the routes in App.js\n    // App.js has routes defined as /events/:id, /tables/:id, etc.\n    switch (type) {\n      case 'table':\n        return `/tables/${id}`;\n      case 'circle':\n        return `/circles/${id}`;\n      case 'event':\n      default:\n        return `/events/${id}`;\n    }\n  }, []);\n  \n  /**\n   * Handle card click to navigate to detail page\n   * @param {Object} item - Card data\n   * @param {string} type - Type of card\n   */\n  const handleCardClick = useCallback((item, type = 'event') => {\n    const cardElementId = getCardElementId(type, item.id);\n    \n    // Save the scroll target for when we come back\n    setScrollTarget(source, cardElementId);\n    \n    // Prefetch data for the event details page to ensure real-time data\n    if (type === 'event') {\n      // Prefetch the event data using React Query\n      queryClient.prefetchQuery({\n        queryKey: ['event', item.id],\n        queryFn: () => import('../services/eventService')\n          .then(module => module.default.getEventById(item.id)),\n        staleTime: 10 * 1000, // Consider data fresh for 10 seconds\n      });\n    }\n    \n    // Navigate to detail page\n    navigate(getNavigationPath(type, item.id), { \n      state: { \n        from: source,\n        cardElementId\n      } \n    });\n  }, [source, navigate, getCardElementId, getNavigationPath, setScrollTarget, queryClient]);\n  \n  /**\n   * Handle profile click to navigate to profile page\n   * @param {Object} item - Card data\n   * @param {Object} person - Person data (host, admin)\n   * @param {string} type - Type of card\n   */\n  const handleProfileClick = useCallback((item, person, type = 'event') => {\n    if (!person || !person.id) return;\n    \n    const cardElementId = getCardElementId(type, item.id);\n    \n    // Save the scroll target\n    setScrollTarget(source, cardElementId);\n    \n    // Navigate to profile page\n    navigate(`/profile/${person.id}`, { \n      state: { \n        from: source,\n        returnTo: getNavigationPath(type, item.id),\n        itemTitle: item.title,\n        cardElementId\n      } \n    });\n  }, [source, navigate, getCardElementId, getNavigationPath, setScrollTarget]);\n  \n  // Mock API function for joining events/tables/circles\n  const joinItem = useCallback(async ({ itemId, type }) => {\n    // In a real app, this would be an API call\n    await new Promise(resolve => setTimeout(resolve, 800));\n    return { success: true, itemId, type };\n  }, []);\n  \n  // Join mutation\n  const joinMutation = useMutation({\n    mutationFn: joinItem,\n    onMutate: async (variables) => {\n      // Cancel any outgoing refetches\n      await queryClient.cancelQueries({ queryKey: ['events'] });\n      await queryClient.cancelQueries({ queryKey: ['personalizedEvents'] });\n      \n      // Get previous data snapshot\n      const previousEvents = queryClient.getQueryData(['events']);\n      const previousPersonalizedEvents = queryClient.getQueryData(['personalizedEvents', {}]);\n      \n      // Optimistically update the UI\n      // This would need to be customized based on your actual data structure\n      const updateQueryData = (queryKey, data) => {\n        if (!data) return;\n        \n        queryClient.setQueryData(queryKey, oldData => {\n          if (!oldData) return oldData;\n          \n          // If it's an array of events\n          if (Array.isArray(oldData)) {\n            return oldData.map(item => {\n              if (item.id === variables.itemId) {\n                return { ...item, joined: true };\n              }\n              return item;\n            });\n          }\n          \n          // If it's an object with events property\n          if (oldData.events) {\n            return {\n              ...oldData,\n              events: oldData.events.map(item => {\n                if (item.id === variables.itemId) {\n                  return { ...item, joined: true };\n                }\n                return item;\n              })\n            };\n          }\n          \n          return oldData;\n        });\n      };\n      \n      // Update the relevant queries\n      updateQueryData(['events'], previousEvents);\n      updateQueryData(['personalizedEvents', {}], previousPersonalizedEvents);\n      \n      // Return the snapshot for rollback if needed\n      return { previousEvents, previousPersonalizedEvents };\n    },\n    onError: (error, variables, context) => {\n      // Roll back to previous state on error\n      if (context?.previousEvents) {\n        queryClient.setQueryData(['events'], context.previousEvents);\n      }\n      if (context?.previousPersonalizedEvents) {\n        queryClient.setQueryData(['personalizedEvents', {}], context.previousPersonalizedEvents);\n      }\n      toast.error(`Failed to join ${variables.type}: ${error.message}`);\n    },\n    onSuccess: (data, variables) => {\n      const typeLabel = variables.type.charAt(0).toUpperCase() + variables.type.slice(1);\n      toast.success(`Successfully joined ${typeLabel}!`);\n    },\n    onSettled: () => {\n      // Refetch to ensure data consistency\n      queryClient.invalidateQueries({ queryKey: ['events'] });\n      queryClient.invalidateQueries({ queryKey: ['personalizedEvents'] });\n    }\n  });\n  \n  /**\n   * Handle primary action (join, RSVP) for a card\n   * @param {string} itemId - Item ID\n   * @param {string} type - Type of card\n   */\n  const handlePrimaryAction = useCallback((itemId, type = 'event') => {\n    joinMutation.mutate({ itemId, type });\n  }, [joinMutation]);\n\n  const memoizedValues = useMemo(() => ({\n    handleCardClick,\n    handleProfileClick,\n    handlePrimaryAction,\n    isPending: joinMutation.isPending,\n    isError: joinMutation.isError,\n    error: joinMutation.error\n  }), [handleCardClick, handleProfileClick, handlePrimaryAction, joinMutation.isPending, joinMutation.isError, joinMutation.error]);\n\n  return memoizedValues;\n};\n\nexport default useEventCard;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FaMapMarkerAlt, FaTag, FaClock, FaCalendarAlt, FaUsers, FaStar } from 'react-icons/fa';\r\nimport useEventCard from '../../hooks/useEventCard';\r\n\r\n/**\r\n * Universal EventCard Component\r\n * \r\n * A consolidated card component that handles events, tables, and circles\r\n * with support for different layouts and styling variants.\r\n * \r\n * Following SOLID principles:\r\n * - Single Responsibility: Only handles displaying cards with appropriate variations\r\n * - Open/Closed: Extensible for different card types without modifying the component\r\n * - Dependency Inversion: Uses props and hooks instead of hard-coded dependencies\r\n */\r\nconst EventCard = ({ \r\n  item, \r\n  size = 'medium', \r\n  source = 'explore', \r\n  type = 'event', \r\n  showDescription = true,\r\n  fullWidth = false,\r\n  variant = 'default',\r\n  customActions = null,\r\n  disableNavigation = false,\r\n  hideHeader = false\r\n}) => {\r\n  // Using our custom hook instead of direct navigation and state management\r\n  const { \r\n    handleCardClick, \r\n    handleProfileClick, \r\n    handlePrimaryAction,\r\n    isPending\r\n  } = useEventCard(source);\r\n  \r\n  // Handle null/undefined checks for properties\r\n  if (!item) return null;\r\n  \r\n  const {\r\n    id,\r\n    title,\r\n    description,\r\n    location,\r\n    distance,\r\n    participants,\r\n    maxParticipants,\r\n    tags,\r\n    image,\r\n    event_image, // Add event_image field\r\n    host,\r\n    date,\r\n    time,\r\n    recommendation,\r\n    memberCount,\r\n    attendees,\r\n    rating,\r\n    activity,\r\n    place // Extract place data from item\r\n  } = item;\r\n  \r\n  // Use event_image as fallback if image is not available\r\n  const displayImage = image || event_image;\r\n\r\n  // Generate a unique element ID for this card\r\n  const cardElementId = `${type}-card-${id}`;\r\n\r\n  // Handle card click using our custom hook\r\n  const onCardClick = () => {\r\n    if (disableNavigation) return;\r\n    handleCardClick(item, type);\r\n  };\r\n\r\n  // Handle click on profile section using our custom hook\r\n  const onProfileClick = (e) => {\r\n    if (disableNavigation) return;\r\n    e.stopPropagation(); // Prevent card click\r\n    const person = getPerson();\r\n    handleProfileClick(item, person, type);\r\n  };\r\n\r\n  // Action button handlers with stop propagation to prevent card navigation\r\n  const onPrimaryAction = (e) => {\r\n    if (e) e.stopPropagation();\r\n    handlePrimaryAction(id, type);\r\n  };\r\n\r\n  // Utility to truncate description to 8 words\r\n  const getShortDescription = (desc) => {\r\n    if (!desc) return '';\r\n    const words = desc.split(' ');\r\n    if (words.length <= 8) return desc;\r\n    return words.slice(0, 8).join(' ') + '...';\r\n  };\r\n\r\n  // Different class sets based on card size\r\n  const sizeClasses = {\r\n    small: {\r\n      card: fullWidth ? 'w-full' : 'max-w-xs',\r\n      image: 'h-40',\r\n      title: 'text-lg',\r\n      description: 'line-clamp-2', // Limit to 2 lines for small cards\r\n    },\r\n    medium: {\r\n      card: fullWidth ? 'w-full' : 'max-w-sm',\r\n      image: 'h-48',\r\n      title: 'text-xl',\r\n      description: 'line-clamp-3', // Limit to 3 lines for medium cards\r\n    },\r\n    large: {\r\n      card: fullWidth ? 'w-full' : 'max-w-md',\r\n      image: 'h-56',\r\n      title: 'text-2xl',\r\n      description: 'line-clamp-4', // Limit to 4 lines for large cards\r\n    }\r\n  };\r\n\r\n  const classes = sizeClasses[size] || sizeClasses.medium;\r\n\r\n  // Get the primary action text\r\n  const getPrimaryActionText = () => {\r\n    if (isPending) return 'Processing...';\r\n    switch (type) {\r\n      case 'circle':\r\n        return 'Join Circle';\r\n      case 'table':\r\n        return 'Join Table';\r\n      case 'event':\r\n      default:\r\n        return 'RSVP';\r\n    }\r\n  };\r\n\r\n  // Get the person title based on card type\r\n  const getPersonTitle = () => {\r\n    switch (type) {\r\n      case 'circle':\r\n        return 'admin';\r\n      case 'table':\r\n      case 'event':\r\n      default:\r\n        return 'host';\r\n    }\r\n  };\r\n\r\n  // Get the appropriate person object (host, admin, etc.)\r\n  const getPerson = () => {\r\n    switch (type) {\r\n      case 'circle':\r\n        return item.admin || {};\r\n      case 'table':\r\n      case 'event':\r\n      default:\r\n        return host || item.organizer || {};\r\n    }\r\n  };\r\n\r\n  // Get participant count\r\n  const getParticipantCount = () => {\r\n    switch (type) {\r\n      case 'circle':\r\n        return memberCount || 0;\r\n      case 'event':\r\n        // Handle attendees as either a number or an array\r\n        if (Array.isArray(attendees)) {\r\n          return attendees.length;\r\n        }\r\n        return attendees || participants || 0;\r\n      case 'table':\r\n      default:\r\n        return participants || 0;\r\n    }\r\n  };\r\n\r\n  // Horizontal layout for explore variant\r\n  if (variant === 'explore') {\r\n    return (\r\n      <div \r\n        id={cardElementId}\r\n        className=\"w-full bg-white overflow-hidden hover:bg-gray-50 transition-all duration-300 cursor-pointer mb-2\"\r\n        onClick={onCardClick}\r\n      >\r\n        {/* Removed separate host section from the top */}\r\n        \r\n        {/* Main Card Content - WhatsApp Chat-like Layout */}\r\n        <div className=\"flex p-4\">\r\n          {/* Left: Event Image (as profile picture) */}\r\n          <div className=\"flex-shrink-0\">\r\n            {displayImage ? (\r\n              <div className=\"relative\">\r\n                <img\r\n                  src={displayImage}\r\n                  alt={(type || \"Item\") + \" Image\"}\r\n                  className=\"w-14 h-14 rounded-full object-cover border-2 border-gray-200\"\r\n                  onError={(e) => {\r\n                    e.target.onerror = null;\r\n                    e.target.style.display = 'none';\r\n                    e.target.parentNode.classList.add('bg-indigo-100', 'rounded-full', 'w-14', 'h-14', 'flex', 'items-center', 'justify-center');\r\n                    const textElement = document.createElement('div');\r\n                    textElement.className = 'text-indigo-500 font-medium text-lg';\r\n                    textElement.innerText = title?.charAt(0) || type.charAt(0).toUpperCase();\r\n                    e.target.parentNode.appendChild(textElement);\r\n                  }}\r\n                />\r\n                {activity && (\r\n                  <div className=\"absolute -top-1 -right-1 bg-green-500 text-white text-xs px-1.5 py-0.5 rounded-full\">\r\n                    <span className=\"font-medium text-xs\">{activity}</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              // If no image is provided, show initials in a circle\r\n              <div className=\"bg-indigo-100 w-14 h-14 rounded-full flex items-center justify-center border-2 border-gray-200\">\r\n                <span className=\"text-indigo-500 font-medium text-lg\">{title?.charAt(0) || type.charAt(0).toUpperCase()}</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          {/* Right: Content Section (like a chat bubble) */}\r\n          <div className=\"ml-4 flex-1 flex flex-col\">\r\n            {/* Title Row */}\r\n            <div className=\"flex justify-between items-start mb-1\">\r\n              {/* Title (like contact name) */}\r\n              <h3 className=\"text-base font-bold line-clamp-1\">{title}</h3>\r\n            </div>\r\n            \r\n            {/* Description (like message preview) */}\r\n            {description && showDescription && (\r\n              <p className=\"text-sm text-gray-600 line-clamp-2 mb-3\">{getShortDescription(description)}</p>\r\n            )}\r\n            \r\n            {/* Hosted By section removed from here and moved to location line */}\r\n            \r\n            {/* Rating - WhatsApp style with green checkmarks */}\r\n            {rating && (\r\n              <div className=\"flex items-center mb-1.5\">\r\n                <div className=\"flex items-center\">\r\n                  <FaStar className=\"h-3.5 w-3.5 text-yellow-500 mr-1\" />\r\n                  <span className=\"text-xs text-gray-700\">{rating}</span>\r\n                  <span className=\"mx-1 text-xs text-gray-400\">•</span>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Info row with time, location, participants */}\r\n            <div className=\"flex flex-wrap items-center gap-2 mt-auto\">\r\n              {/* Time */}\r\n              {time && (\r\n                <div className=\"flex items-center text-xs text-gray-500\">\r\n                  <FaClock className=\"h-3 w-3 mr-1\" />\r\n                  <span>{time}</span>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Host and Date Info */}\r\n              <div className=\"flex w-full justify-between items-center\">\r\n                {/* Date left-aligned */}\r\n                {date && (\r\n                  <div className=\"flex items-center text-xs text-gray-500\">\r\n                    <FaCalendarAlt className=\"h-3 w-3 mr-1\" />\r\n                    <span>{date}</span>\r\n                  </div>\r\n                )}\r\n                \r\n                {/* Hosted By section - right aligned */}\r\n                {getPerson() && Object.keys(getPerson()).length > 0 && (\r\n                  <div className=\"flex items-center text-xs text-gray-500 ml-auto cursor-pointer\" onClick={onProfileClick}>\r\n                    <span className=\"text-xs text-gray-600 mr-1\">Host:</span>\r\n                    <img \r\n                      src={getPerson().image} \r\n                      alt={getPerson().name} \r\n                      className=\"w-4 h-4 rounded-full object-cover mx-1\"\r\n                      onError={(e) => {\r\n                        e.target.onerror = null;\r\n                        e.target.src = 'https://via.placeholder.com/16?text=U';\r\n                      }}\r\n                    />\r\n                    <span className=\"text-xs font-medium text-gray-700\">\r\n                      {getPerson().name} {getPerson().verified && '✓'}\r\n                    </span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              {/* Participants/Attendees with blue ticks like WhatsApp read receipts */}\r\n              {getParticipantCount() > 0 && (\r\n                <div className=\"flex items-center text-xs text-gray-500 ml-auto\">\r\n                  <FaUsers className=\"h-3 w-3 mr-1 text-blue-500\" />\r\n                  <span className=\"text-blue-500\">{getParticipantCount()}{maxParticipants ? `/${maxParticipants}` : ''}</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            {/* Tags and Location - tags on left, location on right */}\r\n            <div className=\"flex justify-between items-center mt-2\">\r\n              {/* Tags as chat labels */}\r\n              <div className=\"flex flex-wrap gap-1 items-center\">\r\n                {tags && tags.length > 0 && tags.slice(0, 2).map((tag, index) => {\r\n                  // More subtle colors for WhatsApp style\r\n                  const tagColors = [\r\n                    { bg: 'bg-blue-50', text: 'text-blue-600' },\r\n                    { bg: 'bg-green-50', text: 'text-green-600' },\r\n                    { bg: 'bg-yellow-50', text: 'text-yellow-600' },\r\n                    { bg: 'bg-purple-50', text: 'text-purple-600' },\r\n                    { bg: 'bg-pink-50', text: 'text-pink-600' },\r\n                    { bg: 'bg-indigo-50', text: 'text-indigo-600' },\r\n                  ];\r\n                  \r\n                  const colorIndex = tag.length % tagColors.length;\r\n                  const { bg, text } = tagColors[colorIndex];\r\n                  \r\n                  return (\r\n                    <span\r\n                      key={`tag-${index}`}\r\n                      className={`${bg} ${text} text-xs px-2 py-0.5 rounded-full`}\r\n                    >\r\n                      {tag}\r\n                    </span>\r\n                  );\r\n                })}\r\n                \r\n                {/* Inline +X indicator */}\r\n                {tags && tags.length > 2 && (\r\n                  <span className=\"text-gray-400 text-xs ml-1\">+{tags.length - 2}</span>\r\n                )}\r\n              </div>\r\n              \r\n              {/* Location info - right aligned */}\r\n              {(location || place?.name) && (\r\n                <div className=\"flex items-center text-xs text-gray-500 ml-auto\">\r\n                  <FaMapMarkerAlt className=\"h-3 w-3 text-gray-500 mr-1\" />\r\n                  <span>\r\n                    {place?.name ? place.name : location}\r\n                    {distance && (\r\n                      <span className=\"ml-1\">• {distance} km</span>\r\n                    )}\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            {/* +X more tags indicator is now inline with the tags */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Default vertical layout (for onlyforyou and default variants)\r\n  return (\r\n    <div \r\n      id={cardElementId}\r\n      className={`w-full ${classes.card} bg-white rounded-lg overflow-hidden hover:shadow-lg transition-shadow duration-300 cursor-pointer border border-gray-200`}\r\n      onClick={onCardClick}\r\n    >\r\n      {/* Host/Admin Information - At the very top (for default and explore variants) */}\r\n      {!hideHeader && (variant === 'default' || variant === 'explore') && getPerson() && Object.keys(getPerson()).length > 0 && (\r\n        <div \r\n          className=\"py-4 px-5 bg-gray-50 flex items-center cursor-pointer hover:bg-gray-100 transition-colors duration-200\"\r\n          onClick={onProfileClick}\r\n        >\r\n          <img \r\n            src={getPerson().image} \r\n            alt={getPerson().name} \r\n            className=\"w-10 h-10 rounded-full object-cover mr-3\"\r\n            onError={(e) => {\r\n              e.target.onerror = null;\r\n              e.target.src = 'https://via.placeholder.com/32?text=User'; // Fallback image\r\n            }}\r\n          />\r\n          <div>\r\n            <p className=\"text-sm font-medium mb-0.5\">{getPerson().name}</p>\r\n            <p className=\"text-xs text-gray-500\">{getPersonTitle()} {getPerson().verified && '✓'}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"relative\">\r\n        {/* Card Image */}\r\n        <div className={`relative ${classes.image} overflow-hidden`}>\r\n          <img \r\n            src={displayImage} \r\n            alt={title} \r\n            className=\"w-full h-full object-cover transition-transform duration-300 hover:scale-105\"\r\n            onError={(e) => {\r\n              e.target.onerror = null;\r\n              e.target.src = 'https://via.placeholder.com/400x300?text=No+Image';\r\n            }}\r\n          />\r\n          {/* Debug info */}\r\n          {process.env.NODE_ENV === 'development' && (\r\n            <div className=\"absolute top-0 left-0 bg-black/50 text-white text-xs p-1\">\r\n              Image source: {image ? 'image' : (event_image ? 'event_image' : 'none')}\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Type badge */}\r\n        <div className=\"absolute top-2 left-2 bg-indigo-600 text-white text-xs font-bold px-2 py-1 rounded-full hidden\">\r\n          {type.charAt(0).toUpperCase() + type.slice(1)}\r\n        </div>\r\n        \r\n        {/* Recommendation badge if applicable - moved below participant count */}\r\n        {recommendation && (\r\n          <div className=\"absolute top-10 right-2 bg-indigo-600 text-white text-xs font-bold px-2 py-1 rounded-full\">\r\n            {Math.round(recommendation.score * 100)}% Match\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"p-4\">\r\n        {/* Title */}\r\n        <h3 className={`${classes.title} font-bold text-gray-800 mb-2`}>{title}</h3>\r\n        \r\n        {/* Description */}\r\n        {showDescription && (\r\n          <p className={`${classes.description} text-gray-600 mb-3 overflow-hidden`}>\r\n            {getShortDescription(description)}\r\n          </p>\r\n        )}\r\n        \r\n        {/* Event Meta Information */}\r\n        <div className=\"space-y-2 text-sm text-gray-500\">\r\n          {/* Date and Time */}\r\n          {date && time && (\r\n            <div className=\"flex items-center\">\r\n              <div className=\"flex items-center mr-3\">\r\n                <FaCalendarAlt className=\"mr-1 text-indigo-600\" />\r\n                <span>{date}</span>\r\n              </div>\r\n              <div className=\"flex items-center\">\r\n                <FaClock className=\"mr-1 text-indigo-600\" />\r\n                <span>{time}</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {/* Location and Distance */}\r\n          <div className=\"flex items-center justify-between mt-2\">\r\n            <div className=\"flex items-center truncate mr-2\">\r\n              <FaMapMarkerAlt className=\"mr-1 text-indigo-600\" />\r\n              <span className=\"truncate\">{location}</span>\r\n            </div>\r\n            {distance && (\r\n              <span className=\"text-xs bg-gray-100 px-2 py-1 rounded\">\r\n                {distance} km\r\n              </span>\r\n            )}\r\n          </div>\r\n          \r\n          {/* Rating */}\r\n          {rating && (\r\n            <div className=\"flex items-center\">\r\n              <FaStar className=\"mr-1 text-yellow-500\" />\r\n              <span>{rating.toFixed(1)}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Tags */}\r\n        {tags && tags.length > 0 && (\r\n          <div className=\"mt-2 flex flex-wrap gap-2\">\r\n            {tags.slice(0, 3).map((tag, index) => (\r\n              <span \r\n                key={index} \r\n                className=\"inline-flex items-center text-xs bg-gray-100 text-gray-800 px-2 py-1 rounded-full\"\r\n              >\r\n                <FaTag className=\"mr-1 text-xs text-indigo-600\" />\r\n                {tag}\r\n              </span>\r\n            ))}\r\n            {tags.length > 3 && (\r\n              <span className=\"inline-block text-xs bg-gray-100 text-gray-800 px-2 py-1 rounded-full\">\r\n                +{tags.length - 3}\r\n              </span>\r\n            )}\r\n          </div>\r\n        )}\r\n        \r\n        {/* Host Information (only for onlyforyou variant) */}\r\n        {variant === 'onlyforyou' && getPerson() && Object.keys(getPerson()).length > 0 && (\r\n          <div className=\"mt-4 pt-3 border-t border-gray-100 flex items-center\">\r\n            <img \r\n              src={getPerson().image} \r\n              alt={getPerson().name} \r\n              className=\"w-8 h-8 rounded-full object-cover mr-2\"\r\n              onError={(e) => {\r\n                e.target.onerror = null;\r\n                e.target.src = 'https://via.placeholder.com/32?text=Host'; // Fallback image\r\n              }}\r\n            />\r\n            <div>\r\n              <p className=\"text-sm font-medium\">{getPerson().name}</p>\r\n              <p className=\"text-xs text-gray-500\">{getPersonTitle()} {getPerson().verified && '✓'}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {/* Action Buttons: For explore variant, only show centered View Details button; for others, show both */}\r\n        {variant === 'explore' ? (\r\n          <div className=\"mt-4 flex justify-center\">\r\n            <button\r\n              className=\"bg-indigo-600 hover:bg-indigo-700 text-white font-medium py-1 px-2 rounded transition-colors duration-200 mt-1 text-sm\"\r\n              onClick={onCardClick}\r\n              aria-label=\"View details\"\r\n            >\r\n              View Details\r\n            </button>\r\n          </div>\r\n        ) : (customActions || (\r\n          <div className=\"mt-4 flex space-x-2\">\r\n            <button \r\n              onClick={onPrimaryAction}\r\n              className=\"bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700 transition-colors\"\r\n            >\r\n              {getPrimaryActionText()}\r\n            </button>\r\n            <button \r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                onCardClick();\r\n              }}\r\n              className=\"border border-indigo-600 text-indigo-600 px-4 py-2 rounded-md hover:bg-indigo-50 transition-colors\"\r\n            >\r\n              View Details\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// PropTypes for type checking\r\nEventCard.propTypes = {\r\n  item: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    description: PropTypes.string,\r\n    location: PropTypes.string,\r\n    distance: PropTypes.number,\r\n    rating: PropTypes.number,\r\n    participants: PropTypes.number,\r\n    maxParticipants: PropTypes.number,\r\n    tags: PropTypes.arrayOf(PropTypes.string),\r\n    image: PropTypes.string,\r\n    event_image: PropTypes.string, // Add event_image field\r\n    host: PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      image: PropTypes.string,\r\n      verified: PropTypes.bool\r\n    }),\r\n    date: PropTypes.string,\r\n    time: PropTypes.string,\r\n    recommendation: PropTypes.shape({\r\n      score: PropTypes.number\r\n    }),\r\n    memberCount: PropTypes.number,\r\n    attendees: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.array\r\n    ]),\r\n    activity: PropTypes.string\r\n  }).isRequired,\r\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\r\n  source: PropTypes.string,\r\n  type: PropTypes.oneOf(['event', 'table', 'circle']),\r\n  showDescription: PropTypes.bool,\r\n  fullWidth: PropTypes.bool,\r\n  variant: PropTypes.oneOf(['default', 'explore', 'onlyforyou']),\r\n  customActions: PropTypes.node,\r\n  disableNavigation: PropTypes.bool,\r\n  hideHeader: PropTypes.bool\r\n};\r\n\r\nexport default EventCard;\r\n"],"names":["useUIStore","create","createStore","set","get","scrollTargets","modalState","isOpen","modalType","modalProps","setScrollTarget","page","elementId","state","_objectSpread","getScrollTarget","clearScrollTarget","newTargets","scrollToElement","id","element","document","getElementById","scrollIntoView","behavior","block","openModal","arguments","length","undefined","closeModal","source","navigate","useNavigate","queryClient","useQueryClient","getCardElementId","useCallback","type","concat","getNavigationPath","handleCardClick","item","cardElementId","prefetchQuery","queryKey","queryFn","then","module","default","getEventById","staleTime","from","handleProfileClick","person","returnTo","itemTitle","title","joinItem","async","itemId","_ref","Promise","resolve","setTimeout","success","joinMutation","useMutation","mutationFn","onMutate","cancelQueries","previousEvents","getQueryData","previousPersonalizedEvents","updateQueryData","data","setQueryData","oldData","Array","isArray","map","variables","joined","events","onError","error","context","toast","message","onSuccess","typeLabel","charAt","toUpperCase","slice","onSettled","invalidateQueries","handlePrimaryAction","mutate","useMemo","isPending","isError","size","showDescription","fullWidth","variant","customActions","disableNavigation","hideHeader","useEventCard","description","location","distance","participants","maxParticipants","tags","image","event_image","host","date","time","recommendation","memberCount","attendees","rating","activity","place","displayImage","onCardClick","onProfileClick","e","stopPropagation","getPerson","getShortDescription","desc","words","split","join","sizeClasses","small","card","medium","large","classes","getPersonTitle","admin","organizer","getParticipantCount","_jsx","className","onClick","children","_jsxs","src","alt","target","onerror","style","display","parentNode","classList","add","textElement","createElement","innerText","appendChild","FaStar","FaClock","FaCalendarAlt","Object","keys","name","verified","FaUsers","tag","index","tagColors","bg","text","colorIndex","FaMapMarkerAlt","process","Math","round","score","toFixed","FaTag","getPrimaryActionText"],"sourceRoot":""}