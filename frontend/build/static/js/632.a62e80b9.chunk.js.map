{"version":3,"file":"static/js/632.a62e80b9.chunk.js","mappings":"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","sources":["components/explore/SpotlightEvents.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n/**\n * SpotlightEvents Component\n * \n * Displays a horizontally scrollable grid of event thumbnails\n * with event names below them.\n */\nconst SpotlightEvents = ({ events }) => {\n  const navigate = useNavigate();\n\n  // Handle navigation to event details\n  const handleEventClick = (eventId) => {\n    navigate(`/events/${eventId}`);\n  };\n\n  // If no events are provided or no spotlight events are found, don't render anything\n  if (!events || !Array.isArray(events) || events.length === 0) {\n    return null;\n  }\n  \n  // For a small number of events, adjust the layout to avoid empty space\n  const useCompactLayout = events.length <= 3;\n\n  // Helper function to format date with fallbacks for different date formats\n  const formatEventDate = (event) => {\n    let dateDisplay = \"\";\n    if (event.date) {\n      const eventDate = new Date(event.date);\n      if (!isNaN(eventDate.getTime())) {\n        dateDisplay = eventDate.toLocaleDateString('en-US', { \n          month: 'short', \n          day: 'numeric' \n        });\n      }\n    } else if (event.startDate) {\n      const eventDate = new Date(event.startDate);\n      if (!isNaN(eventDate.getTime())) {\n        dateDisplay = eventDate.toLocaleDateString('en-US', { \n          month: 'short', \n          day: 'numeric' \n        });\n      }\n    }\n    return dateDisplay;\n  };\n\n  // Render a single event card\n  const renderEventCard = (event, index, groupIndex = null) => {\n    // Get event details with fallbacks for different property names\n    const eventId = event.id || event._id;\n    const title = event.title || event.eventName || \"Event\";\n    const image = event.image || event.event_image || event.thumbnail || \"/default-event.png\";\n    const dateDisplay = formatEventDate(event);\n    \n    const key = eventId || (groupIndex !== null ? `event-${groupIndex}-${index}` : `event-${index}`);\n    const className = useCompactLayout \n      ? \"cursor-pointer transition-transform duration-200 hover:scale-105 w-28 md:w-32\" \n      : \"cursor-pointer transition-transform duration-200 hover:scale-105\";\n    \n    return (\n      <div \n        key={key}\n        className={className}\n        onClick={() => handleEventClick(eventId)}\n      >\n        {/* Rectangular image */}\n        <div className=\"aspect-[4/3] rounded-lg overflow-hidden bg-gray-200 shadow-sm\">\n          <img \n            src={image} \n            alt={title}\n            className=\"w-full h-full object-cover\"\n            onError={(e) => {\n              e.target.onerror = null;\n              e.target.src = \"/default-event.png\";\n            }}\n          />\n        </div>\n        {/* Event name */}\n        <p className=\"mt-1 text-xs font-medium text-gray-800 line-clamp-1\">\n          {title}\n        </p>\n        {/* Event date */}\n        {dateDisplay && (\n          <p className=\"text-xs text-gray-500 -mt-0.5\">\n            {dateDisplay}\n          </p>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"w-full overflow-hidden py-4\">\n      <div className=\"flex items-center mb-3 px-4\">\n        <h2 className=\"text-lg font-bold text-indigo-600 relative\">\n          <span className=\"relative inline-block\">In the Spotlight ✨\n            <span className=\"absolute bottom-0 left-0 w-full h-0.5 bg-indigo-500 transform translate-y-1\"></span>\n          </span>\n        </h2>\n      </div>\n      \n      {/* Horizontally scrollable container */}\n      <div className=\"overflow-x-auto pb-4 no-scrollbar\">\n        <div className=\"flex px-4 space-x-4\">\n          {useCompactLayout ? (\n            // Single-row layout for 3 or fewer events\n            <div className=\"flex space-x-4\">\n              {events.map((event, index) => renderEventCard(event, index))}\n            </div>\n          ) : (\n            // 2×3 grid layout for more events\n            <div className=\"flex space-x-8\" style={{ minWidth: 'max-content' }}>\n              {Array.from({ length: Math.ceil(events.length / 6) }).map((_, groupIndex) => {\n                const groupEvents = events.slice(groupIndex * 6, groupIndex * 6 + 6);\n                \n                return (\n                  <div key={`group-${groupIndex}`} className=\"flex-shrink-0 w-80 md:w-96\">\n                    <div className=\"grid grid-cols-3 gap-3\">\n                      {/* Render event cards */}\n                      {groupEvents.map((event, index) => renderEventCard(event, index, groupIndex))}\n                      \n                      {/* Fill empty slots with placeholders if needed */}\n                      {Array.from({ length: 6 - groupEvents.length }).map((_, i) => (\n                        <div key={`placeholder-${i}`} className=\"aspect-[4/3] invisible\">\n                          {/* Invisible placeholder to maintain grid structure */}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SpotlightEvents;\n"],"names":["_ref","events","navigate","useNavigate","Array","isArray","length","useCompactLayout","renderEventCard","event","index","groupIndex","arguments","undefined","eventId","id","_id","title","eventName","image","event_image","thumbnail","dateDisplay","date","eventDate","Date","isNaN","getTime","toLocaleDateString","month","day","startDate","formatEventDate","key","concat","className","_jsxs","onClick","handleEventClick","children","_jsx","src","alt","onError","e","target","onerror","map","style","minWidth","from","Math","ceil","_","groupEvents","slice","i"],"sourceRoot":""}