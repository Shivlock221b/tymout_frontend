{"version":3,"file":"static/js/78.58eed05f.chunk.js","mappings":"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","sources":["hooks/queries/useProfileQueries.js","hooks/queries/useUserHostedEvents.js","pages/profile/UserProfilePage.js"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport profileService from '../../services/profileService';\n\n/**\n * Hook to fetch the current user's profile\n * @param {Object} options - Additional React Query options\n * @returns {Object} Query result containing profile data, loading and error states\n */\nexport const useProfile = (options = {}) => {\n  return useQuery({\n    queryKey: ['profile'],\n    queryFn: profileService.getProfile,\n    staleTime: 300000, // 5 minutes\n    cacheTime: 600000, // 10 minutes\n    ...options\n  });\n};\n\n/**\n * Hook to fetch a user profile by ID\n * @param {string} userId - User ID to fetch profile for\n * @param {Object} options - Additional React Query options\n * @returns {Object} Query result containing profile data, loading and error states\n */\nexport const useProfileById = (userId, options = {}) => {\n  return useQuery({\n    queryKey: ['profile', userId],\n    queryFn: () => profileService.getProfileById(userId),\n    staleTime: 300000, // 5 minutes\n    cacheTime: 600000, // 10 minutes\n    enabled: !!userId, // Only run query if userId is provided\n    ...options\n  });\n};\n\n/**\n * Hook to update the current user's profile\n * @returns {Object} Mutation object with mutate function and state\n */\nexport const useUpdateProfile = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: profileService.updateProfile,\n    // When mutation is successful, invalidate the profile cache\n    onSuccess: (data) => {\n      queryClient.invalidateQueries({ queryKey: ['profile'] });\n      queryClient.invalidateQueries({ queryKey: ['profile', data.id] });\n    }\n  });\n};\n\n/**\n * Hook to update user preferences\n * @returns {Object} Mutation object with mutate function and state\n */\nexport const useUpdatePreferences = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: profileService.updatePreferences,\n    // When mutation is successful, invalidate the profile cache\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['profile'] });\n    }\n  });\n};\n","import { useQuery } from '@tanstack/react-query';\r\nimport axios from 'axios';\r\n\r\n/**\r\n * Custom hook to fetch events hosted by a specific user\r\n * @param {string} userId - The ID of the user whose hosted events to fetch\r\n * @returns {Object} Query result with data, isLoading, and error\r\n */\r\nexport const useUserHostedEvents = (userId) => {\r\n  return useQuery({\r\n    queryKey: ['userHostedEvents', userId],\r\n    queryFn: async () => {\r\n      try {\r\n        // Get the API URL from environment variables or use default\r\n        const apiUrl = process.env.REACT_APP_EVENT_SERVICE_URL || 'http://localhost:3002';\r\n        \r\n        // Make the API request to fetch events hosted by the user\r\n        const response = await axios.get(`${apiUrl}/events/host/${userId}`);\r\n        \r\n        // Log the response for debugging\r\n        console.log('User hosted events response:', response.data);\r\n        \r\n        // Return the events data\r\n        return response.data.data || [];\r\n      } catch (error) {\r\n        console.error('Error fetching user hosted events:', error);\r\n        throw error;\r\n      }\r\n    },\r\n    enabled: !!userId, // Only run the query if userId is provided\r\n    staleTime: 5 * 60 * 1000, // 5 minutes\r\n    refetchOnWindowFocus: false,\r\n  });\r\n};\r\n","import React from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { FaArrowLeft, FaMapMarkerAlt, FaStar, FaCalendarAlt, FaUser } from 'react-icons/fa';\nimport { useProfileById } from '../../hooks/queries/useProfileQueries';\nimport { useUserHostedEvents } from '../../hooks/queries/useUserHostedEvents';\nimport UniversalEventCard from '../../components/common/EventCard';\nimport SkeletonLoader from '../../components/ui/SkeletonLoader';\nimport { useAuthStore } from '../../stores/authStore';\n// Chat functionality will be implemented in the future\n// import { useStartDirectChat } from '../../message/hooks/queries/useChatQueries';\n\n/**\n * UserProfilePage Component\n * \n * Single Responsibility: Display user profile information and provide navigation\n * This component handles:\n * 1. Fetching and displaying user profile data\n * 2. Providing a back button to return to previous page (event, table, or circle)\n */\nconst UserProfilePage = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  \n  // Get navigation state from location\n  const { returnTo, itemTitle } = location.state || {};\n  \n  // Fetch user data using React Query\n  const { \n    data: userData, \n    isLoading, \n    error, \n    refetch \n  } = useProfileById(id);\n  \n  // Fetch events hosted by this user\n  const {\n    data: hostedEvents = [],\n    isLoading: eventsLoading,\n    error: eventsError\n  } = useUserHostedEvents(id);\n  \n  // Handle back button functionality\n  const handleBack = () => {\n    if (returnTo) {\n      navigate(returnTo);\n    } else {\n      navigate(-1);\n    }\n  };\n  \n  const currentUserId = useAuthStore(state => state.user?._id);\n  // Debug: log IDs for conditional rendering\n  console.debug('UserProfilePage IDs', { viewedId: id, currentUserId });\n  // Chat functionality will be implemented in the future\n  // const startChatMutation = useStartDirectChat();\n\n  const logout = useAuthStore(state => state.logout);\n\n  const handleLogout = () => {\n    logout();\n    navigate('/');\n  };\n\n  /* Chat functionality will be implemented in the future\n  const handleStartChat = () => {\n    if (!currentUserId) return;\n    \n    // Get current user's data from auth store\n    const currentUser = useAuthStore.getState().user;\n    \n    startChatMutation.mutate(\n      { \n        userAId: currentUserId, \n        userBId: id,\n        userAName: currentUser?.name || 'Current User',\n        userBName: userData?.name || 'User',\n        userAAvatar: currentUser?.profileImage || '',\n        userBAvatar: userData?.profileImage || ''\n      },\n      {\n        onSuccess: ({ chatId }) => {\n          navigate(`/messages/${chatId}`);\n        }\n      }\n    );\n  };\n  */\n  \n  if (isLoading) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"flex items-center mb-6\">\n          <button \n            onClick={handleBack}\n            className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n            aria-label=\"Go back\"\n          >\n            <FaArrowLeft className=\"text-gray-600\" />\n          </button>\n          <h1 className=\"text-2xl font-bold\">User Profile</h1>\n        </div>\n        \n        <SkeletonLoader type=\"userProfile\" />\n      </div>\n    );\n  }\n  \n  if (error) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"flex items-center mb-6\">\n          <button \n            onClick={handleBack}\n            className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n            aria-label=\"Go back\"\n          >\n            <FaArrowLeft className=\"text-gray-600\" />\n          </button>\n          <h1 className=\"text-2xl font-bold\">User Profile</h1>\n        </div>\n        \n        <div className=\"bg-red-50 border-l-4 border-red-500 p-4 mb-6\">\n          <div className=\"flex\">\n            <p className=\"text-red-700\">\n              Error loading profile: {error.message || 'Unable to load user data'}\n            </p>\n          </div>\n          <button \n            onClick={() => refetch()}\n            className=\"mt-3 px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700\"\n          >\n            Try Again\n          </button>\n        </div>\n      </div>\n    );\n  }\n  \n  // If no userData (not loading, no error), then user not found\n  if (!userData) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"flex items-center mb-6\">\n          <button \n            onClick={handleBack}\n            className=\"mr-4 p-2 rounded-full hover:bg-gray-200 transition\"\n            aria-label=\"Go back\"\n          >\n            <FaArrowLeft className=\"text-gray-600\" />\n          </button>\n          <h1 className=\"text-2xl font-bold\">User Profile</h1>\n        </div>\n        \n        <div className=\"text-center py-10\">\n          <p className=\"text-xl text-gray-700\">User not found</p>\n          <button \n            onClick={handleBack}\n            className=\"mt-4 px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700\"\n          >\n            Go Back\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n      {/* Back Button with Context */}\n      <button\n        onClick={handleBack}\n        className=\"flex items-center text-indigo-600 hover:text-indigo-800 mb-6 group\"\n      >\n        <FaArrowLeft className=\"mr-2 group-hover:-translate-x-1 transition-transform duration-200\" />\n        <span>\n          {itemTitle ? `Back to ${itemTitle}` : 'Back'}\n        </span>\n      </button>\n      \n      {/* User Profile Header */}\n      <div className=\"bg-white rounded-lg shadow-md overflow-hidden mb-8\">\n        <div className=\"p-6\">\n          <div className=\"flex flex-col md:flex-row\">\n            {/* Profile Image */}\n            <div className=\"md:mr-8 mb-4 md:mb-0 flex-shrink-0\">\n              <div className=\"relative\">\n                <img \n                  src={userData.profileImage} \n                  alt={userData.name} \n                  className=\"w-32 h-32 rounded-full object-cover border-4 border-white shadow\"\n                  onError={(e) => {\n                    e.target.onerror = null;\n                    e.target.src = 'https://via.placeholder.com/150?text=User';\n                  }}\n                />\n                {userData.verified && (\n                  <div className=\"absolute bottom-0 right-0 bg-indigo-600 text-white p-1 rounded-full\">\n                    <FaUser className=\"h-4 w-4\" />\n                  </div>\n                )}\n              </div>\n            </div>\n            \n            {/* User Info */}\n            <div className=\"flex-1\">\n              <div className=\"flex flex-col md:flex-row md:items-center justify-between mb-4\">\n                <h1 className=\"text-2xl font-bold text-gray-800 mb-2 md:mb-0\">\n                  {userData.name}\n                  {userData.verified && <span className=\"ml-2 text-indigo-600\">✓</span>}\n                </h1>\n                \n                <div className=\"flex items-center space-x-4\">\n                  {userData.rating && (\n                    <div className=\"flex items-center\">\n                      <FaStar className=\"text-yellow-500 mr-1\" />\n                      <span className=\"font-medium\">{userData.rating}</span>\n                    </div>\n                  )}\n                  \n                  <div className=\"text-sm text-gray-500\">\n                    Member since {userData.joined}\n                  </div>\n                </div>\n              </div>\n              \n              {userData.location && (\n                <div className=\"flex items-center mb-3 text-gray-600\">\n                  <FaMapMarkerAlt className=\"mr-2 text-indigo-600\" />\n                  <span>{userData.location}</span>\n                </div>\n              )}\n              \n              <p className=\"text-gray-600 mb-4\" style={{ whiteSpace: 'pre-wrap' }}>{userData.bio}</p>\n              \n              {userData.interests && userData.interests.length > 0 && (\n                <div className=\"mb-4\">\n                  <div className=\"flex flex-wrap gap-2\">\n                    {userData.interests.map((interest, index) => (\n                      <span \n                        key={index}\n                        className=\"bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-sm\"\n                      >\n                        {interest}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        \n        {/* Action Buttons */}\n        <div className=\"border-t border-gray-200 pt-6 mt-6\">\n          <div className=\"flex flex-wrap justify-start gap-4\">\n            {/* Chat button hidden - will be implemented in the future\n            {currentUserId && currentUserId !== id && (\n              <button\n                onClick={handleStartChat}\n                disabled={startChatMutation.isPending}\n                className=\"px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                {startChatMutation.isPending ? 'Starting…' : 'Chat'}\n              </button>\n            )}\n            */}\n            \n            {currentUserId && currentUserId === id && (\n              <>\n                <button\n                  onClick={() => window.location.href = '/settings'}\n                  className=\"px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                >\n                  Edit Profile\n                </button>\n                <button\n                  onClick={() => navigate('/shop/manage')}\n                  className=\"px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\"\n                >\n                  Manage Shop\n                </button>\n                <button\n                  onClick={handleLogout}\n                  className=\"px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n                >\n                  Sign Out\n                </button>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n      \n      {/* No User Stats Section - Removed as requested */}\n      \n      {/* Events Hosted Section */}\n      <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n        <div className=\"p-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">Events Hosted</h2>\n          \n          {eventsLoading ? (\n            <div className=\"text-center py-8\">\n              <div className=\"animate-pulse flex space-x-4\">\n                <div className=\"flex-1 space-y-4 py-1\">\n                  <div className=\"h-40 bg-gray-200 rounded w-full\"></div>\n                  <div className=\"h-40 bg-gray-200 rounded w-full\"></div>\n                </div>\n              </div>\n            </div>\n          ) : eventsError ? (\n            <div className=\"text-center py-8 text-gray-500\">\n              <FaCalendarAlt className=\"mx-auto text-gray-300 text-4xl mb-3\" />\n              <p>Error loading events</p>\n            </div>\n          ) : hostedEvents.length === 0 ? (\n            <div className=\"text-center py-8 text-gray-500\">\n              <FaCalendarAlt className=\"mx-auto text-gray-300 text-4xl mb-3\" />\n              <p>No events hosted yet</p>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {hostedEvents.map(event => {\n                // Format the date for display\n                const formattedDate = event.date && event.date.start ? \n                  new Date(event.date.start).toLocaleDateString() : 'Date not specified';\n                \n                return (\n                  <div key={event._id || event.id} className=\"overflow-hidden\">\n                    <UniversalEventCard\n                      item={{\n                        ...event,\n                        id: event._id || event.id, // Ensure ID is properly set\n                        date: formattedDate // Format date as string\n                      }}\n                      type=\"event\"\n                      source=\"profile\"\n                      fullWidth={true}\n                      variant=\"explore\"\n                      hideHeader={true} // Hide the host header\n                      disableNavigation={true} // Make the card non-clickable\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserProfilePage;\n"],"names":["useProfile","options","arguments","length","undefined","useQuery","_objectSpread","queryKey","queryFn","profileService","getProfile","staleTime","cacheTime","useProfileById","userId","getProfileById","enabled","useUserHostedEvents","async","apiUrl","process","axios","get","concat","data","error","refetchOnWindowFocus","UserProfilePage","id","useParams","navigate","useNavigate","location","useLocation","returnTo","itemTitle","state","userData","isLoading","refetch","hostedEvents","eventsLoading","eventsError","handleBack","currentUserId","useAuthStore","_state$user","user","_id","logout","_jsxs","className","children","_jsx","onClick","FaArrowLeft","SkeletonLoader","type","message","src","profileImage","alt","name","onError","e","target","onerror","verified","FaUser","rating","FaStar","joined","FaMapMarkerAlt","style","whiteSpace","bio","interests","map","interest","index","_Fragment","window","href","handleLogout","FaCalendarAlt","event","formattedDate","date","start","Date","toLocaleDateString","UniversalEventCard","item","source","fullWidth","variant","hideHeader","disableNavigation"],"sourceRoot":""}