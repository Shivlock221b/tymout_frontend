{"version":3,"file":"static/js/main~4f064d56.121ee1f2.js","mappings":"4KAUO,MAAMA,EAAUA,KAErB,MAAMC,GAAkBC,EAAAA,EAAAA,IAAaC,GAASA,EAAMF,kBAGpD,OAAOG,EAAAA,EAAAA,UAAQ,MAASH,qBAAoB,CAACA,GAAiB,EAOnDI,EAAcA,KACzB,MAAMC,GAAOJ,EAAAA,EAAAA,IAAaC,GAASA,EAAMG,OACzC,OAAOF,EAAAA,EAAAA,UAAQ,MAASE,UAAS,CAACA,GAAM,EA0B7BC,EAAiBA,KAE5B,MAAMC,GAAQN,EAAAA,EAAAA,IAAaC,GAASA,EAAMK,QACpCC,GAASP,EAAAA,EAAAA,IAAaC,GAASA,EAAMM,SACrCC,GAAWR,EAAAA,EAAAA,IAAaC,GAASA,EAAMO,WACvCC,GAA0BT,EAAAA,EAAAA,IAAaC,GAASA,EAAMQ,0BACtDC,GAAaV,EAAAA,EAAAA,IAAaC,GAASA,EAAMS,aAG/C,OAAOR,EAAAA,EAAAA,UAAQ,MACbI,QACAC,SACAC,WACAC,0BACAC,gBACE,CAACJ,EAAOC,EAAQC,EAAUC,EAAyBC,GAAY,C,yICtD9D,MAAMC,EAAiB,WAAmB,IAAlBC,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACxC,OAAOG,EAAAA,EAAAA,IAAQC,EAAAA,EAAAA,GAAC,CACdC,SAAU,CAAC,eACXC,QAASC,EAAAA,EAAYC,eACrBC,UAAW,IACXC,MAAOA,CAACC,EAAcC,KAAW,IAADC,EAE9B,OAAgC,OAAvB,OAALD,QAAK,IAALA,GAAe,QAAVC,EAALD,EAAOE,gBAAQ,IAAAD,OAAV,EAALA,EAAiBE,SACdJ,EAAe,CAAC,GAEtBZ,GAEP,EA4DaiB,EAAYA,KACvB,MAAMC,GAAcC,EAAAA,EAAAA,MACdC,GAAWC,EAAAA,EAAAA,MACX1B,GAASP,EAAAA,EAAAA,IAAaC,GAASA,EAAMM,SAE3C,OAAO2B,EAAAA,EAAAA,GAAY,CACjBC,WAAY5B,EACZ6B,UAAWA,KAETN,EAAYO,kBAAkB,CAAEnB,SAAU,CAAC,iBAC3CY,EAAYQ,aAAa,CAAC,eAAgB,MAG1CR,EAAYS,cAAc,CAAErB,SAAU,CAAC,aACvCY,EAAYS,cAAc,CAAErB,SAAU,CAAC,mBAGvCc,EAAS,IAAI,EAEfQ,QAAUf,IAIRK,EAAYQ,aAAa,CAAC,eAAgB,MAC1CR,EAAYS,cAAc,CAAErB,SAAU,CAAC,aACvCY,EAAYS,cAAc,CAAErB,SAAU,CAAC,kBAAmB,GAE5D,EAOSuB,EAAuBA,KAClC,MAAMX,GAAcC,EAAAA,EAAAA,MACdtB,GAA0BT,EAAAA,EAAAA,IAAaC,GAASA,EAAMQ,0BAE5D,OAAOyB,EAAAA,EAAAA,GAAY,CACjBC,WAAY1B,EACZ2B,UAAWA,KAETN,EAAYO,kBAAkB,CAAEnB,SAAU,CAAC,iBAG3CY,EAAYY,cAAc,CACxBxB,SAAU,CAAC,WACXC,QAASA,IAAMwB,EAAAA,EAAeC,cAC9B,EAEJJ,QAAUf,IACwD,GAGlE,C,wDCrIJ,MA0YA,EA1YuBoB,IAA2B,IAA1B,KAAEC,EAAO,WAAWD,EAE1C,MAAME,EAAa,oCAiYnB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BC,SA/XdC,MAC5B,OAAOL,GACL,IAAK,UACH,OACEM,EAAAA,EAAAA,MAAA,OAAKH,UAAU,2BAA0BC,SAAA,EAEvCE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,mCAC7BK,EAAAA,EAAAA,MAAA,OAAKH,UAAU,SAAQC,SAAA,EACrBF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,qBAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,sBAKjCC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SACvB,IAAII,MAAM,IAAIC,KAAI,CAACC,EAAGC,KACrBL,EAAAA,EAAAA,MAAA,OAAaH,UAAU,YAAWC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,gBAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,oBAFrBU,UASpB,IAAK,cACH,OACET,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2BAA0BC,UAEvCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gDAA+CC,UAC5DE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,YAAWC,SAAA,EAExBE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,6DAA4DC,SAAA,EACzEF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,mDAC7BK,EAAAA,EAAAA,MAAA,OAAKH,UAAU,kCAAiCC,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,qCAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,qCAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,sCAKjCK,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,qBAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,uBAC7BK,EAAAA,EAAAA,MAAA,OAAKH,UAAU,uBAAsBC,SAAA,EACnCF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,gBAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,sBAKjCK,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,qBAC7BK,EAAAA,EAAAA,MAAA,OAAKH,UAAU,wCAAuCC,SAAA,EACpDF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,mBAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,mBAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,mBAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,yBAKjCK,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,qBAC7BK,EAAAA,EAAAA,MAAA,OAAKH,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,8BAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,8BAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,oCAKjCK,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,qBAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBC,SAClC,IAAII,MAAM,IAAIC,KAAI,CAACC,EAAGC,KACrBT,EAAAA,EAAAA,KAAA,OAAaC,UAAS,GAAAI,OAAKN,EAAU,2BAA3BU,WAMhBT,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qCAAoCC,UACjDE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gCAA+BC,SAAA,EAC5CF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,4BAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,uCAQ3C,IAAK,cACH,OACEK,EAAAA,EAAAA,MAAA,OAAKH,UAAU,wCAAuCC,SAAA,EAEpDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qDAAoDC,UACjEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAClBE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,4BAA2BC,SAAA,EAExCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qCAAoCC,UACjDE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,8BAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yDAAwDC,UACrEF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,mCAMnCK,EAAAA,EAAAA,MAAA,OAAKH,UAAU,SAAQC,SAAA,EACrBE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,iEAAgEC,SAAA,EAC7EF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,6BAE7BK,EAAAA,EAAAA,MAAA,OAAKH,UAAU,8BAA6BC,SAAA,EAC1CE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,iCAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,mBAG/BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,sBAIjCK,EAAAA,EAAAA,MAAA,OAAKH,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,iCAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,mBAG/BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,wBAE7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBC,SAClC,IAAII,MAAM,IAAIC,KAAI,CAACC,EAAGC,KACrBT,EAAAA,EAAAA,KAAA,OAAaC,UAAS,GAAAI,OAAKN,EAAU,2BAA3BU,oBAUxBL,EAAAA,EAAAA,MAAA,OAAKH,UAAU,qDAAoDC,SAAA,EACjEF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,0BAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iDAAgDC,SAC5D,IAAII,MAAM,IAAIC,KAAI,CAACC,EAAGC,KACrBL,EAAAA,EAAAA,MAAA,OAAaH,UAAU,cAAaC,SAAA,EAClCF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,2CAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,6BAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,yBAHrBU,aAWtB,IAAK,cACH,OACEL,EAAAA,EAAAA,MAAA,OAAKH,UAAU,2BAA0BC,SAAA,EAEvCE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,6EAA4EC,SAAA,EACzFF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,6BAC7BK,EAAAA,EAAAA,MAAA,OAAKH,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,4BAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,kCAKjCC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,qCAG7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BC,SACvC,IAAII,MAAM,IAAIC,KAAI,CAACC,EAAGC,KACrBT,EAAAA,EAAAA,KAAA,OAAaC,UAAS,GAAAI,OAAKN,EAAU,2BAA3BU,WAMhBT,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uDAAsDC,SAClE,IAAII,MAAM,IAAIC,KAAI,CAACC,EAAGC,KACrBL,EAAAA,EAAAA,MAAA,OAAaH,UAAU,gDAA+CC,SAAA,EAEpEF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,mBAG7BK,EAAAA,EAAAA,MAAA,OAAKH,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,sBAG7BK,EAAAA,EAAAA,MAAA,OAAKH,UAAU,iBAAgBC,SAAA,EAC7BE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,iCAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,mBAE/BK,EAAAA,EAAAA,MAAA,OAAKH,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,iCAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,mBAE/BK,EAAAA,EAAAA,MAAA,OAAKH,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,iCAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,sBAKjCK,EAAAA,EAAAA,MAAA,OAAKH,UAAU,oCAAmCC,SAAA,EAChDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,SAC7B,IAAII,MAAM,IAAIC,KAAI,CAACC,EAAGE,KACrBV,EAAAA,EAAAA,KAAA,OAAaC,UAAS,GAAAI,OAAKN,EAAU,gDAA3BW,QAGdV,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,kCA/BzBU,QAuCdT,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2BAA0BC,UACvCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,SAC5B,IAAII,MAAM,IAAIC,KAAI,CAACC,EAAGC,KACrBT,EAAAA,EAAAA,KAAA,OAAaC,UAAS,GAAAI,OAAKN,EAAU,0BAA3BU,YAOtB,IAAK,eACH,OACEL,EAAAA,EAAAA,MAAA,OAAKH,UAAU,2BAA0BC,SAAA,EAEvCE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,qBAG7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,SAChC,IAAII,MAAM,IAAIC,KAAI,CAACC,EAAGC,KACrBT,EAAAA,EAAAA,KAAA,OAAaC,UAAS,GAAAI,OAAKN,EAAU,UAAAM,OAAe,IAANI,EAAU,oCAAsC,OAAM,UAA1FA,WAMhBT,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SACvB,IAAII,MAAM,IAAIC,KAAI,CAACC,EAAGC,KACrBT,EAAAA,EAAAA,KAAA,OAAaC,UAAU,gDAA+CC,UACpEE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,4BAA2BC,SAAA,EAExCF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,wCAG7BK,EAAAA,EAAAA,MAAA,OAAKH,UAAU,aAAYC,SAAA,EACzBE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,iEAAgEC,SAAA,EAC7EE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,qBAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,wBAI/BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,6CAI/BK,EAAAA,EAAAA,MAAA,OAAKH,UAAU,iBAAgBC,SAAA,EAC7BE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,iCAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,8BAE/BK,EAAAA,EAAAA,MAAA,OAAKH,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,iCAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,mBAE/BK,EAAAA,EAAAA,MAAA,OAAKH,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,iCAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,sBAKjCK,EAAAA,EAAAA,MAAA,OAAKH,UAAU,4BAA2BC,SAAA,EACxCF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,4BAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,qCApC3BU,QA6CdT,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQC,UACrBE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,kDAAiDC,SAAA,EAC9DF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,mCAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,6BAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,6BAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,2CAMvC,IAAK,OACH,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qCAAoCC,SAEhD,IAAII,MAAM,IAAIC,KAAI,CAACC,EAAGC,KACrBL,EAAAA,EAAAA,MAAA,OAAaH,UAAU,+BAA8BC,SAAA,EACnDE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,mCAC7BK,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,qBAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,sBAGjCC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,wBAC7BK,EAAAA,EAAAA,MAAA,OAAKH,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,gBAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,oBAXvBU,OAkBlB,IAAK,OACH,OACEL,EAAAA,EAAAA,MAAA,OAAKH,UAAU,2BAA0BC,SAAA,EAEvCE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,iCAAgCC,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,mCAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,mBAI/BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SAC3B,IAAII,MAAM,IAAIC,KAAI,CAACC,EAAGC,KACrBT,EAAAA,EAAAA,KAAA,OAAaC,UAAS,QAAAI,OAAUI,EAAI,IAAM,EAAI,gBAAkB,eAAgBP,UAC9EF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,UAAAM,OAASI,EAAI,IAAM,EAAI,OAAS,OAAM,kBAD3DA,QAOdT,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,oCAMrC,QACE,OACEK,EAAAA,EAAAA,MAAA,OAAKH,UAAU,qCAAoCC,SAAA,EAEjDF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,qBAG7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCC,SACnD,IAAII,MAAM,IAAIC,KAAI,CAACC,EAAGC,KACrBL,EAAAA,EAAAA,MAAA,OAAaH,UAAU,YAAWC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,8BAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,iBAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAI,OAAKN,EAAU,kBAHrBU,UAStB,EAKGN,IACG,C,qDCpYH,MAAMQ,EAAa,CACxB,CACEC,GAAI,IACJC,MAAO,2BACPf,KAAM,SACNgB,SAAU,SACVC,YAAa,wFACbC,SAAU,qBACVC,SAAU,IACVC,OAAQ,IACRC,aAAc,EACdC,KAAM,CAAC,OAAQ,SAAU,cACzBC,MAAO,+GACPC,KAAM,CACJV,GAAI,MACJW,KAAM,eACNF,MAAO,mDACPG,UAAU,IAGd,CACEZ,GAAI,IACJC,MAAO,mBACPf,KAAM,OACNgB,SAAU,cACVC,YAAa,uEACbC,SAAU,eACVC,SAAU,IACVC,OAAQ,IACRC,aAAc,GACdC,KAAM,CAAC,YAAa,SAAU,OAC9BC,MAAO,+GACPC,KAAM,CACJV,GAAI,MACJW,KAAM,eACNF,MAAO,mDACPG,UAAU,IAGd,CACEZ,GAAI,IACJC,MAAO,0BACPf,KAAM,eACNgB,SAAU,WACVC,YAAa,wEACbC,SAAU,kBACVC,SAAU,IACVC,OAAQ,IACRC,aAAc,GACdC,KAAM,CAAC,OAAQ,WAAY,cAC3BC,MAAO,+GACPC,KAAM,CACJV,GAAI,MACJW,KAAM,aACNF,MAAO,iDACPG,UAAU,IAGd,CACEZ,GAAI,IACJC,MAAO,sBACPf,KAAM,SACNgB,SAAU,OACVC,YAAa,2EACbC,SAAU,eACVC,SAAU,IACVC,OAAQ,IACRC,aAAc,EACdC,KAAM,CAAC,OAAQ,SAAU,aACzBC,MAAO,4GACPC,KAAM,CACJV,GAAI,MACJW,KAAM,gBACNF,MAAO,iDACPG,UAAU,KAMHC,EAAa,CACxB,CACEb,GAAI,KACJC,MAAO,2BACPf,KAAM,UACNgB,SAAU,UACVC,YAAa,wEACbC,SAAU,eACVU,KAAM,sBACNT,SAAU,IACVC,OAAQ,IACRS,UAAW,GACXP,KAAM,CAAC,UAAW,WAAY,UAC9BC,MAAO,4GACPC,KAAM,CACJV,GAAI,MACJW,KAAM,cACNF,MAAO,mDACPG,UAAU,IAGd,CACEZ,GAAI,KACJC,MAAO,wBACPf,KAAM,gBACNgB,SAAU,QACVC,YAAa,0EACbC,SAAU,mBACVU,KAAM,sBACNT,SAAU,IACVC,OAAQ,IACRS,UAAW,GACXP,KAAM,CAAC,QAAS,SAAU,OAC1BC,MAAO,+GACPC,KAAM,CACJV,GAAI,MACJW,KAAM,gBACNF,MAAO,iDACPG,UAAU,IAGd,CACEZ,GAAI,KACJC,MAAO,uCACPf,KAAM,WACNgB,SAAU,cACVC,YAAa,qEACbC,SAAU,kBACVU,KAAM,sBACNT,SAAU,IACVC,OAAQ,IACRS,UAAW,GACXP,KAAM,CAAC,WAAY,OAAQ,aAC3BC,MAAO,+GACPC,KAAM,CACJV,GAAI,MACJW,KAAM,iBACNF,MAAO,mDACPG,UAAU,IAGd,CACEZ,GAAI,KACJC,MAAO,wBACPf,KAAM,YACNgB,SAAU,YACVC,YAAa,mEACbC,SAAU,iBACVU,KAAM,sBACNT,SAAU,GACVC,OAAQ,IACRS,UAAW,GACXP,KAAM,CAAC,WAAY,SAAU,aAC7BC,MAAO,4GACPC,KAAM,CACJV,GAAI,MACJW,KAAM,eACNF,MAAO,iDACPG,UAAU,KAMHI,EAAc,CACzB,CACEhB,GAAI,IACJC,MAAO,sBACPf,KAAM,QACNgB,SAAU,UACVC,YAAa,0EACbC,SAAU,WACVC,SAAU,EACVC,OAAQ,IACRW,QAAS,IACTT,KAAM,CAAC,UAAW,SAAU,YAC5BC,MAAO,+GACPS,MAAO,CACLlB,GAAI,MACJW,KAAM,cACNF,MAAO,iDACPG,UAAU,IAGd,CACEZ,GAAI,IACJC,MAAO,0BACPf,KAAM,WACNgB,SAAU,MACVC,YAAa,uEACbC,SAAU,oBACVC,SAAU,IACVC,OAAQ,IACRW,QAAS,GACTT,KAAM,CAAC,MAAO,WAAY,UAC1BC,MAAO,+GACPS,MAAO,CACLlB,GAAI,MACJW,KAAM,aACNF,MAAO,mDACPG,UAAU,IAGd,CACEZ,GAAI,IACJC,MAAO,kBACPf,KAAM,WACNgB,SAAU,gBACVC,YAAa,mEACbC,SAAU,iBACVC,SAAU,IACVC,OAAQ,IACRW,QAAS,GACTT,KAAM,CAAC,SAAU,SAAU,QAC3BC,MAAO,+GACPS,MAAO,CACLlB,GAAI,MACJW,KAAM,cACNF,MAAO,iDACPG,UAAU,IAGd,CACEZ,GAAI,IACJC,MAAO,gBACPf,KAAM,WACNgB,SAAU,OACVC,YAAa,8EACbC,SAAU,sBACVC,SAAU,IACVC,OAAQ,IACRW,QAAS,IACTT,KAAM,CAAC,OAAQ,SAAU,UACzBC,MAAO,+GACPS,MAAO,CACLlB,GAAI,MACJW,KAAM,YACNF,MAAO,mDACPG,UAAU,I,+ECzOT,MAgCMO,EAAmB,WAA0B,IAAzBC,EAAcnE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACjD,MAAMiB,GAAcC,EAAAA,EAAAA,MAGdkD,EApCuB,WAAiC,IAAhCC,EAAOrE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGD,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,OAAOG,EAAAA,EAAAA,IAAQC,EAAAA,EAAAA,GAAC,CACdC,SAAU,CAAC,UAAWgE,GACtB/D,QAASA,IAAMgE,EAAAA,EAAeC,gBAAgBF,IAC3CtE,GAEP,CA8BgByE,CAAgBL,EAAgB,CAC5CM,kBAAkB,IAYpB,OAAArE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKgE,GAAK,IACRM,cAVqBC,IAErB1D,EAAYY,cAAc,CACxBxB,SAAU,CAAC,WAASD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAO+D,GAAmBQ,IAC9CrE,QAASA,IAAMgE,EAAAA,EAAeC,iBAAenE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI+D,GAAmBQ,KACtE,GAON,C,sJCfA,EA1CuB3C,IAA4B,IAA3B,SAAEK,GAAmBL,EAAN4C,GAAIC,EAAAA,EAAAA,GAAA7C,EAAA8C,GACzC,MAAQC,KAAMxF,EAAMyF,UAAWC,EAAO,MAAErE,IAAUd,EAAAA,EAAAA,MAC5CZ,IAAoBK,EACpB4D,GAAW+B,EAAAA,EAAAA,MAOjB,IALAC,EAAAA,EAAAA,YAAU,KACgE,GACvE,CAACjG,EAAiB+F,EAAS1F,IAG1B0F,EAAS,CAEX,MAAMG,EAAOjC,EAASkC,SACtB,IAAIC,EAAe,UAUnB,OARIF,EAAKG,SAAS,YAChBD,EAAe,UACNF,EAAKG,SAAS,SACvBD,EAAe,QACNF,EAAKG,SAAS,UAAYH,EAAKG,SAAS,gBACjDD,EAAe,SAGVnD,EAAAA,EAAAA,KAACqD,EAAAA,EAAc,CAACvD,KAAMqD,GAC/B,CAGA,OAAI1E,IAAU1B,GAELiD,EAAAA,EAAAA,KAACsD,EAAAA,GAAQ,CAACC,GAAG,SAAStG,MAAO,CAAEuG,KAAMxC,GAAYyC,SAAO,IAM7DC,EAAAA,eAAqBxD,GAChBwD,EAAAA,aAAmBxD,GAAQjC,EAAAA,EAAAA,GAAA,GAAOwE,IAGpCvC,CAAQ,E,eChBjB,EApBoBL,IAA4B,IAA3B,SAAEK,GAAmBL,EAAN4C,GAAIC,EAAAA,EAAAA,GAAA7C,EAAA8C,GACtC,MAAQC,KAAMxF,EAAMyF,UAAWC,IAAYnF,EAAAA,EAAAA,MAG3C,OAAImF,GACK9C,EAAAA,EAAAA,KAACqD,EAAAA,EAAc,CAACvD,KAAK,YAI1B4D,EAAAA,eAAqBxD,GAChBwD,EAAAA,aAAmBxD,GAAQjC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC7BwE,GAAI,IACPrF,KAAMA,GAAQ,QAKX8C,CAAQ,E,wBCvBjB,MAwEA,EAxEeyD,KACIZ,EAAAA,EAAAA,MAGJG,SAASU,WAAW,aACxB,MAIP5D,EAAAA,EAAAA,KAAA,UAAQC,UAAU,sDAAqDC,UACrEE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,cAAaC,SAAA,EAC1BE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,0DAAyDC,SAAA,EACtEE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yBAAwBC,SAAC,YACvCF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gBAAeC,SAAC,wCAK/BE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,6BAA4BC,SAAC,iBAC3CE,EAAAA,EAAAA,MAAA,MAAIH,UAAU,0BAAyBC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAC6D,EAAAA,GAAI,CAACN,GAAG,IAAItD,UAAU,qCAAoCC,SAAC,YAChEF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAC6D,EAAAA,GAAI,CAACN,GAAG,YAAYtD,UAAU,qCAAoCC,SAAC,uBACxEF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAC6D,EAAAA,GAAI,CAACN,GAAG,UAAUtD,UAAU,qCAAoCC,SAAC,oBACtEF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAC6D,EAAAA,GAAI,CAACN,GAAG,SAAStD,UAAU,qCAAoCC,SAAC,sBAIzEE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,6BAA4BC,SAAC,aAC3CE,EAAAA,EAAAA,MAAA,MAAIH,UAAU,0BAAyBC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAC6D,EAAAA,GAAI,CAACN,GAAG,OAAOtD,UAAU,qCAAoCC,SAAC,WACnEF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAC6D,EAAAA,GAAI,CAACN,GAAG,WAAWtD,UAAU,qCAAoCC,SAAC,kBACvEF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAC6D,EAAAA,GAAI,CAACN,GAAG,UAAUtD,UAAU,qCAAoCC,SAAC,cACtEF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAC6D,EAAAA,GAAI,CAACN,GAAG,SAAStD,UAAU,qCAAoCC,SAAC,8BAIzEE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,6BAA4BC,SAAC,qBAC3CE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,iBAAgBC,SAAA,EAC7BE,EAAAA,EAAAA,MAAA,KAAG0D,KAAK,uBAAuBC,OAAO,SAASC,IAAI,sBAAsB/D,UAAU,mDAAkDC,SAAA,EACnIF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,UAASC,SAAC,cAC1BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAAUgE,KAAK,eAAeC,QAAQ,YAAY,cAAY,OAAMhE,UACjFF,EAAAA,EAAAA,KAAA,QAAMmE,SAAS,UAAUC,EAAE,yQAAyQC,SAAS,kBAGjTjE,EAAAA,EAAAA,MAAA,KAAG0D,KAAK,wBAAwBC,OAAO,SAASC,IAAI,sBAAsB/D,UAAU,mDAAkDC,SAAA,EACpIF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,UAASC,SAAC,eAC1BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAAUgE,KAAK,eAAeC,QAAQ,YAAY,cAAY,OAAMhE,UACjFF,EAAAA,EAAAA,KAAA,QAAMmE,SAAS,UAAUC,EAAE,8jDAA8jDC,SAAS,kBAGtmDjE,EAAAA,EAAAA,MAAA,KAAG0D,KAAK,sBAAsBC,OAAO,SAASC,IAAI,sBAAsB/D,UAAU,mDAAkDC,SAAA,EAClIF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,UAASC,SAAC,aAC1BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAAUgE,KAAK,eAAeC,QAAQ,YAAY,cAAY,OAAMhE,UACjFF,EAAAA,EAAAA,KAAA,QAAMoE,EAAE,2bAOlBpE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iFAAgFC,UAC7FE,EAAAA,EAAAA,MAAA,KAAAF,SAAA,CAAG,SAAQ,IAAIoE,MAAOC,cAAc,0C,cC/D9C,MA0FA,EA1FyBC,KACvB,MAAMxD,GAAW+B,EAAAA,EAAAA,MAGX0B,GAAWvH,EAAAA,EAAAA,UAAQ,IAAM,CAC7B,CAAEqE,KAAM,aAAc0B,KAAM,WAAYyB,MAAM1E,EAAAA,EAAAA,KAAC2E,EAAAA,IAAO,KACtD,CAAEpD,KAAM,QAAS0B,KAAM,YAAayB,MAAM1E,EAAAA,EAAAA,KAAC4E,EAAAA,IAAa,KACxD,CAAErD,KAAM,UAAW0B,KAAM,WAAYyB,MAAM1E,EAAAA,EAAAA,KAAC6E,EAAAA,IAAM,OACjD,IAKH,MAFoB,CAAC,SAAU,UAAW,KAE1BzB,SAASpC,EAASkC,WAK9BlC,EAASkC,SAASU,WAAW,aAJxB,MASPxD,EAAAA,EAAAA,MAAA0E,EAAAA,SAAA,CAAA5E,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAAE,SAAA,wnBAkBAF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iFAAgFC,UAC7FF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SACtBuE,EAASlE,KAAKwE,IACb/E,EAAAA,EAAAA,KAAA,MAAAE,UACEE,EAAAA,EAAAA,MAAC4E,EAAAA,GAAO,CACNzB,GAAIwB,EAAK9B,KACThD,UAAWJ,IAAA,IAAC,SAAEoF,GAAUpF,EAAA,4DAAAQ,OAEpB4E,EACI,gCACA,kCAAiC,EAExC/E,SAAA,EAEDF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAE6E,EAAKL,OACpCK,EAAKxD,SAZDwD,EAAKxD,aAoBpBvB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iEAAgEC,UAC7EF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wCAAuCC,SAClDuE,EAASlE,KAAKwE,IACb/E,EAAAA,EAAAA,KAAA,MAAoBC,UAAU,6BAA4BC,UACxDE,EAAAA,EAAAA,MAAC4E,EAAAA,GAAO,CACNzB,GAAIwB,EAAK9B,KACThD,UAAWiF,IAAA,IAAC,SAAED,GAAUC,EAAA,oEAAA7E,OAEpB4E,EACI,kBACA,oCAAmC,EAE1C/E,SAAA,EAEDF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAE6E,EAAKL,QACrC1E,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sBAAqBC,SAAE6E,EAAKxD,WAZvCwD,EAAKxD,cAkBnB,E,kCClFP,MAyIA,EAzIoB1B,IAAqC,IAApC,KAAEsF,EAAI,cAAEC,EAAa,MAAE3G,GAAOoB,EACjD,MAAOoC,EAAOoD,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,KAChCzC,EAAW4C,IAAgBH,EAAAA,EAAAA,WAAS,IACpCI,EAAQC,IAAaL,EAAAA,EAAAA,WAAS,IAC9BM,EAAeC,IAAoBP,EAAAA,EAAAA,UAAS,MAC7CQ,GAAYC,EAAAA,EAAAA,QAAO,MACnBC,GAAaD,EAAAA,EAAAA,QAAO,OAG1B/C,EAAAA,EAAAA,YAAU,KACR,MAAMiD,EAAsBC,IAExBJ,EAAUK,UACTL,EAAUK,QAAQC,SAASF,EAAMnC,SAClCiC,EAAWG,UACVH,EAAWG,QAAQC,SAASF,EAAMnC,SAEnC4B,GAAU,EACZ,EAIF,OADAU,SAASC,iBAAiB,YAAaL,GAChC,KACLI,SAASE,oBAAoB,YAAaN,EAAmB,CAC9D,GACA,KAGHjD,EAAAA,EAAAA,YAAU,KACR,MAAMwD,EAAgBC,YAAWC,UAC/B,GAAIzE,EAAMnE,QAAU,GAAKqH,EAAM,CAC7BM,GAAa,GACbE,GAAU,GAEV,IACE,MAAMgB,QAAeC,EAAAA,EAAAA,IAAa3E,EAAOkD,GACzCK,EAAWmB,EACb,CAAE,MAAOlI,GAEP+G,EAAW,GACb,CAAC,QACCC,GAAa,EACf,CACF,MACED,EAAW,GACb,GACC,KAEH,MAAO,IAAMqB,aAAaL,EAAc,GACvC,CAACvE,EAAOkD,IAiBX,OACE/E,EAAAA,EAAAA,MAAA,OAAKH,UAAU,WAAUC,SAAA,EACvBE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,WAAW6G,IAAKhB,EAAU5F,SAAA,EACvCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uEAAsEC,UACnFF,EAAAA,EAAAA,KAAC+G,EAAAA,IAAc,CAAC9G,UAAU,6BAE5BD,EAAAA,EAAAA,KAAA,SACEF,KAAK,OACLkH,MAAO/E,EACPgF,SAxBmBC,IACzB7B,EAAS6B,EAAEnD,OAAOiD,OACK,KAAnBE,EAAEnD,OAAOiD,QACXnB,EAAiB,MACjBT,EAAc,MAChB,EAoBM+B,QAASA,IAAMlF,EAAMnE,QAAU,GAAK6H,GAAU,GAC9CyB,YAAY,wBACZnH,UAAS,sDAAAI,OACP5B,EACI,yDACA,iEAEN4I,UAAWlC,IAEZtC,IACC7C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oDAAmDC,UAChEF,EAAAA,EAAAA,KAACsH,EAAAA,GAAS,CAACrH,UAAU,4CAK1BxB,IACCuB,EAAAA,EAAAA,KAAA,KAAGC,UAAU,4BAA2BC,SAAEzB,KAG1C0G,IACAnF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,8BAA6BC,SAAC,+BAG5CwF,GAAUH,EAAQzH,OAAS,IAC1BkC,EAAAA,EAAAA,KAAA,OACE8G,IAAKd,EACL/F,UAAU,iIAAgIC,SAEzIqF,EAAQhF,KAAKgH,IACZnH,EAAAA,EAAAA,MAAA,OAEEoH,QAASA,IAjDMD,KACzB1B,EAAiB0B,GACjBlC,EAASkC,EAAMhG,MACfoE,GAAU,GACVP,EAAcmC,EAAM,EA6CKE,CAAkBF,GACjCtH,UAAU,6CAA4CC,SAAA,EAEtDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,SAAEqH,EAAMhG,QACpCvB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,SAAEqH,EAAMG,UAC7CH,EAAMzG,WACLd,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,SAAEqH,EAAMzG,aAP3CyG,EAAM3G,QAclB8E,GAAUzD,EAAMnE,QAAU,GAAwB,IAAnByH,EAAQzH,SAAiB+E,IACvD7C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0HAAyHC,SAAC,oDAIvI,E,uBC1HJyH,EAA4B9H,IAA6E,IAA5E,cAAE+H,EAAa,SAAEC,EAAQ,UAAEC,EAAS,aAAEC,EAAY,iBAAEC,GAAkBnI,EACvG,MAAOoI,EAAcC,IAAmB5C,EAAAA,EAAAA,UAAS,OAC1C6C,EAAWC,IAAgB9C,EAAAA,EAAAA,UAAS,OACpC+C,EAAaC,IAAkBhD,EAAAA,EAAAA,UAAS,KACxCM,EAAeC,IAAoBP,EAAAA,EAAAA,UAAS,MAC7CiD,GAAexC,EAAAA,EAAAA,QAAO,OAGrByC,EAAUC,IAAenD,EAAAA,EAAAA,UAAS,MAGnCoD,EAAsBA,CAACC,EAAWC,KACtC,IAAKD,EAAW,MAAO,GAGvB,GAAIA,EAAUvF,SAAS,MAA6B,IAArBuF,EAAU7K,OAAc,CACrD,MAAO+K,EAAOC,GAAWH,EAAUI,MAAM,KACnCC,EAAWC,SAASJ,EAAO,IAGjC,GAAIG,GAAY,GAAKA,EAAW,GAC9B,OAAOL,CAEX,CAGA,IAAIE,EAAQ,EACRC,EAAU,EAyBd,OAtBIH,EAAUvF,SAAS,MACpByF,EAAOC,GAAWH,EAAUI,MAAM,KAAKxI,KAAI2I,GAAOD,SAASC,EAAK,MACxDP,EAAUvF,SAAS,MAC3ByF,EAAOC,GAAWH,EAAUI,MAAM,KAAKxI,KAAI2I,GAAOD,SAASC,EAAK,MACxDP,EAAU7K,QAAU,GAE7B+K,EAAQI,SAASN,EAAW,IAC5BG,EAAU,GACDH,EAAU7K,QAAU,IAE7B+K,EAAQI,SAASN,EAAUQ,UAAU,EAAGR,EAAU7K,OAAS,GAAI,IAC/DgL,EAAUG,SAASN,EAAUQ,UAAUR,EAAU7K,OAAS,GAAI,KAInD,OAAT8K,GAAiBC,EAAQ,GAC3BA,GAAS,GACS,OAATD,GAA2B,KAAVC,IAC1BA,EAAQ,GAIJ,GAANxI,OAAUwI,EAAMO,WAAWC,SAAS,EAAG,KAAI,KAAAhJ,OAAIyI,EAAQM,WAAWC,SAAS,EAAG,KAAI,GAG9E,QACJC,EAAO,aACPC,EACAC,WAAW,OAAEC,GAAQ,MACrBC,EAAK,SACLC,IACEC,EAAAA,EAAAA,IAAQ,CACVhC,cAAeA,GAAiB,CAC9B/G,MAAO,GACPE,YAAa,GACbW,KAAM,GACNmI,KAAM,GACN1E,KAAM,GACNoC,MAAO,KACPuC,SAAU,GACVC,aAAc,GACdC,UAAU,EACVC,aAAa,EACb7I,KAAM,GACNN,SAAU,UAKRoJ,EAAeR,EAAM,SAGpBS,EAAUC,IAAe9E,EAAAA,EAAAA,UAAS,IAGnC+E,EAAwBnD,IAC5BkD,EAAYlD,EAAEnD,OAAOiD,MAAM,EAIvBsD,EAAeA,CAACrD,EAAUsD,KAC9B,IAAKJ,EAASK,OAAQ,OAGtB,MAAMC,EAAeN,EAASK,OAAOE,cAC/BC,EAAiBF,EAAaG,OAAO,GAAGC,cAAgBJ,EAAaK,MAAM,GAG3EC,EAA0C,kBAAhBR,EAC5BA,EAAYxB,MAAM,KAAKxI,KAAIyK,GAAOA,EAAIR,SAAQS,QAAOD,GAAOA,IAC5D1K,MAAM4K,QAAQX,GAAeA,EAAc,GAQ/C,IALkBQ,EAAiBI,MAAKH,GACtCA,EAAIN,gBAAkBC,EAAeD,gBAIvB,CACd,MAAMU,EAAc,IAAIL,EAAkBJ,GAG1C1D,EAASmE,EAAYC,KAAK,OAG1B1B,EAAS,YAAayB,EACxB,CAGAhB,EAAY,GAAG,EAoBXhN,GAAOJ,EAAAA,EAAAA,IAAaC,GAASA,EAAMG,OAwGzC,OACEgD,EAAAA,EAAAA,MAAA,OAAAF,SAAA,CACG8H,IACChI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBE,EAAAA,EAAAA,MAAA,QAAMH,UAAU,gGAA+FC,SAAA,CAAC,mBAC7F8H,EAAiBzG,WAKxCnB,EAAAA,EAAAA,MAAA,QAAMyH,SAAU0B,GAhEA7C,UAClB,IAEE,MAAM4E,EAAgB,IAAIhH,KAAK,GAADjE,OAAIuC,EAAKlB,KAAI,KAAArB,OAAIuC,EAAKiH,OAC9C0B,EAAc,IAAIjH,KAAKgH,EAAcE,UAAoC,KAAvB5I,EAAKkH,UAAY,KACnE2B,EAAY,CAChB5K,MAAO+B,EAAK/B,MACZE,YAAa6B,EAAK7B,YAClBC,SAAU,CACRlB,KAAM,WACNqF,KAAMvC,EAAKuC,MAAQ,GACnBuG,WAAY,IAEdnE,MAAO3B,EAAgB,CACrB+F,QAAS/F,EAAchF,GACvBW,KAAMqE,EAAcrE,KACpBmG,QAAS9B,EAAc8B,QACvBkE,YAAahG,EAAcgG,YAC3B9K,SAAU8E,EAAc9E,SAAS2C,QAAQ,IAAK,KAC9C0B,KAAMvC,EAAKuC,MACT,KACJzD,KAAM,CACJmK,MAAOP,EACPQ,IAAKP,GAEPjK,KAAM,CACJyK,OAAQ3O,GAAQA,EAAKwD,GAAKxD,EAAKwD,GAAK,2BACpCW,KAAMnE,GAAQA,EAAKmE,KAAOnE,EAAKmE,KAAO,aAExCI,UAAW,GACXP,KAA2B,kBAAdwB,EAAKxB,KAAoBwB,EAAKxB,KAAK2H,MAAM,KAAKxI,KAAIyK,GAAOA,EAAIR,SAAQS,QAAOD,GAAOA,IAAOpI,EAAKxB,KAC5GtB,KAAM,QACNlB,OAAQ,UACRmL,aAAcnH,EAAKmH,aACnBiC,SAAUpJ,EAAKoJ,UAAY,EAC3BlL,SAAU8B,EAAK9B,SACfmL,OAAQrJ,EAAKoH,SAAW,SAAW,UACnCA,SAAUpH,EAAKoH,UAIb7B,IACFsD,EAAUS,WAAa/D,GAGzBN,EAAS4D,EAAWtD,EACtB,CAAE,MAAO1J,GAEP6J,EAAe,2CACjB,KAe4CpI,SAAA,EACxCE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,YAAWC,SAAA,EAExBE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOmM,QAAQ,QAAQlM,UAAU,4CAA2CC,SAAC,kBAG7EE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAACoM,EAAAA,GAAU,CACT7K,KAAK,QACL+H,QAASA,EACT+C,MAAO,CAAEC,SAAU,qBACnBC,OAAQrH,IAAA,IAAC,MAAEsH,GAAOtH,EAAA,OAChBlF,EAAAA,EAAAA,KAAA,SAAA/B,EAAAA,EAAAA,GAAA,CACE6B,KAAK,OACLc,GAAG,QACHX,UAAS,oEAAAI,OACPoJ,EAAO5I,MACH,yDACA,kDAEF2L,GACJ,IAGL/C,EAAO5I,QACNb,EAAAA,EAAAA,KAAA,KAAGC,UAAU,4BAA2BC,SAAEuJ,EAAO5I,MAAM4L,iBAM7DrM,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOmM,QAAQ,cAAclM,UAAU,4CAA2CC,SAAC,kBAGnFE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAACoM,EAAAA,GAAU,CACT7K,KAAK,cACL+H,QAASA,EACT+C,MAAO,CAAEC,SAAU,2BACnBC,OAAQG,IAAA,IAAC,MAAEF,GAAOE,EAAA,OAChB1M,EAAAA,EAAAA,KAAA,YAAA/B,EAAAA,EAAAA,GAAA,CACE2C,GAAG,cACH+L,KAAK,IACL1M,UAAS,oEAAAI,OACPoJ,EAAO1I,YACH,yDACA,kDAEFyL,GACJ,IAGL/C,EAAO1I,cACNf,EAAAA,EAAAA,KAAA,KAAGC,UAAU,4BAA2BC,SAAEuJ,EAAO1I,YAAY0L,cAGjEzM,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6BAA4BC,SAAC,yEAK1CE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,yCAAwCC,SAAC,kCACtDE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,uBAAsBC,SAAA,EAEnCF,EAAAA,EAAAA,KAAA,UACEF,KAAK,SACL0H,QAASA,IAAMmC,EAAS,cAAe,uLACvC1J,UAAU,yGAAwGC,SACnH,wBAKDF,EAAAA,EAAAA,KAAA,UACEF,KAAK,SACL0H,QAASA,IAAMmC,EAAS,cAAe,4KACvC1J,UAAU,gGAA+FC,SAC1G,mBAKDF,EAAAA,EAAAA,KAAA,UACEF,KAAK,SACL0H,QAASA,IAAMmC,EAAS,cAAe,wLACvC1J,UAAU,sGAAqGC,SAChH,mBAKDF,EAAAA,EAAAA,KAAA,UACEF,KAAK,SACL0H,QAASA,IAAMmC,EAAS,cAAe,sLACvC1J,UAAU,gGAA+FC,SAC1G,wBAIHF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6BAA4BC,SAAC,8EAK9CE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,wCAAuCC,SAAA,EAEpDE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOmM,QAAQ,OAAOlM,UAAU,4CAA2CC,UACzEE,EAAAA,EAAAA,MAAA,QAAMH,UAAU,2BAA0BC,SAAA,EACxCF,EAAAA,EAAAA,KAAC4M,EAAAA,IAAa,CAAC3M,UAAU,uBAAuB,cAIpDG,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAACoM,EAAAA,GAAU,CACT7K,KAAK,OACL+H,QAASA,EACT+C,MAAO,CAAEC,SAAU,oBACnBC,OAAQM,IAAA,IAAC,MAAEL,GAAOK,EAAA,OAChB7M,EAAAA,EAAAA,KAAA,SAAA/B,EAAAA,EAAAA,GAAA,CACE6B,KAAK,OACLc,GAAG,OACHX,UAAS,oEAAAI,OACPoJ,EAAO/H,KACH,yDACA,kDAEF8K,GACJ,IAGL/C,EAAO/H,OACN1B,EAAAA,EAAAA,KAAA,KAAGC,UAAU,4BAA2BC,SAAEuJ,EAAO/H,KAAK+K,iBAM5DrM,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOmM,QAAQ,OAAOlM,UAAU,4CAA2CC,UACzEE,EAAAA,EAAAA,MAAA,QAAMH,UAAU,2BAA0BC,SAAA,EACxCF,EAAAA,EAAAA,KAAC8M,EAAAA,IAAO,CAAC7M,UAAU,uBAAuB,cAI9CG,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAACoM,EAAAA,GAAU,CACT7K,KAAK,OACL+H,QAASA,EACT+C,MAAO,CACLC,SAAU,mBACVS,SAAW/F,IAET,IAAKA,EAAO,MAAO,mBAInB,MADkB,mCACDgG,KAAKhG,IAAU,2BAA2B,GAG/DuF,OAAQU,IAAoD,IAAjDT,OAAO,SAAEvF,EAAQ,MAAED,IAAwBiG,EAEhDC,IAF4CxK,EAAAA,EAAAA,GAAAuK,EAAvCT,MAAK7J,GAEI,IACdwK,EAAc3E,EAElB,GAAIxB,EAAO,CACT,MAAO6B,EAAOC,GAAW9B,EAAM+B,MAAM,KAC/BC,EAAWC,SAASJ,EAAO,IAGjC,GAAIG,GAAY,GAAI,CAClBmE,EAAc,KAEdD,EAAW,GAAA7M,OADuB,KAAb2I,EAAkB,GAAKA,EAAW,GAC1B,KAAA3I,OAAIyI,EACnC,KAAO,CACLqE,EAAc,KAEdD,EAAW,GAAA7M,OADuB,IAAb2I,EAAiB,GAAKA,EACd,KAAA3I,OAAIyI,EACnC,CAGIqE,IAAgB3E,GAClBC,EAAY0E,EAEhB,CAEC,IAAIC,EAAgB,GAChBC,EAAkB,GAEtB,GAAIH,EAAa,CACf,MAAOrE,EAAOC,GAAWoE,EAAYnE,MAAM,KAC3CqE,EAAgBnE,SAASJ,EAAO,IAChCwE,EAAkBvE,CACpB,CAGA,MAAMwE,EAAehN,MAAMkD,KAAK,CAAE1F,OAAQ,KAAM,CAAC0C,EAAGC,IAAMA,EAAI,IAG9D,OACCT,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBC,UACnCE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,kBAAiBC,SAAA,EAE9BE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOmM,QAAQ,YAAYlM,UAAU,UAASC,SAAC,WAC/CE,EAAAA,EAAAA,MAAA,UACEQ,GAAG,YACHX,UAAS,2DAAAI,OAA6DoJ,EAAOI,KACzE,yDACA,iDACJ7C,MAAOoG,EACPnG,SAAWC,IACT,MAAM2B,EAAQ3B,EAAEnD,OAAOiD,MACjB8B,EAAUuE,GAAmB,KAC7BE,EAAS7E,EAAoB,GAADrI,OAAIwI,EAAK,KAAAxI,OAAIyI,GAAWN,GAC1DvB,EAASsG,EAAO,EAChBrN,SAAA,EAEFF,EAAAA,EAAAA,KAAA,UAAQgH,MAAM,GAAE9G,SAAC,SAChBoN,EAAa/M,KAAIiN,IAChBxN,EAAAA,EAAAA,KAAA,UAAmBgH,MAAOwG,EAAKtN,SAAEsN,GAApBA,YAMnBpN,EAAAA,EAAAA,MAAA,OAAKH,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,SAAOmM,QAAQ,cAAclM,UAAU,UAASC,SAAC,aACjDE,EAAAA,EAAAA,MAAA,UACEQ,GAAG,cACHX,UAAS,8CAAAI,OAAgDoJ,EAAOI,KAC5D,yDACA,iDACJ7C,MAAOqG,EACPpG,SAAWC,IACT,MAAM2B,EAAQuE,GAAiB,KACzBtE,EAAU5B,EAAEnD,OAAOiD,MACnBuG,EAAS7E,EAAoB,GAADrI,OAAIwI,EAAK,KAAAxI,OAAIyI,GAAWN,GAC1DvB,EAASsG,EAAO,EAChBrN,SAAA,EAEFF,EAAAA,EAAAA,KAAA,UAAQgH,MAAM,GAAE9G,SAAC,QA5CH,CAAC,KAAM,KAAM,KAAM,MA6CjBK,KAAIkN,IAClBzN,EAAAA,EAAAA,KAAA,UAAqBgH,MAAOyG,EAAOvN,SAAEuN,GAAxBA,YAMnBzN,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQC,UACrBE,EAAAA,EAAAA,MAAA,UACEQ,GAAG,WACHX,UAAS,2DAAAI,OAA6DoJ,EAAOI,KACzE,yDACA,iDACJ7C,MAAOwB,EACPvB,SAAWC,IACT,MAAMwG,EAAUxG,EAAEnD,OAAOiD,MAEzB,GADAyB,EAAYiF,GACRN,GAAiBC,EAAiB,CACpC,MAAME,EAAS7E,EAAoB,GAADrI,OAAI+M,EAAa,KAAA/M,OAAIgN,GAAmBK,GAC1EzG,EAASsG,EACX,GACArN,SAAA,EAEFF,EAAAA,EAAAA,KAAA,UAAQgH,MAAM,KAAI9G,SAAC,QACnBF,EAAAA,EAAAA,KAAA,UAAQgH,MAAM,KAAI9G,SAAC,gBAIrB,IAIXuJ,EAAOI,OACN7J,EAAAA,EAAAA,KAAA,KAAGC,UAAU,4BAA2BC,SAAEuJ,EAAOI,KAAK4C,oBAO9DrM,EAAAA,EAAAA,MAAA,OAAKH,UAAU,wCAAuCC,SAAA,EAEpDE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOmM,QAAQ,WAAWlM,UAAU,4CAA2CC,UAC7EE,EAAAA,EAAAA,MAAA,QAAMH,UAAU,2BAA0BC,SAAA,EACxCF,EAAAA,EAAAA,KAAC8M,EAAAA,IAAO,CAAC7M,UAAU,uBAAuB,2BAI9CG,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAACoM,EAAAA,GAAU,CACT7K,KAAK,WACL+H,QAASA,EACT+C,MAAO,CAAEsB,IAAK,CAAE3G,MAAO,GAAIyF,QAAS,yCACpCF,OAAQqB,IAAA,IAAC,MAAEpB,GAAOoB,EAAA,OAChB5N,EAAAA,EAAAA,KAAA,SAAA/B,EAAAA,EAAAA,GAAA,CACE6B,KAAK,SACLc,GAAG,WACH+M,IAAI,KACJE,KAAK,KACLzG,YAAY,WACZnH,UAAU,kHACNuM,GACJ,IAGL/C,EAAOK,WACN9J,EAAAA,EAAAA,KAAA,KAAGC,UAAU,4BAA2BC,SAAEuJ,EAAOK,SAAS2C,iBAMhErM,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOmM,QAAQ,eAAelM,UAAU,4CAA2CC,UACjFE,EAAAA,EAAAA,MAAA,QAAMH,UAAU,2BAA0BC,SAAA,EACxCF,EAAAA,EAAAA,KAAC2E,EAAAA,IAAO,CAAC1E,UAAU,uBAAuB,gCAI9CG,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAACoM,EAAAA,GAAU,CACT7K,KAAK,eACL+H,QAASA,EACT+C,MAAO,CACLsB,IAAK,CAAE3G,MAAO,EAAGyF,QAAS,mCAC1BqB,IAAK,CAAE9G,MAAO,GAAIyF,QAAS,iCAE7BF,OAAQwB,IAAA,IAAC,MAAEvB,GAAOuB,EAAA,OAChB/N,EAAAA,EAAAA,KAAA,SAAA/B,EAAAA,EAAAA,GAAA,CACE6B,KAAK,SACLc,GAAG,eACH+M,IAAI,IACJG,IAAI,KACJ1G,YAAY,aACZnH,UAAU,kHACNuM,GACJ,IAGL/C,EAAOM,eACN/J,EAAAA,EAAAA,KAAA,KAAGC,UAAU,4BAA2BC,SAAEuJ,EAAOM,aAAa0C,oBAOtErM,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOmM,QAAQ,OAAOlM,UAAU,4CAA2CC,UACzEE,EAAAA,EAAAA,MAAA,QAAMH,UAAU,2BAA0BC,SAAA,EACxCF,EAAAA,EAAAA,KAACgO,EAAAA,IAAU,CAAC/N,UAAU,uBAAuB,cAIjDG,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAACoM,EAAAA,GAAU,CACT7K,KAAK,OACL+H,QAASA,EACT+C,MAAO,CAAEC,SAAU,oBACnBC,OAAQ0B,IAAA,IAAC,MAAEzB,GAAOyB,EAAA,OAChB7N,EAAAA,EAAAA,MAAA,OAAKH,UAAU,uBAAsBC,SAAA,EAEnCE,EAAAA,EAAAA,MAAA,UACEN,KAAK,SACL0H,QAASA,IAAMgF,EAAMvF,SAAS,QAC9BhH,UAAS,mDAAAI,OACS,SAAhBmM,EAAMxF,MACF,6CACA,sEACH9G,SAAA,EAEHF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,wBAC/BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sBAAqBC,SAAC,aAIxCE,EAAAA,EAAAA,MAAA,UACEN,KAAK,SACL0H,QAASA,IAAMgF,EAAMvF,SAAS,YAC9BhH,UAAS,mDAAAI,OACS,aAAhBmM,EAAMxF,MACF,6CACA,sEACH9G,SAAA,EAEHF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,kBAC/BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sBAAqBC,SAAC,kBAEpC,IAGTuJ,EAAOtE,OACNnF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,4BAA2BC,SAAEuJ,EAAOtE,KAAKsH,iBAM5DrM,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOmM,QAAQ,QAAQlM,UAAU,4CAA2CC,UAC1EE,EAAAA,EAAAA,MAAA,QAAMH,UAAU,2BAA0BC,SAAA,EACxCF,EAAAA,EAAAA,KAAC+G,EAAAA,IAAc,CAAC9G,UAAU,uBAAuB,eAIrDD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,KAACoM,EAAAA,GAAU,CACT7K,KAAK,QACL+H,QAASA,EACT+C,MAAO,CACLU,SAAU/F,KACHpB,GAAsB,yBAI/B2G,OAAQ2B,IAAA,IAAAC,EAAA,IAAC,MAAE3B,GAAO0B,EAAA,OAChBlO,EAAAA,EAAAA,KAACoO,EAAW,CACVjJ,KAAM+E,EACN9E,cAAgBmC,IACd1B,EAAiB0B,GACjBiF,EAAMvF,SAASM,EAAQA,EAAMhG,KAAO,GAAG,EAEzC9C,MAAmB,QAAd0P,EAAE1E,EAAOlC,aAAK,IAAA4G,OAAA,EAAZA,EAAc1B,SACrB,MAIP7G,IACCxF,EAAAA,EAAAA,MAAA,OAAKH,UAAU,iCAAgCC,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,4BAA2BC,SAAE0F,EAAcrE,QACzDvB,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wBAAuBC,SAAE0F,EAAc8B,UACnD9B,EAAc9E,WACbV,EAAAA,EAAAA,MAAA,KAAGH,UAAU,6BAA4BC,SAAA,CAAC,aAAW0F,EAAc9E,mBAO3EV,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,4CAA2CC,SAAC,eAG7DE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAACoM,EAAAA,GAAU,CACT7K,KAAK,WACL+H,QAASA,EACT+C,MAAO,CAAEC,SAAU,wBACnBC,OAAQ8B,IAAA,IAAC,MAAE7B,GAAO6B,EAAA,OAChBjO,EAAAA,EAAAA,MAAA,OAAKH,UAAU,uBAAsBC,SAAA,EAEnCE,EAAAA,EAAAA,MAAA,UACEN,KAAK,SACL0H,QAASA,IAAMgF,EAAMvF,SAAS,QAC9BhH,UAAS,mDAAAI,OACS,SAAhBmM,EAAMxF,MACF,yCACA,gEACH9G,SAAA,EAEHF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,wBAC/BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sBAAqBC,SAAC,aAIxCE,EAAAA,EAAAA,MAAA,UACEN,KAAK,SACL0H,QAASA,IAAMgF,EAAMvF,SAAS,QAC9BhH,UAAS,mDAAAI,OACS,SAAhBmM,EAAMxF,MACF,6CACA,sEACH9G,SAAA,EAEHF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,kBAC/BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sBAAqBC,SAAC,aAIxCE,EAAAA,EAAAA,MAAA,UACEN,KAAK,SACL0H,QAASA,IAAMgF,EAAMvF,SAAS,aAC9BhH,UAAS,mDAAAI,OACS,cAAhBmM,EAAMxF,MACF,+CACA,yEACH9G,SAAA,EAEHF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,kBAC/BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sBAAqBC,SAAC,kBAIxCE,EAAAA,EAAAA,MAAA,UACEN,KAAK,SACL0H,QAASA,IAAMgF,EAAMvF,SAAS,UAC9BhH,UAAS,mDAAAI,OACS,WAAhBmM,EAAMxF,MACF,yCACA,gEACH9G,SAAA,EAEHF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,kBAC/BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sBAAqBC,SAAC,gBAEpC,IAGTuJ,EAAO3I,WACNd,EAAAA,EAAAA,KAAA,KAAGC,UAAU,4BAA2BC,SAAEuJ,EAAO3I,SAAS2L,iBAQhErM,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOmM,QAAQ,aAAalM,UAAU,4CAA2CC,UAC/EE,EAAAA,EAAAA,MAAA,QAAMH,UAAU,2BAA0BC,SAAA,EACxCF,EAAAA,EAAAA,KAACsO,EAAAA,IAAO,CAACrO,UAAU,uBAAuB,oBAI9CG,EAAAA,EAAAA,MAAA,OAAKH,UAAU,mCAAkCC,SAAA,EAC/CF,EAAAA,EAAAA,KAAA,SACEF,KAAK,OACLc,GAAG,aACHkG,IAAKyB,EACLgG,OAAO,iCACPtH,SAvoBaC,IACzB,MAAMsH,EAAOtH,EAAEnD,OAAO0K,MAAM,GAG5B,IAAKD,EAEH,OAOF,IAHmB,CAAC,aAAc,YAAa,aAG/BpL,SAASoL,EAAK1O,MAG5B,YADAwI,EAAe,gDAQjB,GAAIkG,EAAKE,KAHO,QAMd,YADApG,EAAe,sCAKjBA,EAAe,IACfF,EAAaoG,GAGb,MAAMG,EAAS,IAAIC,WACnBD,EAAOE,UAAY,KAEjB3G,EAAgByG,EAAOG,OAAO,EAEhCH,EAAOI,cAAcP,EAAK,EAimBdvO,UAAU,YAEZG,EAAAA,EAAAA,MAAA,UACEN,KAAK,SACL0H,QAjmBWwH,KACvBzG,EAAapC,QAAQ8I,OAAO,EAimBhBhP,UAAU,uNAAsNC,SAAA,EAEhOF,EAAAA,EAAAA,KAACkP,EAAAA,IAAQ,CAACjP,UAAU,uBAAuB,kBAG5CgI,IACC7H,EAAAA,EAAAA,MAAA,OAAKH,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OACEmP,IAAKlH,EACLmH,IAAI,gBACJnP,UAAU,uCAEZD,EAAAA,EAAAA,KAAA,UACEF,KAAK,SACL0H,QAASA,KACPU,EAAgB,MAChBE,EAAa,KAAK,EAEpBnI,UAAU,mHAAkHC,SAC7H,eAMNmI,IACCrI,EAAAA,EAAAA,KAAA,KAAGC,UAAU,4BAA2BC,SAAEmI,KAE5CrI,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6BAA4BC,SAAC,4DAM5CE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOmM,QAAQ,OAAOlM,UAAU,4CAA2CC,UACzEE,EAAAA,EAAAA,MAAA,QAAMH,UAAU,2BAA0BC,SAAA,EACxCF,EAAAA,EAAAA,KAACqP,EAAAA,IAAM,CAACpP,UAAU,uBAAuB,aAI7CD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,KAACoM,EAAAA,GAAU,CACT7K,KAAK,OACL+H,QAASA,EACTiD,OAAQ+C,IAAA,IAAG9C,OAAO,SAAEvF,EAAQ,MAAED,IAASsI,EAAA,OACrClP,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EAEEE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,SACEF,KAAK,OACLc,GAAG,WACHoG,MAAOmD,EACPlD,SAAUoD,EACVjD,YAAY,6BACZnH,UAAU,8HACVsP,WAAarI,IACG,UAAVA,EAAEsI,MACJtI,EAAEuI,iBACFnF,EAAarD,EAAUD,GACzB,KAGJhH,EAAAA,EAAAA,KAAA,UACEF,KAAK,SACL0H,QAASA,IAAM8C,EAAarD,EAAUD,GACtC/G,UAAU,sOAAqOC,SAChP,UAMHF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BC,UACrB,kBAAV8G,EAAqBA,EAAM+B,MAAM,KAAKxI,KAAIyK,GAAOA,EAAIR,SAAQS,QAAOD,GAAOA,IAAOhE,GAAS,IAAIzG,KAAI,CAACyK,EAAK0E,KAChHtP,EAAAA,EAAAA,MAAA,OAAiBH,UAAU,oGAAmGC,SAAA,CAC3H8K,GACDhL,EAAAA,EAAAA,KAAA,UACEF,KAAK,SACL0H,QAASA,IA/uBXmI,EAACC,EAAa3I,EAAUsD,KAE9C,MAKMa,GAL0C,kBAAhBb,EAC5BA,EAAYxB,MAAM,KAAKxI,KAAIyK,GAAOA,EAAIR,SAAQS,QAAOD,GAAOA,IAC5D1K,MAAM4K,QAAQX,GAAeA,EAAc,IAGVU,QAAOD,GAAOA,IAAQ4E,IAG3D3I,EAASmE,EAAYC,KAAK,OAG1B1B,EAAS,YAAayB,EAAY,EAkuBKuE,CAAgB3E,EAAK/D,EAAUD,GAC9C/G,UAAU,gEAA+DC,SAC1E,WANOwP,SAYV,OAIZ1P,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6BAA4BC,SAAC,yDAM5CE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,4CAA2CC,SAAC,gBAC7DE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,wCAAuCC,SAAA,EAEpDE,EAAAA,EAAAA,MAAA,SAAOH,UAAU,kCAAiCC,SAAA,EAChDF,EAAAA,EAAAA,KAACoM,EAAAA,GAAU,CACT7K,KAAK,WACL+H,QAASA,EACTiD,OAAQsD,IAAA,IAAGrD,OAAO,SAAEvF,EAAQ,MAAED,IAAS6I,EAAA,OACrC7P,EAAAA,EAAAA,KAAA,SACEF,KAAK,QACLc,GAAG,cACHkP,SAAmB,IAAV9I,EACTC,SAAUA,IAAMA,GAAS,GACzBhH,UAAU,iEACV,KAGNG,EAAAA,EAAAA,MAAA,QAAMH,UAAU,OAAMC,SAAA,EACpBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,4BAA2BC,SAAC,kBAC5CF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wBAAuBC,SAAC,+EAIzCE,EAAAA,EAAAA,MAAA,SAAOH,UAAU,kCAAiCC,SAAA,EAChDF,EAAAA,EAAAA,KAACoM,EAAAA,GAAU,CACT7K,KAAK,WACL+H,QAASA,EACTiD,OAAQwD,IAAA,IAAGvD,OAAO,SAAEvF,EAAQ,MAAED,IAAS+I,EAAA,OACrC/P,EAAAA,EAAAA,KAAA,SACEF,KAAK,QACLc,GAAG,eACHkP,SAAmB,IAAV9I,EACTC,SAAUA,IAAMA,GAAS,GACzBhH,UAAU,iEACV,KAGNG,EAAAA,EAAAA,MAAA,QAAMH,UAAU,OAAMC,SAAA,EACpBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,4BAA2BC,SAAC,mBAC5CF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wBAAuBC,SAAC,6GAO/CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,KAAA,UACEF,KAAK,SACLuH,SAAUU,EACV9H,UAAS,sHAAAI,OACP0H,EACI,mCACA,+GACH7H,SAEF6H,EAAe,cAAgB,wBAIlC,EAoCVJ,EAA0BqI,aAAe,CACvCpI,cAAe,KACfE,UAAW,GACXC,cAAc,EACdC,iBAAkB,MAGpB,UCv+BMiI,EAAkCpQ,IAAgD,IAA/C,cAAE+H,EAAa,SAAEC,EAAQ,aAAEE,GAAclI,EAChF,MAAM,QACJyJ,EAAO,aACPC,EAAY,MACZG,EACAF,WAAW,OAAEC,KACXG,EAAAA,EAAAA,IAAQ,CACVhC,cAAeA,GAAiB,CAC9BsI,UAAW,SACXC,SAAU,EACVC,QAAS,GACTC,WAAY,MAKVH,EAAYxG,EAAM,aAkBxB,OACE1J,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,QAAM6H,SAAU0B,GAjBC3G,IACnBiF,EAASjF,EAAK,IAgB8B1C,UACxCE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,YAAWC,SAAA,EAExBE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,0CAAyCC,UACxDE,EAAAA,EAAAA,MAAA,QAAMH,UAAU,2BAA0BC,SAAA,EACxCF,EAAAA,EAAAA,KAACsQ,EAAAA,IAAM,CAACrQ,UAAU,uBAAuB,kBAI7CG,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAACoM,EAAAA,GAAU,CACT7K,KAAK,YACL+H,QAASA,EACT+C,MAAO,CAAEC,SAAU,yBACnBC,OAAQrH,IAAA,IAAC,MAAEsH,GAAOtH,EAAA,OAChB9E,EAAAA,EAAAA,MAAA,UAAAnC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACE2C,GAAG,YACHX,UAAU,8GACNuM,GAAK,IAAAtM,SAAA,EAETF,EAAAA,EAAAA,KAAA,UAAQgH,MAAM,QAAO9G,SAAC,WACtBF,EAAAA,EAAAA,KAAA,UAAQgH,MAAM,SAAQ9G,SAAC,YACvBF,EAAAA,EAAAA,KAAA,UAAQgH,MAAM,UAAS9G,SAAC,eACjB,IAGZuJ,EAAOyG,YACNlQ,EAAAA,EAAAA,KAAA,KAAGC,UAAU,4BAA2BC,SAAEuJ,EAAOyG,UAAUzD,iBAMjErM,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOmM,QAAQ,WAAWlM,UAAU,0CAAyCC,UAC3EF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,2BAA0BC,SAAC,aAI7CE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,KAACoM,EAAAA,GAAU,CACT7K,KAAK,WACL+H,QAASA,EACT+C,MAAO,CACLC,SAAU,uBACVqB,IAAK,CAAE3G,MAAO,EAAGyF,QAAS,gCAE5BF,OAAQG,IAAA,IAAC,MAAEF,GAAOE,EAAA,OAChB1M,EAAAA,EAAAA,KAAA,SAAA/B,EAAAA,EAAAA,GAAA,CACE6B,KAAK,SACLc,GAAG,WACH+M,IAAI,IACJ1N,UAAU,wHACNuM,GACJ,KAGNxM,EAAAA,EAAAA,KAAA,QAAMC,UAAU,wBAAuBC,SACtB,UAAdgQ,EAAwB,SACT,WAAdA,EAAyB,UAAY,gBAG1CzG,EAAO0G,WACNnQ,EAAAA,EAAAA,KAAA,KAAGC,UAAU,4BAA2BC,SAAEuJ,EAAO0G,SAAS1D,aAK/C,WAAdyD,IACC9P,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,+CAA8CC,SAAC,oBAGhEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCC,SAtF/C,CACjB,CAAE8G,MAAO,SAAUuJ,MAAO,UAC1B,CAAEvJ,MAAO,UAAWuJ,MAAO,WAC3B,CAAEvJ,MAAO,YAAauJ,MAAO,aAC7B,CAAEvJ,MAAO,WAAYuJ,MAAO,YAC5B,CAAEvJ,MAAO,SAAUuJ,MAAO,UAC1B,CAAEvJ,MAAO,WAAYuJ,MAAO,YAC5B,CAAEvJ,MAAO,SAAUuJ,MAAO,WAgFFhQ,KAAIiQ,IACdpQ,EAAAA,EAAAA,MAAA,OAAqBH,UAAU,oBAAmBC,SAAA,EAChDF,EAAAA,EAAAA,KAACoM,EAAAA,GAAU,CACT7K,KAAK,aACL+H,QAASA,EACTiD,OAAQM,IAAA,IAAA4D,EAAA,IAAC,MAAEjE,GAAOK,EAAA,OAChB7M,EAAAA,EAAAA,KAAA,SACEF,KAAK,WACLc,GAAE,OAAAP,OAASmQ,EAAIxJ,OACfA,MAAOwJ,EAAIxJ,MACX8I,QAAoB,QAAbW,EAAEjE,EAAMxF,aAAK,IAAAyJ,OAAA,EAAXA,EAAarN,SAASoN,EAAIxJ,OACnCC,SAAUC,IACR,MAAMwJ,EAAYxJ,EAAEnD,OAAO+L,QACrBa,EAAcnE,EAAMxF,OAAS,GAE/B0J,EACFlE,EAAMvF,SAAS,IAAI0J,EAAaH,EAAIxJ,QAEpCwF,EAAMvF,SACJ0J,EAAY1F,QAAOjE,GAASA,IAAUwJ,EAAIxJ,QAE9C,EAEF/G,UAAU,8EACV,KAGND,EAAAA,EAAAA,KAAA,SAAOmM,QAAO,OAAA9L,OAASmQ,EAAIxJ,OAAS/G,UAAU,wBAAuBC,SAClEsQ,EAAID,UA3BCC,EAAIxJ,WAgCjByC,EAAO4G,aACNrQ,EAAAA,EAAAA,KAAA,KAAGC,UAAU,4BAA2BC,SAAEuJ,EAAO4G,WAAW5D,cAMlErM,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOmM,QAAQ,UAAUlM,UAAU,0CAAyCC,UAC1EE,EAAAA,EAAAA,MAAA,QAAMH,UAAU,2BAA0BC,SAAA,EACxCF,EAAAA,EAAAA,KAAC4M,EAAAA,IAAa,CAAC3M,UAAU,uBAAuB,iBAIpDG,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAACoM,EAAAA,GAAU,CACT7K,KAAK,UACL+H,QAASA,EACTiD,OAAQU,IAAA,IAAC,MAAET,GAAOS,EAAA,OAChBjN,EAAAA,EAAAA,KAAA,SAAA/B,EAAAA,EAAAA,GAAA,CACE6B,KAAK,OACLc,GAAG,UACHX,UAAU,8GACNuM,GACJ,KAGNxM,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6BAA4BC,SAAC,uCAM9CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,KAAA,UACEF,KAAK,SACLuH,SAAUU,EACV9H,UAAS,sHAAAI,OACP0H,EACI,mCACA,+GACH7H,SACJ,oCAMH,EAeV+P,EAAgCD,aAAe,CAC7CpI,cAAe,KACfG,cAAc,GAGhB,U,sDCtNA,MAuUA,EAvUoB,CAOlB6I,YAAalK,MAAO+E,EAAWtD,KAC7B,IAWE,MAAM0I,GAAa5S,EAAAA,EAAAA,GAAA,GAAQwN,GACvBoF,EAAc3E,mBAET2E,EAAc3E,WAIvB,MACM4E,EAAG,GAAAzQ,OADO0Q,wBACM,WAIhBpS,QAAiBqS,EAAAA,EAAMC,KAAKH,EAAKD,GAGvC,IAAIK,EAAevS,EAASiE,KAAKA,MAAQjE,EAASiE,KAKlD,GAAIuF,GAAa+I,IAAiBA,EAAatQ,IAAMsQ,EAAaC,KAAM,CAEtE,MAAMC,EAAUF,EAAatQ,IAAMsQ,EAAaC,IAU1CE,EAAaL,EAAAA,EAAMM,SAASC,QAAQC,OAAsB,cAIhE,IAAIC,EAAQ,KAkBZ,GAjBIJ,GAAcA,EAAWzN,WAAW,aACtC6N,EAAQJ,EAAWtI,MAAM,KAAK,IAK3B0I,IACHA,EAAQC,aAAaC,QAAQ,UAK1BF,IAEHA,EAAQ,gLAGLA,EAEH,MAAM,IAAIG,MAAM,qDAMlB,IAQE,MAAMC,QAAiBC,EAAAA,EAAAA,GAAiB3J,EAAWiJ,EAASK,GAI5D,GAAII,EAAU,CAKZ,MAAME,EAAgB,CAAEC,YAAaH,GAK/BI,EAAc,GAAA5R,OADJ0Q,wBACiB,YAAA1Q,OAAW+Q,EAAO,UAGnD,IAGE,IAAIc,EAAYT,EACZA,IAAUA,EAAM7N,WAAW,aAC7BsO,EAAS,UAAA7R,OAAaoR,IASxB,MAAMU,QAA6BnB,EAAAA,EAAMoB,IACvCH,EACAF,EACA,CAAER,QAAS,CAAE,cAAiBW,KAQhC,OAJqBC,EAAqBvP,KAAKA,MAAQuP,EAAqBvP,IAK9E,CAAE,MAAOyP,GASP,OANIA,EAAY1T,SAMTuS,CACT,CACF,CAGF,CAAE,MAAOoB,GASP,OANIA,EAAW3T,SAMRuS,CACT,CACF,CASA,OAAOA,CACT,CAAE,MAAOzS,GAQP,MALIA,EAAME,SAKJF,CACR,GASF8T,YAAa7L,MAAO0K,EAAS3F,KAC3B,IAEE,MAAM+G,EAAUzB,wBAKVM,EAAaL,EAAAA,EAAMM,SAASC,QAAQC,OAAsB,cAIhE,IAAIC,EAAQ,KACRJ,GAAcA,EAAWzN,WAAW,aACtC6N,EAAQJ,EAAWtI,MAAM,KAAK,IAK3B0I,IACHA,EAAQC,aAAaC,QAAQ,UAK1BF,IAEHA,EAAQ,+KAGV,MAAM9S,QAAiBqS,EAAAA,EAAMoB,IAAI,GAAD/R,OAC3BmS,EAAO,YAAAnS,OAAW+Q,GACrB3F,EACA,CAAE8F,QAAS,CAAE,eAAgBE,KAK/B,OAFqB9S,EAASiE,KAAKA,MAAQjE,EAASiE,IAGtD,CAAE,MAAOnE,GAEP,MAAMA,CACR,GAQFgU,YAAa/L,UACX,IAQE,aAFM,IAAIgM,SAAQC,GAAWlM,WAAWkM,EAAS,OAE1C,CACL/R,GAAIwQ,EACJxS,OAAQ,WACRgU,YAAY,IAAItO,MAAOuO,cAE3B,CAAE,MAAOpU,GAEP,MAAMA,CACR,GAOFqU,aAAcpM,UACZ,IAQE,aAFM,IAAIgM,SAAQC,GAAWlM,WAAWkM,EAAS,OAE1C,CACL,CAAE/R,GAAI,OAAQW,KAAM,wBAAyBmG,QAAS,sBAAuBqL,SAAU,IACvF,CAAEnS,GAAI,OAAQW,KAAM,qBAAsBmG,QAAS,gCAAiCqL,SAAU,IAC9F,CAAEnS,GAAI,OAAQW,KAAM,uBAAwBmG,QAAS,yBAA0BqL,SAAU,IACzF,CAAEnS,GAAI,OAAQW,KAAM,+BAAgCmG,QAAS,8BAA+BqL,SAAU,IACtG,CAAEnS,GAAI,OAAQW,KAAM,uBAAwBmG,QAAS,uBAAwBqL,SAAU,IAE3F,CAAE,MAAOtU,GAEP,MAAMA,CACR,GAOFuU,kBAAmBtM,UACjB,IAQE,aAFM,IAAIgM,SAAQC,GAAWlM,WAAWkM,EAAS,OAE1C,CACL,CACE/R,GAAI,YACJW,KAAM,wBACNR,YAAa,+DACb+I,SAAU,GACVC,aAAc,EACd3I,KAAM,CAAC,SAAU,SAAU,eAE7B,CACER,GAAI,YACJW,KAAM,uBACNR,YAAa,qDACb+I,SAAU,IACVC,aAAc,GACd3I,KAAM,CAAC,QAAS,aAAc,eAEhC,CACER,GAAI,YACJW,KAAM,kBACNR,YAAa,uEACb+I,SAAU,IACVC,aAAc,GACd3I,KAAM,CAAC,aAAc,aAAc,iBAGzC,CAAE,MAAO3C,GAEP,MAAMA,CACR,I,wBC5TJ,MA+PA,EA/P0BwU,KACxB,MAAMjU,GAAWC,EAAAA,EAAAA,OACViU,EAAiBC,IAAsB7N,EAAAA,EAAAA,WAAS,IAChD8N,EAAgBC,IAAqB/N,EAAAA,EAAAA,UAAS,OAC9CgO,EAAgBC,IAAqBjO,EAAAA,EAAAA,WAAS,IAC9CkO,EAAQC,IAAanO,EAAAA,EAAAA,WAAS,IAG7B1C,KAAMkF,GC0GY,WAAmB,IAAlBlK,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACtC,OAAOG,EAAAA,EAAAA,IAAQC,EAAAA,EAAAA,GAAC,CACdC,SAAU,CAAC,aACXC,QAASuV,EAAYZ,aACrBxU,UAAW,KACRV,GAEP,CDjH8B+V,IACpB/Q,KAAMgR,GCwHiB,WAAmB,IAAlBhW,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3C,OAAOG,EAAAA,EAAAA,IAAQC,EAAAA,EAAAA,GAAC,CACdC,SAAU,CAAC,kBACXC,QAASuV,EAAYV,kBACrB1U,UAAW,KACRV,GAEP,CD/H8BiW,GACtBC,EClBsBC,MAC5B,MAAMjV,GAAcC,EAAAA,EAAAA,MAEpB,OAAOG,EAAAA,EAAAA,GAAY,CACjBC,WAAYU,IAA+B,IAA9B,UAAE4L,EAAS,UAAEtD,GAAWtI,EAYnC,OAAO6T,EAAY9C,YAAYnF,EAAWtD,EAAU,EAGtD/I,UAAYwD,IAIV9D,EAAYO,kBAAkB,CAAEnB,SAAU,CAAC,gBAG3CY,EAAYO,kBAAkB,CAAEnB,SAAU,CAAC,aAGvC0E,GAAQA,EAAKhC,IACf9B,EAAYQ,aAAa,CAAC,QAASsD,EAAKhC,IAAKgC,EAC/C,EAGFpD,QAAUf,IACsD,GAEhE,EDnB0BsV,IAGtB,WACJC,EAAU,iBACVC,EAAgB,mBAChBC,EAAkB,kBAClBC,IACEC,EAAAA,EAAAA,MAGJpR,EAAAA,EAAAA,YAAU,KACHgR,GACHC,EAAiB,CACfpT,MAAO,GACPE,YAAa,GACbW,KAAM,GACNmI,KAAM,GACN7I,SAAU,GACV8I,SAAU,GACVC,aAAc,GACdC,UAAU,EACVC,aAAa,EACb7I,KAAM,GACNiT,iBAAkB,CAChBnE,UAAW,SACXC,SAAU,EACVC,QAAS,GACTC,WAAY,KAGlB,GACC,CAAC2D,EAAYC,IAGhB,MAAMjM,EAAmBmM,GAAqBP,EAC1CA,EAAUU,MAAKC,GAAYA,EAAS3T,KAAOuT,IAC3C,KAwGJ,OACEnU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCC,UACpDE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,4CAA2CC,SAAA,CAGvDgT,IACClT,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iFAAgFC,UAC7FE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,oDAAmDC,SAAA,EAChEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,uCAAsCC,SAAC,mCAErDE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,qBAAoBC,SAAC,+FAElCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iDAAgDC,UAC7DE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,UAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAwBuU,MAAM,6BAA6BtQ,QAAQ,YAAYD,KAAK,eAAc/D,UAC/GF,EAAAA,EAAAA,KAAA,QAAMmE,SAAS,UAAUC,EAAE,mIAAmIC,SAAS,iBAG3KrE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBE,EAAAA,EAAAA,MAAA,KAAGH,UAAU,wBAAuBC,SAAA,CAAC,kDACWF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAeC,SAAC,gBAAkB,mBAAeF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAeC,SAAC,YAAc,sBAMpKoT,IACClT,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,qBAAoBC,SAAC,4EAClCE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,SACEF,KAAK,OACL2U,UAAQ,EACRzN,MAAK,GAAA3G,OAAKqU,OAAO1T,SAAS2T,OAAM,YAAAtU,OAAW+S,GAC3CnT,UAAU,uEAEZD,EAAAA,EAAAA,KAAA,UACEwH,QA1DCoN,KACrB,MAAMC,EAAQ,GAAAxU,OAAMqU,OAAO1T,SAAS2T,OAAM,YAAAtU,OAAW+S,GACrD0B,UAAUC,UAAUC,UAAUH,GAC3BI,MAAK,KACJxB,GAAU,GAEVhN,YAAW,IAAMgN,GAAU,IAAQ,IAAK,IAEzCyB,OAAMC,IACiC,GACtC,EAiDgBlV,UAAS,OAAAI,OAASmT,EAAS,eAAiB,gBAAe,4BAA2BtT,SAErFsT,GAASxT,EAAAA,EAAAA,KAACoV,EAAAA,IAAO,KAAMpV,EAAAA,EAAAA,KAACqV,EAAAA,IAAM,gBAOzCrV,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UACpCF,EAAAA,EAAAA,KAAA,UACEwH,QAxDO8N,KACrBnC,GAAmB,GACnBnU,EAAS,YAAY,EAuDPiB,UAAU,sFAAqFC,SAChG,qBAQTE,EAAAA,EAAAA,MAAA,UACEoH,QAtFW+N,KACjBvW,EAAS,QAAQ,EAsFXiB,UAAU,iFAAgFC,SAAA,EAE1FF,EAAAA,EAAAA,KAACwV,EAAAA,IAAW,CAACvV,UAAU,UACvBD,EAAAA,EAAAA,KAAA,QAAAE,SAAM,+BAGRF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qDAAoDC,UACjEE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oDAAmDC,SAAC,oBAClEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,qBAAoBC,SAAC,8EAIlCF,EAAAA,EAAAA,KAAC2H,EAAyB,CACxBC,cAAeoM,EACfnM,SAnLcnB,MAAO+O,EAAUtN,KACzC,IAgBE,MAAMuN,EAAiBC,EAAAA,GAAM7S,QAAQ,0BAI/BgM,QAAegF,EAAoB8B,YAAY,CACnDnK,WAASxN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJwX,GAAQ,IACX3V,KAAM,UAERqI,cAMEA,EACFwN,EAAAA,GAAME,OAAOH,EAAgB,CAC3BnJ,OAAQ,iDACRzM,KAAM,UACN+C,WAAW,EACXiT,UAAW,MAGbH,EAAAA,GAAME,OAAOH,EAAgB,CAC3BnJ,OAAQ,8BACRzM,KAAM,UACN+C,WAAW,EACXiT,UAAW,MAKfzC,EAAkBvE,EAAOqC,KAAOrC,EAAOlO,IAGvC,MAAMmV,GAAkC,IAAtBN,EAASzL,UAA0C,YAApByL,EAASxJ,OAC1DsH,EAAkBwC,GAQlB5C,GAAmB,GAGnBe,GACF,CAAE,MAAOzV,GAEPkX,EAAAA,GAAMlX,MAAM,4BAA8BA,EAAMgO,SAAW,iBAC7D,GAgHU3E,UAAWA,GAAa,GACxBC,aAAc+L,EAAoBkC,UAClChO,iBAAkBA,KAIT,OAAVgM,QAAU,IAAVA,OAAU,EAAVA,EAAY/J,eACX7J,EAAAA,EAAAA,MAAA,OAAKH,UAAU,qCAAoCC,SAAA,EACjDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yCAAwCC,SAAC,8BAGvDF,EAAAA,EAAAA,KAACiQ,EAA+B,CAC9BrI,cAAeoM,EAAWK,iBAC1BxM,SAzHsBoO,IACpChC,EAAiB,CAAEI,iBAAkB4B,GAAgB,EAyHvClO,aAAc+L,EAAoBkC,wBAO1C,EElBV,EAhP2BE,KACzB,MAAMlX,GAAWC,EAAAA,EAAAA,OAGVkX,EAAYC,IAAiB9Q,EAAAA,EAAAA,UAAS,CAC3C/D,KAAM,GACNR,YAAa,GACbC,SAAU,GACV+R,SAAU,GACV/I,UAAU,EACVqM,iBAAkB,SAClBjV,KAAM,KAIFkV,EAAqBpP,IACzB,MAAM,KAAE3F,EAAI,MAAEyF,EAAK,KAAElH,EAAI,QAAEgQ,GAAY5I,EAAEnD,OACzCqS,GAAanY,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACVkY,GAAU,IACb,CAAC5U,GAAgB,aAATzB,EAAsBgQ,EAAU9I,IACxC,EA4CJ,OACEhH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCC,UACpDE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,4CAA2CC,SAAA,EAExDE,EAAAA,EAAAA,MAAA,UACEoH,QATW+N,KACjBvW,EAAS,QAAQ,EASXiB,UAAU,iFAAgFC,SAAA,EAE1FF,EAAAA,EAAAA,KAACwV,EAAAA,IAAW,CAACvV,UAAU,UACvBD,EAAAA,EAAAA,KAAA,QAAAE,SAAM,+BAGRF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qDAAoDC,UACjEE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oDAAmDC,SAAC,oBAClEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,qBAAoBC,SAAC,uFAIlCE,EAAAA,EAAAA,MAAA,QAAMyH,SApCYX,IAC1BA,EAAEuI,iBAKF8G,MAAM,mGAGNvX,EAAS,QAAQ,EA2B0BkB,SAAA,EAEjCE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOmM,QAAQ,OAAOlM,UAAU,+CAA8CC,SAAC,kBAG/EF,EAAAA,EAAAA,KAAA,SACEF,KAAK,OACLc,GAAG,OACHW,KAAK,OACLyF,MAAOmP,EAAW5U,KAClB0F,SAAUqP,EACVrW,UAAU,2GACVmH,YAAY,oCACZkF,UAAQ,QAKZlM,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOmM,QAAQ,cAAclM,UAAU,+CAA8CC,SAAC,kBAGtFF,EAAAA,EAAAA,KAAA,YACEY,GAAG,cACHW,KAAK,cACLyF,MAAOmP,EAAWpV,YAClBkG,SAAUqP,EACV3J,KAAK,IACL1M,UAAU,2GACVmH,YAAY,sDACZkF,UAAQ,QAKZlM,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBE,EAAAA,EAAAA,MAAA,SAAO+L,QAAQ,WAAWlM,UAAU,+CAA8CC,SAAA,EAChFF,EAAAA,EAAAA,KAAC+G,EAAAA,IAAc,CAAC9G,UAAU,gBAAgB,gBAE5CD,EAAAA,EAAAA,KAAA,SACEF,KAAK,OACLc,GAAG,WACHW,KAAK,WACLyF,MAAOmP,EAAWnV,SAClBiG,SAAUqP,EACVrW,UAAU,2GACVmH,YAAY,+CAKhBhH,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBE,EAAAA,EAAAA,MAAA,SAAO+L,QAAQ,WAAWlM,UAAU,+CAA8CC,SAAA,EAChFF,EAAAA,EAAAA,KAAC2E,EAAAA,IAAO,CAAC1E,UAAU,gBAAgB,uBAErCD,EAAAA,EAAAA,KAAA,SACEF,KAAK,SACLc,GAAG,WACHW,KAAK,WACLoM,IAAI,IACJG,IAAI,MACJ9G,MAAOmP,EAAWpD,SAClB9L,SAAUqP,EACVrW,UAAU,8GAEZD,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6BAA4BC,SAAC,yDAI5CE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBE,EAAAA,EAAAA,MAAA,SAAO+L,QAAQ,mBAAmBlM,UAAU,+CAA8CC,SAAA,EACxFF,EAAAA,EAAAA,KAAC4M,EAAAA,IAAa,CAAC3M,UAAU,gBAAgB,yBAE3CG,EAAAA,EAAAA,MAAA,UACEQ,GAAG,mBACHW,KAAK,mBACLyF,MAAOmP,EAAWE,iBAClBpP,SAAUqP,EACVrW,UAAU,2GAA0GC,SAAA,EAEpHF,EAAAA,EAAAA,KAAA,UAAQgH,MAAM,SAAQ9G,SAAC,YACvBF,EAAAA,EAAAA,KAAA,UAAQgH,MAAM,WAAU9G,SAAC,eACzBF,EAAAA,EAAAA,KAAA,UAAQgH,MAAM,UAAS9G,SAAC,aACxBF,EAAAA,EAAAA,KAAA,UAAQgH,MAAM,SAAQ9G,SAAC,kBAK3BE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,SACEF,KAAK,WACLc,GAAG,WACHW,KAAK,WACLuO,QAASqG,EAAWnM,SACpB/C,SAAUqP,EACVrW,UAAU,2EAEZD,EAAAA,EAAAA,KAAA,SAAOmM,QAAQ,WAAWlM,UAAU,mCAAkCC,SAAC,+CAIzEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,kCAAiCC,SAAC,gEAMjDE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBE,EAAAA,EAAAA,MAAA,SAAO+L,QAAQ,OAAOlM,UAAU,+CAA8CC,SAAA,EAC5EF,EAAAA,EAAAA,KAACwW,EAAAA,IAAK,CAACvW,UAAU,gBAAgB,YAEnCD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BC,SACvCiW,EAAW/U,KAAKb,KAAI,CAACyK,EAAK0E,KACzBtP,EAAAA,EAAAA,MAAA,QAEEH,UAAU,wFAAuFC,SAAA,CAEhG8K,GACDhL,EAAAA,EAAAA,KAAA,UACEF,KAAK,SACLG,UAAU,6CACVuH,QAASA,KAAMiP,OAvKlB7G,EAuK4B5E,OAtK7CoL,GAAanY,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACVkY,GAAU,IACb/U,KAAM+U,EAAW/U,KAAK6J,QAAOD,GAAOA,IAAQ4E,OAH7BA,KAuKiC,EAAA1P,SAC/B,WARIwP,QAcX1P,EAAAA,EAAAA,KAAA,SACEF,KAAK,OACLc,GAAG,OACHX,UAAU,2GACVmH,YAAY,6BACZsP,UAlMQxP,IACtB,GAAc,UAAVA,EAAEsI,KAA6C,KAA1BtI,EAAEnD,OAAOiD,MAAMwD,OAAe,CACrDtD,EAAEuI,iBACF,MAAMkH,EAASzP,EAAEnD,OAAOiD,MAAMwD,OACzB2L,EAAW/U,KAAKgC,SAASuT,IAC5BP,GAAanY,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACVkY,GAAU,IACb/U,KAAM,IAAI+U,EAAW/U,KAAMuV,MAG/BzP,EAAEnD,OAAOiD,MAAQ,EACnB,MAyLYhH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6BAA4BC,SAAC,4DAI5CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,UAC/BF,EAAAA,EAAAA,KAAA,UACEF,KAAK,SACLG,UAAU,sFAAqFC,SAChG,gCAQP,ECyJV,EArY4B0W,KAC1B,MAAM5X,GAAWC,EAAAA,EAAAA,OAGV4X,EAAcC,IAAmBxR,EAAAA,EAAAA,UAAS,CAC/C/D,KAAM,GACNR,YAAa,GACb2G,QAAS,GACTqP,MAAO,GACPC,QAAS,GACTC,aAAc,aACdC,cAAe,CACbC,OAAQ,CAAEC,KAAM,QAASC,MAAO,QAASC,QAAQ,GACjDC,QAAS,CAAEH,KAAM,QAASC,MAAO,QAASC,QAAQ,GAClDE,UAAW,CAAEJ,KAAM,QAASC,MAAO,QAASC,QAAQ,GACpDG,SAAU,CAAEL,KAAM,QAASC,MAAO,QAASC,QAAQ,GACnDI,OAAQ,CAAEN,KAAM,QAASC,MAAO,QAASC,QAAQ,GACjDK,SAAU,CAAEP,KAAM,QAASC,MAAO,QAASC,QAAQ,GACnDM,OAAQ,CAAER,KAAM,QAASC,MAAO,QAASC,QAAQ,IAEnDO,UAAW,GACXzW,KAAM,KAIFkV,EAAqBpP,IACzB,MAAM,KAAE3F,EAAI,MAAEyF,EAAK,KAAElH,EAAI,QAAEgQ,GAAY5I,EAAEnD,OACzC+S,GAAe7Y,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACZ4Y,GAAY,IACf,CAACtV,GAAgB,aAATzB,EAAsBgQ,EAAU9I,IACxC,EAIE8Q,EAAoBA,CAACtH,EAAKhE,EAAOxF,KACrC8P,GAAe7Y,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACZ4Y,GAAY,IACfK,eAAajZ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACR4Y,EAAaK,eAAa,IAC7B,CAAC1G,IAAGvS,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACC4Y,EAAaK,cAAc1G,IAAI,IAClC,CAAChE,GAA6BxF,QAGlC,EAiFE+Q,EAAY,CAChBZ,OAAQ,SACRI,QAAS,UACTC,UAAW,YACXC,SAAU,WACVC,OAAQ,SACRC,SAAU,WACVC,OAAQ,UAGV,OACE5X,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCC,UACpDE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,4CAA2CC,SAAA,EAExDE,EAAAA,EAAAA,MAAA,UACEoH,QA5CW+N,KACjBvW,EAAS,QAAQ,EA4CXiB,UAAU,iFAAgFC,SAAA,EAE1FF,EAAAA,EAAAA,KAACwV,EAAAA,IAAW,CAACvV,UAAU,UACvBD,EAAAA,EAAAA,KAAA,QAAAE,SAAM,+BAGRF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qDAAoDC,UACjEE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oDAAmDC,SAAC,wBAClEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,qBAAoBC,SAAC,6EAIlCE,EAAAA,EAAAA,MAAA,QAAMyH,SAvEYX,IAC1BA,EAAEuI,iBAKF8G,MAAM,oGAGNvX,EAAS,QAAQ,EA8D0BkB,SAAA,EAEjCE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOmM,QAAQ,OAAOlM,UAAU,+CAA8CC,SAAC,oBAG/EF,EAAAA,EAAAA,KAAA,SACEF,KAAK,OACLc,GAAG,OACHW,KAAK,OACLyF,MAAO6P,EAAatV,KACpB0F,SAAUqP,EACVrW,UAAU,2GACVmH,YAAY,2BACZkF,UAAQ,QAKZlM,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOmM,QAAQ,eAAelM,UAAU,+CAA8CC,SAAC,oBAGvFF,EAAAA,EAAAA,KAAA,UACEY,GAAG,eACHW,KAAK,eACLyF,MAAO6P,EAAaI,aACpBhQ,SAAUqP,EACVrW,UAAU,2GACVqM,UAAQ,EAAApM,SAlFF,CACpB,CAAE8G,MAAO,aAAcuJ,MAAO,cAC9B,CAAEvJ,MAAO,OAAQuJ,MAAO,WACxB,CAAEvJ,MAAO,MAAOuJ,MAAO,OACvB,CAAEvJ,MAAO,cAAeuJ,MAAO,eAC/B,CAAEvJ,MAAO,kBAAmBuJ,MAAO,mBACnC,CAAEvJ,MAAO,QAASuJ,MAAO,SACzB,CAAEvJ,MAAO,SAAUuJ,MAAO,UAC1B,CAAEvJ,MAAO,QAASuJ,MAAO,UA4EIhQ,KAAKT,IAClBE,EAAAA,EAAAA,KAAA,UAAyBgH,MAAOlH,EAAKkH,MAAM9G,SACxCJ,EAAKyQ,OADKzQ,EAAKkH,eAQxB5G,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOmM,QAAQ,cAAclM,UAAU,+CAA8CC,SAAC,kBAGtFF,EAAAA,EAAAA,KAAA,YACEY,GAAG,cACHW,KAAK,cACLyF,MAAO6P,EAAa9V,YACpBkG,SAAUqP,EACV3J,KAAK,IACL1M,UAAU,2GACVmH,YAAY,6EACZkF,UAAQ,QAKZlM,EAAAA,EAAAA,MAAA,OAAKH,UAAU,6CAA4CC,SAAA,EAEzDE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEE,EAAAA,EAAAA,MAAA,SAAO+L,QAAQ,UAAUlM,UAAU,+CAA8CC,SAAA,EAC/EF,EAAAA,EAAAA,KAAC+G,EAAAA,IAAc,CAAC9G,UAAU,gBAAgB,gBAE5CD,EAAAA,EAAAA,KAAA,SACEF,KAAK,OACLc,GAAG,UACHW,KAAK,UACLyF,MAAO6P,EAAanP,QACpBT,SAAUqP,EACVrW,UAAU,2GACVmH,YAAY,gCACZkF,UAAQ,QAKZlM,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEE,EAAAA,EAAAA,MAAA,SAAO+L,QAAQ,QAAQlM,UAAU,+CAA8CC,SAAA,EAC7EF,EAAAA,EAAAA,KAACgY,EAAAA,IAAO,CAAC/X,UAAU,gBAAgB,qBAErCD,EAAAA,EAAAA,KAAA,SACEF,KAAK,MACLc,GAAG,QACHW,KAAK,QACLyF,MAAO6P,EAAaE,MACpB9P,SAAUqP,EACVrW,UAAU,2GACVmH,YAAY,uBACZkF,UAAQ,WAMdlM,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBE,EAAAA,EAAAA,MAAA,SAAO+L,QAAQ,UAAUlM,UAAU,+CAA8CC,SAAA,EAC/EF,EAAAA,EAAAA,KAACiY,EAAAA,IAAO,CAAChY,UAAU,gBAAgB,eAErCD,EAAAA,EAAAA,KAAA,SACEF,KAAK,MACLc,GAAG,UACHW,KAAK,UACLyF,MAAO6P,EAAaG,QACpB/P,SAAUqP,EACVrW,UAAU,2GACVmH,YAAY,qCAKhBhH,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBE,EAAAA,EAAAA,MAAA,MAAIH,UAAU,yCAAwCC,SAAA,EACpDF,EAAAA,EAAAA,KAAC8M,EAAAA,IAAO,CAAC7M,UAAU,gBAAgB,sBAErCD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SACvBgY,OAAOC,KAAKJ,GAAWxX,KAAKiQ,IAC3BpQ,EAAAA,EAAAA,MAAA,OAAeH,UAAU,yDAAwDC,SAAA,EAC/EF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BC,UAC1CF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oCAAmCC,SAAE6X,EAAUvH,QAEjEpQ,EAAAA,EAAAA,MAAA,OAAKH,UAAU,iCAAgCC,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,SACEF,KAAK,WACLc,GAAE,UAAAP,OAAYmQ,GACdV,QAAS+G,EAAaK,cAAc1G,GAAK8G,OACzCrQ,SAAWC,GAAM4Q,EAAkBtH,EAAK,SAAUtJ,EAAEnD,OAAO+L,SAC3D7P,UAAU,2EAEZD,EAAAA,EAAAA,KAAA,SAAOmM,QAAO,UAAA9L,OAAYmQ,GAAOvQ,UAAU,6BAA4BC,SAAC,eAIxE2W,EAAaK,cAAc1G,GAAK8G,SAChClX,EAAAA,EAAAA,MAAA,OAAKH,UAAU,oCAAmCC,SAAA,EAChDE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,SAAOmM,QAAO,QAAA9L,OAAUmQ,GAAOvQ,UAAU,6BAA4BC,SAAC,WAGtEF,EAAAA,EAAAA,KAAA,SACEF,KAAK,OACLc,GAAE,QAAAP,OAAUmQ,GACZxJ,MAAO6P,EAAaK,cAAc1G,GAAK4G,KACvCnQ,SAAWC,GAAM4Q,EAAkBtH,EAAK,OAAQtJ,EAAEnD,OAAOiD,OACzD/G,UAAU,0GAGdG,EAAAA,EAAAA,MAAA,OAAKH,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,SAAOmM,QAAO,SAAA9L,OAAWmQ,GAAOvQ,UAAU,6BAA4BC,SAAC,YAGvEF,EAAAA,EAAAA,KAAA,SACEF,KAAK,OACLc,GAAE,SAAAP,OAAWmQ,GACbxJ,MAAO6P,EAAaK,cAAc1G,GAAK6G,MACvCpQ,SAAWC,GAAM4Q,EAAkBtH,EAAK,QAAStJ,EAAEnD,OAAOiD,OAC1D/G,UAAU,8GAvCVuQ,WAkDhBpQ,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yCAAwCC,SAAC,eACvDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sEAAqEC,SAjNvE,CACzB,CAAEU,GAAI,OAAQ2P,MAAO,cACrB,CAAE3P,GAAI,UAAW2P,MAAO,qBACxB,CAAE3P,GAAI,kBAAmB2P,MAAO,mBAChC,CAAE3P,GAAI,aAAc2P,MAAO,yBAC3B,CAAE3P,GAAI,eAAgB2P,MAAO,gBAC7B,CAAE3P,GAAI,WAAY2P,MAAO,oBACzB,CAAE3P,GAAI,UAAW2P,MAAO,qBACxB,CAAE3P,GAAI,gBAAiB2P,MAAO,kBA0MIhQ,KAAK6X,IACvBhY,EAAAA,EAAAA,MAAA,OAAsBH,UAAU,oBAAmBC,SAAA,EACjDF,EAAAA,EAAAA,KAAA,SACEF,KAAK,WACLc,GAAE,WAAAP,OAAa+X,EAAQxX,IACvBkP,QAAS+G,EAAagB,UAAUzU,SAASgV,EAAQxX,IACjDqG,SAAUA,IAlQHmR,KAC3B,MAAMC,EAAmBxB,EAAagB,UAAUzU,SAASgV,GACrDvB,EAAagB,UAAU5M,QAAOqN,GAAKA,IAAMF,IACzC,IAAIvB,EAAagB,UAAWO,GAEhCtB,GAAe7Y,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACZ4Y,GAAY,IACfgB,UAAWQ,IACX,EA0PkCE,CAAoBH,EAAQxX,IAC5CX,UAAU,2EAEZD,EAAAA,EAAAA,KAAA,SAAOmM,QAAO,WAAA9L,OAAa+X,EAAQxX,IAAMX,UAAU,sCAAqCC,SACrFkY,EAAQ7H,UATH6H,EAAQxX,YAiBxBR,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBE,EAAAA,EAAAA,MAAA,SAAO+L,QAAQ,OAAOlM,UAAU,+CAA8CC,SAAA,EAC5EF,EAAAA,EAAAA,KAACwW,EAAAA,IAAK,CAACvW,UAAU,gBAAgB,YAEnCD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BC,SACvC2W,EAAazV,KAAKb,KAAI,CAACyK,EAAK0E,KAC3BtP,EAAAA,EAAAA,MAAA,QAEEH,UAAU,wFAAuFC,SAAA,CAEhG8K,GACDhL,EAAAA,EAAAA,KAAA,UACEF,KAAK,SACLG,UAAU,6CACVuH,QAASA,KAAMiP,OApSlB7G,EAoS4B5E,OAnS7C8L,GAAe7Y,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACZ4Y,GAAY,IACfzV,KAAMyV,EAAazV,KAAK6J,QAAOD,GAAOA,IAAQ4E,OAH/BA,KAoSiC,EAAA1P,SAC/B,WARIwP,QAcX1P,EAAAA,EAAAA,KAAA,SACEF,KAAK,OACLc,GAAG,OACHX,UAAU,2GACVmH,YAAY,wEACZsP,UA/TQxP,IACtB,GAAc,UAAVA,EAAEsI,KAA6C,KAA1BtI,EAAEnD,OAAOiD,MAAMwD,OAAe,CACrDtD,EAAEuI,iBACF,MAAMkH,EAASzP,EAAEnD,OAAOiD,MAAMwD,OACzBqM,EAAazV,KAAKgC,SAASuT,IAC9BG,GAAe7Y,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACZ4Y,GAAY,IACfzV,KAAM,IAAIyV,EAAazV,KAAMuV,MAGjCzP,EAAEnD,OAAOiD,MAAQ,EACnB,MAsTYhH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6BAA4BC,SAAC,sDAI5CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,UAC/BF,EAAAA,EAAAA,KAAA,UACEF,KAAK,SACLG,UAAU,sFAAqFC,SAChG,gCAQP,ECzMV,EAtL0BsY,KACxB,MAAMxZ,GAAWC,EAAAA,EAAAA,OACVwZ,EAAWC,IAAgBpT,EAAAA,EAAAA,UAAS,SAGrCqT,EAAkB,CACtB,CAAEnJ,IAAK,YAAae,MAAO,qBAAsBtN,KAAM,aAAcyB,MAAM1E,EAAAA,EAAAA,KAAC4Y,EAAAA,IAAM,CAAC3Y,UAAU,8BAC7F,CAAEuP,IAAK,iBAAkBe,MAAO,iBAAkBtN,KAAM,kBAAmByB,MAAM1E,EAAAA,EAAAA,KAAC6Y,EAAAA,IAAe,CAAC5Y,UAAU,8BAC5G,CAAEuP,IAAK,cAAee,MAAO,cAAetN,KAAM,oBAAqByB,MAAM1E,EAAAA,EAAAA,KAAC8Y,EAAAA,IAAS,CAAC7Y,UAAU,+BAkBpG,OACED,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCC,UACpDE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,4CAA2CC,SAAA,EAExDE,EAAAA,EAAAA,MAAA,UACEoH,QAnBW+N,KACjBvW,EAAS,QAAQ,EAmBXiB,UAAU,iFAAgFC,SAAA,EAE1FF,EAAAA,EAAAA,KAACwV,EAAAA,IAAW,CAACvV,UAAU,UACvBD,EAAAA,EAAAA,KAAA,QAAAE,SAAM,+BAGRF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qDAAoDC,UACjEE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oDAAmDC,SAAC,qBAClEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,qBAAoBC,SAAC,sEAKlCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gCAA+BC,UAC5CE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,UACEwH,QAASA,IAAMkR,EAAa,SAC5BzY,UAAS,4CAAAI,OACO,UAAdoY,EACI,oCACA,8EACHvY,SACJ,wBAGDF,EAAAA,EAAAA,KAAA,UACEwH,QAASA,IAAMkR,EAAa,UAC5BzY,UAAS,4CAAAI,OACO,WAAdoY,EACI,oCACA,8EACHvY,SACJ,8BAMU,UAAduY,GACCrY,EAAAA,EAAAA,MAAA0E,EAAAA,SAAA,CAAA5E,SAAA,EAEEE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2CAA0CC,SAAC,+BACzDE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,uDAAsDC,SAAA,EACnEE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,+EAA8EC,SAAA,EAC3FF,EAAAA,EAAAA,KAAC+Y,EAAAA,IAAO,CAAC9Y,UAAU,mCACnBD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iCAAgCC,SAAC,kBAC/CF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wBAAuBC,SAAC,yDAGvCE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,+EAA8EC,SAAA,EAC3FF,EAAAA,EAAAA,KAACgZ,EAAAA,IAAU,CAAC/Y,UAAU,mCACtBD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iCAAgCC,SAAC,qBAC/CF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wBAAuBC,SAAC,2DAGvCE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,+EAA8EC,SAAA,EAC3FF,EAAAA,EAAAA,KAACiZ,EAAAA,IAAO,CAAChZ,UAAU,mCACnBD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iCAAgCC,SAAC,qBAC/CF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wBAAuBC,SAAC,yDAGvCE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,+EAA8EC,SAAA,EAC3FF,EAAAA,EAAAA,KAACgO,EAAAA,IAAU,CAAC/N,UAAU,mCACtBD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iCAAgCC,SAAC,cAC/CF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wBAAuBC,SAAC,4DAM3CE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2CAA0CC,SAAC,yBACzDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qDAAoDC,UACjEE,EAAAA,EAAAA,MAAA,MAAIH,UAAU,2BAA0BC,SAAA,EACtCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,sEACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,2CACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,2DACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,6DACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,0DAMVE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2CAA0CC,SAAC,kCACzDF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,qBAAoBC,SAAC,0EAGlCE,EAAAA,EAAAA,MAAA,MAAIH,UAAU,8CAA6CC,SAAA,EACzDF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iEACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,uCACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,qBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,wDACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,yCAGNF,EAAAA,EAAAA,KAAA,UACEwH,QAnHc0R,KAC9Bla,EAAS,sBAAsB,EAmHfiB,UAAU,8HAA6HC,UAEvIF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAC,+CAKpCE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2CAA0CC,SAAC,0BACzDF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,qBAAoBC,SAAC,gEAKlCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SACvByY,EAAgBpY,KAAI4Y,IACnB/Y,EAAAA,EAAAA,MAAA,OAEEoH,QAASA,KAAM4R,OAjIXnW,EAiI0BkW,EAAOlW,UAhIvDjE,EAASiE,GADaA,KAiIuC,EAC3ChD,UAAU,4GAA2GC,SAAA,EAErHF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,SAClBiZ,EAAOzU,QAEVtE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,SAAQC,SAAA,EACrBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,4BAA2BC,SAAEiZ,EAAO5I,SAClDnQ,EAAAA,EAAAA,MAAA,KAAGH,UAAU,wBAAuBC,SAAA,CAClB,cAAfiZ,EAAO3J,KAAuB,+DACf,mBAAf2J,EAAO3J,KAA4B,8CACpB,gBAAf2J,EAAO3J,KAAyB,4CAGrCxP,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAAUgE,KAAK,OAAOoV,OAAO,eAAenV,QAAQ,YAAYsQ,MAAM,6BAA4BtU,UAC/GF,EAAAA,EAAAA,KAAA,QAAMsZ,cAAc,QAAQC,eAAe,QAAQC,YAAY,IAAIpV,EAAE,uBAjBpE+U,EAAO3J,qBA4BxB,E,iJCpJV,MAAMiK,IAAYC,EAAAA,EAAAA,OAAK,IAAM,gCACvBC,IAAaD,EAAAA,EAAAA,OAAK,IAAM,gCACxBE,IAAcF,EAAAA,EAAAA,OAAK,IAAM,gCACzBG,IAAiBH,EAAAA,EAAAA,OAAK,IAAM,gCAC5BI,IAAcJ,EAAAA,EAAAA,OAAK,IAAM,sDACzBK,IAAeL,EAAAA,EAAAA,OAAK,IAAM,gCAC1BM,IAAWN,EAAAA,EAAAA,OAAK,IAAM,gCACtBO,IAAkBP,EAAAA,EAAAA,OAAK,IAAM,gCAC7BQ,IAAmBR,EAAAA,EAAAA,OAAK,IAAM,wDAC9BS,IAAoBT,EAAAA,EAAAA,OAAK,IAAM,wDAC/BU,IAAkBV,EAAAA,EAAAA,OAAK,IAAM,qDAG7BW,IAAYX,EAAAA,EAAAA,OAAK,IAAM,+BACvBY,IAAeZ,EAAAA,EAAAA,OAAK,IAAM,gCAC1Ba,IAAeb,EAAAA,EAAAA,OAAK,IAAM,gCAC1Bc,IAAed,EAAAA,EAAAA,OAAK,IAAM,+BAC1Be,IAAiBf,EAAAA,EAAAA,OAAK,IAAM,gCAC5BgB,IAAUhB,EAAAA,EAAAA,OAAK,IAAM,gCACrBiB,IAAcjB,EAAAA,EAAAA,OAAK,IAAM,gCACzBkB,IAAelB,EAAAA,EAAAA,OAAK,IAAM,gCAC1BmB,IAAiBnB,EAAAA,EAAAA,OAAK,IAAM,gCA4WlC,GAzWYoB,KACV,MAAM/d,GAAkBC,EAAAA,EAAAA,IAAaC,GAASA,EAAMF,mBAGpDiG,EAAAA,EAAAA,YAAU,KAGR,MAAM+X,EAAWrJ,aAAaC,QAAQ,gBACtC,GAAIoJ,EACF,IACE,MAAM,MAAE9d,GAAU+d,KAAKC,MAAMF,GACzB9d,GAASA,EAAMG,MAAQH,EAAMwU,QAAU1U,GAEzCC,EAAAA,EAAake,WAAWC,QAAQle,EAAMG,KAAMH,EAAMwU,MAEtD,CAAE,MAAOhT,GAET,CACF,GACC,CAAC1B,IAEJ,MAAMiE,GAAW+B,EAAAA,EAAAA,MAEXqY,EAAiB,yCAAyCpO,KAAKhM,EAASkC,WACzD,qBAAqB8J,KAAKhM,EAASkC,WACnC,kBAAkB8J,KAAKhM,EAASkC,UAE/CmY,EAAkB,2BAA2BrO,KAAKhM,EAASkC,UAE3DoY,EAAiB,iBAAiBtO,KAAKhM,EAASkC,UACtD,OACE9C,EAAAA,EAAAA,MAAA0E,EAAAA,SAAA,CAAA5E,SAAA,EACIkb,IAAkBpb,EAAAA,EAAAA,KAACub,EAAAA,EAAM,KAC3Bvb,EAAAA,EAAAA,KAAA,OAAKC,UAAS,eAAAI,OAAkB+a,EAAoC,GAAnB,kBAAwBlb,UAEvEF,EAAAA,EAAAA,KAAA,QAAMC,UAAS,mCAAAI,OAAqCtD,EAAkB,WAAa,IAAKmD,UACtFF,EAAAA,EAAAA,KAACwb,EAAAA,SAAQ,CAACC,UAAUzb,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4CAA2CC,UAACF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCC,SAAC,iBAAuBA,UAC7JE,EAAAA,EAAAA,MAACsb,EAAAA,GAAM,CAAAxb,SAAA,EAELF,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CAAC1Y,KAAK,IAAI2Y,SAAS5b,EAAAA,EAAAA,KAACsD,EAAAA,GAAQ,CAACC,GAAG,WAAWE,SAAO,OACxDzD,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CAAC1Y,KAAK,SAAS2Y,SAAS5b,EAAAA,EAAAA,KAACyZ,GAAS,OACxCzZ,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CAAC1Y,KAAK,UAAU2Y,SAAS5b,EAAAA,EAAAA,KAAC2Z,GAAU,OAC1C3Z,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CAAC1Y,KAAK,gBAAgB2Y,SAAS5b,EAAAA,EAAAA,KAAC4Z,GAAW,OACjD5Z,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CAAC1Y,KAAK,cAAc2Y,SACxB5b,EAAAA,EAAAA,KAAC6b,EAAc,CAAA3b,UACbF,EAAAA,EAAAA,KAAC6Z,GAAc,SAKnB7Z,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CAAC1Y,KAAK,SAAS2Y,SAAS5b,EAAAA,EAAAA,KAACqa,GAAS,OACxCra,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CAAC1Y,KAAK,YAAY2Y,SAAS5b,EAAAA,EAAAA,KAACsa,GAAY,OAC9Cta,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CAAC1Y,KAAK,YAAY2Y,SAAS5b,EAAAA,EAAAA,KAACua,GAAY,OAC9Cva,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CAAC1Y,KAAK,YAAY2Y,SAAS5b,EAAAA,EAAAA,KAACwa,GAAY,OAC9Cxa,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CAAC1Y,KAAK,cAAc2Y,SAAS5b,EAAAA,EAAAA,KAACya,GAAc,OAClDza,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CAAC1Y,KAAK,OAAO2Y,SAAS5b,EAAAA,EAAAA,KAAC0a,GAAO,OACpC1a,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CAAC1Y,KAAK,WAAW2Y,SAAS5b,EAAAA,EAAAA,KAAC2a,GAAW,OAC5C3a,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CAAC1Y,KAAK,YAAY2Y,SAAS5b,EAAAA,EAAAA,KAAC4a,GAAY,OAK9C5a,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,eACL2Y,SACE5b,EAAAA,EAAAA,KAAC8b,EAAW,CAAA5b,UACVF,EAAAA,EAAAA,KAAC6a,GAAc,SAKrB7a,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,WACL2Y,SACE5b,EAAAA,EAAAA,KAAC8b,EAAW,CAAA5b,UACVF,EAAAA,EAAAA,KAAC+b,EAAAA,EAAW,SAKlB/b,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,YACL2Y,SACE5b,EAAAA,EAAAA,KAAC6b,EAAc,CAAA3b,UACbF,EAAAA,EAAAA,KAACgc,EAAAA,EAAY,SAOnBhc,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,8BACL2Y,SACE5b,EAAAA,EAAAA,KAAC6b,EAAc,CAAA3b,UACbF,EAAAA,EAAAA,KAACic,EAAAA,EAAgB,SAMvBjc,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,0BACL2Y,SACE5b,EAAAA,EAAAA,KAAC6b,EAAc,CAAA3b,UACbF,EAAAA,EAAAA,KAACkc,EAAAA,EAAa,SAMpBlc,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,2BACL2Y,SACE5b,EAAAA,EAAAA,KAAC6b,EAAc,CAAA3b,UACbF,EAAAA,EAAAA,KAACmc,EAAAA,EAAc,SAMrBnc,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,2BACL2Y,SACE5b,EAAAA,EAAAA,KAAC6b,EAAc,CAAA3b,UACbF,EAAAA,EAAAA,KAACoc,EAAAA,EAAc,SAMrBpc,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,qBACL2Y,SACE5b,EAAAA,EAAAA,KAAC6b,EAAc,CAAA3b,UACbF,EAAAA,EAAAA,KAACqc,EAAAA,EAAS,SAMhBrc,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,cACL2Y,SACE5b,EAAAA,EAAAA,KAAC8b,EAAW,CAAA5b,UACVF,EAAAA,EAAAA,KAACia,GAAe,CAACna,KAAK,gBAI5BE,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,cACL2Y,SACE5b,EAAAA,EAAAA,KAAC6b,EAAc,CAAA3b,UACbF,EAAAA,EAAAA,KAACia,GAAe,CAACna,KAAK,gBAI5BE,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,eACL2Y,SACE5b,EAAAA,EAAAA,KAAC6b,EAAc,CAAA3b,UACbF,EAAAA,EAAAA,KAACia,GAAe,CAACna,KAAK,iBAM5BE,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,WACL2Y,SACE5b,EAAAA,EAAAA,KAAC6b,EAAc,CAAA3b,UACbF,EAAAA,EAAAA,KAAC8Z,GAAW,SAIlB9Z,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,aACL2Y,SACE5b,EAAAA,EAAAA,KAAC8b,EAAW,CAAA5b,UACVF,EAAAA,EAAAA,KAACoa,GAAe,SAMtBpa,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,aACL2Y,SACE5b,EAAAA,EAAAA,KAAC6b,EAAc,CAAA3b,UACbF,EAAAA,EAAAA,KAACsc,EAAAA,EAAY,SAInBtc,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,kBACL2Y,SACE5b,EAAAA,EAAAA,KAAC6b,EAAc,CAAA3b,UACbF,EAAAA,EAAAA,KAACuc,EAAAA,EAAiB,SAKxBvc,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,2BACL2Y,SACE5b,EAAAA,EAAAA,KAAC6b,EAAc,CAAA3b,UACbF,EAAAA,EAAAA,KAACwc,EAAAA,EAAY,SAInBxc,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,6BACL2Y,SACE5b,EAAAA,EAAAA,KAAC6b,EAAc,CAAA3b,UACbF,EAAAA,EAAAA,KAACyc,EAAAA,EAAc,SAIrBzc,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,4BACL2Y,SACE5b,EAAAA,EAAAA,KAAC6b,EAAc,CAAA3b,UACbF,EAAAA,EAAAA,KAAC0c,EAAAA,EAAa,SAIpB1c,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,2BACL2Y,SACE5b,EAAAA,EAAAA,KAAC6b,EAAc,CAAA3b,UACbF,EAAAA,EAAAA,KAAC2c,EAAAA,EAAY,SAInB3c,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,yBACL2Y,SACE5b,EAAAA,EAAAA,KAAC6b,EAAc,CAAA3b,UACbF,EAAAA,EAAAA,KAAC4c,GAAAA,EAAY,SAInB5c,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,UACL2Y,SACE5b,EAAAA,EAAAA,KAAC6b,EAAc,CAAA3b,UACbF,EAAAA,EAAAA,KAAC6c,EAAAA,EAAU,SAMjB7c,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,YACL2Y,SACE5b,EAAAA,EAAAA,KAAC6b,EAAc,CAAA3b,UACbF,EAAAA,EAAAA,KAACka,GAAgB,SAIvBla,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,sBACL2Y,SACE5b,EAAAA,EAAAA,KAAC6b,EAAc,CAAA3b,UACbF,EAAAA,EAAAA,KAACma,GAAiB,SAMxBna,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,QACL2Y,SACE5b,EAAAA,EAAAA,KAAC6b,EAAc,CAAA3b,UACbF,EAAAA,EAAAA,KAACga,GAAQ,SAIfha,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,qBACL2Y,SACE5b,EAAAA,EAAAA,KAAC6b,EAAc,CAAA3b,UACbF,EAAAA,EAAAA,KAACiT,EAAiB,SAIxBjT,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,qBACL2Y,SACE5b,EAAAA,EAAAA,KAAC6b,EAAc,CAAA3b,UACbF,EAAAA,EAAAA,KAACkW,EAAkB,SAIzBlW,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,iBACL2Y,SACE5b,EAAAA,EAAAA,KAAC6b,EAAc,CAAA3b,UACbF,EAAAA,EAAAA,KAACwY,EAAiB,SAIxBxY,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,sBACL2Y,SACE5b,EAAAA,EAAAA,KAAC6b,EAAc,CAAA3b,UACbF,EAAAA,EAAAA,KAAC4W,EAAmB,SAM1B5W,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CACJ1Y,KAAK,YACL2Y,SACE5b,EAAAA,EAAAA,KAAC6b,EAAc,CAAA3b,UACbF,EAAAA,EAAAA,KAAC+Z,GAAY,SAMnB/Z,EAAAA,EAAAA,KAAC2b,EAAAA,GAAK,CAAC1Y,KAAK,IAAI2Y,SAAS5b,EAAAA,EAAAA,KAACsD,EAAAA,GAAQ,CAACC,GAAG,IAAIE,SAAO,gBAKrD4X,IAAmBrb,EAAAA,EAAAA,KAACwE,EAAgB,IAIhC6W,GAAmBC,GAGG,aAAtBta,EAASkC,UAAiD,iBAAtBlC,EAASkC,UAG7C,qCAAqC8J,KAAKhM,EAASkC,WAGnD,kBAAkB8J,KAAKhM,EAASkC,WAGV,aAAtBlC,EAASkC,UAA2B,kBAAkB8J,KAAKhM,EAASkC,WAGpE,6BAA6B8J,KAAKhM,EAASkC,WAG3C,kBAAkB8J,KAAKhM,EAASkC,UAlBU,MAqBvClD,EAAAA,EAAAA,KAAC2D,EAAM,MAKf,C,wDC/ZP,MA6BA,EA7BsB9D,IAA0B,IAAzB,MAAEoC,EAAK,SAAE6a,GAAUjd,EAMxC,OACEG,EAAAA,EAAAA,KAAA,QAAM6H,SANcX,IACpBA,EAAEuI,iBACFqN,EAAS5V,EAAEnD,OAAOgZ,OAAO/V,MAAM,EAIF9G,UAC3BE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SACEF,KAAK,OACLyB,KAAK,SACL6F,YAAY,uCACZnH,UAAU,uKACV+c,aAAc/a,KAEhBjC,EAAAA,EAAAA,KAAA,UACEF,KAAK,SACLG,UAAU,oFAAmFC,UAE7FF,EAAAA,EAAAA,KAAA,OAAKwU,MAAM,6BAA6BvU,UAAU,UAAUgE,KAAK,OAAOC,QAAQ,YAAYmV,OAAO,eAAcnZ,UAC/GF,EAAAA,EAAAA,KAAA,QAAMsZ,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGpV,EAAE,wDAItE,C,iGC3BX,MA4NA,EA5NemX,KAEb,MAAM,gBAAExe,IAAoBD,EAAAA,EAAAA,MACtBkC,GAAWC,EAAAA,EAAAA,MACX+B,GAAW+B,EAAAA,EAAAA,OACVka,EAAYC,IAAiB5X,EAAAA,EAAAA,WAAS,IACtC6X,EAAUC,IAAe9X,EAAAA,EAAAA,UAAS,kBAClC+X,EAAaC,IAAkBhY,EAAAA,EAAAA,WAAS,IAG/CtC,EAAAA,EAAAA,YAAU,KACR,MAAMua,EAAQ9W,YAAW,KACvB6W,GAAe,GAGf,MAAME,EAAY/W,YAAW,KAC3B2W,EAAY,SAAS,GACpB,KAEH,MAAO,IAAMvW,aAAa2W,EAAU,GACnC,MAEH,MAAO,IAAM3W,aAAa0W,EAAM,GAC/B,KAGHva,EAAAA,EAAAA,YAAU,KACJia,GACFC,GAAc,EAChB,GAEC,CAAClc,EAASkC,WAGb,MAAMua,GAAkBC,EAAAA,EAAAA,cAAaxW,IAC/BnK,IACFmK,EAAEuI,iBACFzQ,EAAS,YACX,GACC,CAACjC,EAAiBiC,IAGf2e,GAAaD,EAAAA,EAAAA,cAAY,KAC7BR,GAAcU,IAAcA,GAAU,GACrC,IAGGC,GAAsBH,EAAAA,EAAAA,cAAaza,IACvCjE,EAASiE,GACTia,GAAc,EAAM,GACnB,CAACle,IAEJ,OACEoB,EAAAA,EAAAA,MAAA0E,EAAAA,SAAA,CAAA5E,SAAA,EAEEF,EAAAA,EAAAA,KAAA,OACEC,UAAU,0IAIZD,EAAAA,EAAAA,KAAA,SAAO8d,IAAI,OAAM5d,SAAA,00BAoCjBE,EAAAA,EAAAA,MAAA,UACEH,UAAU,6EAA4EC,SAAA,EAEtFE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,yFAAwFC,SAAA,EAErGE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,6BAA4BC,SAAA,EACzCF,EAAAA,EAAAA,KAAA,QACEC,UAAU,qFAAoFC,SAC/F,QAGDF,EAAAA,EAAAA,KAAC6D,EAAAA,GAAI,CACHN,GAAG,IACHtD,UAAU,+EACVuH,QAASiW,EAAgBvd,UAEzBF,EAAAA,EAAAA,KAAA,QAAMC,UAAS,kBAAAI,OAAoBgd,EAAc,YAAc,IAAKnd,SACjEid,UAMP/c,EAAAA,EAAAA,MAAA,OAAKH,UAAU,0CAAyCC,SAAA,CACrDnD,IACCiD,EAAAA,EAAAA,KAAA8E,EAAAA,SAAA,CAAA5E,UACEE,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CACHN,GAAG,QACHtD,UAAU,kHACV,aAAW,eAAcC,SAAA,EAEzBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2EAA0EC,UACvFF,EAAAA,EAAAA,KAAC+d,EAAAA,IAAM,CAAC9d,UAAU,0BAEpBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sBAAqBC,SAAC,uBAM1CnD,IACAiD,EAAAA,EAAAA,KAAA,UACEwH,QAASmW,EACT1d,UAAU,uFACV,aAAW,OAAMC,SAEhB+c,GACCjd,EAAAA,EAAAA,KAACge,EAAAA,IAAO,CAAC/d,UAAU,cACnBD,EAAAA,EAAAA,KAACie,EAAAA,IAAM,CAAChe,UAAU,sBAQ5BD,EAAAA,EAAAA,KAAA,OACEC,UAAS,6EAAAI,OACP4c,EAAa,cAAgB,iCAE/BzV,QAASmW,KAIX3d,EAAAA,EAAAA,KAAA,OACEC,UAAS,mHAAAI,OACP4c,EAAa,gBAAkB,mBAAkB,oBAChC/c,UAEnBE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,MAAKC,SAAA,EAClBE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,yCAAwCC,SAAA,EACrDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCC,SAAC,UAClDF,EAAAA,EAAAA,KAAA,UACEwH,QAASmW,EACT1d,UAAU,yDACV,aAAW,aAAYC,UAEvBF,EAAAA,EAAAA,KAACge,EAAAA,IAAO,CAAC/d,UAAU,kBAIvBD,EAAAA,EAAAA,KAAA,OAAAE,UACEE,EAAAA,EAAAA,MAAA,MAAIH,UAAU,YAAWC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,UACEwH,QAASA,IAAMqW,EAAoB,UACnC5d,UAAU,2FAA0FC,SACrG,aAIHF,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,UACEwH,QAASA,IAAMqW,EAAoB,aACnC5d,UAAU,2FAA0FC,SACrG,gBAIHF,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,UACEwH,QAASA,IAAMqW,EAAoB,UACnC5d,UAAU,2FAA0FC,SACrG,aAIHF,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,UACEwH,QAASA,IAAMqW,EAAoB,WACnC5d,UAAU,2FAA0FC,SACrG,6BASZ,C","sources":["hooks/stores/useAuthStoreHooks.js","hooks/queries/useAuthQueries.js","components/ui/SkeletonLoader.js","data/mockExploreData.js","hooks/queries/useExploreQueries.js","components/auth/ProtectedRoute.js","components/auth/PublicRoute.js","components/layout/Footer.js","components/layout/ResponsiveNavBar.js","hosting/components/PlaceSearch.js","hosting/components/EventCreationFormHookForm.js","hosting/components/RecurringEventSchedulerHookForm.js","hosting/services/hostService.js","hosting/pages/TableCreationPage.js","hosting/hooks/queries/useHostQueries.js","hosting/pages/CircleCreationPage.js","hosting/pages/BusinessListingPage.js","hosting/pages/BusinessSetupPage.js","App.js","components/explore/ExploreSearch.js","components/layout/Header.js"],"sourcesContent":["import { useAuthStore } from '../../stores/authStore';\nimport { useMemo } from 'react';\n\n/**\n * Custom hook for authentication state - isAuthenticated\n * Only selects the isAuthenticated flag and memoizes the result object\n * to prevent unnecessary re-renders\n * \n * @returns {Object} Authentication state\n */\nexport const useAuth = () => {\n  // Select the isAuthenticated flag directly from store\n  const isAuthenticated = useAuthStore(state => state.isAuthenticated);\n  \n  // Memoize the resulting object to maintain stable reference\n  return useMemo(() => ({ isAuthenticated }), [isAuthenticated]);\n};\n\n/**\n * Custom hook for user data\n * @returns {Object} User data\n */\nexport const useUserData = () => {\n  const user = useAuthStore(state => state.user);\n  return useMemo(() => ({ user }), [user]);\n};\n\n/**\n * Custom hook for auth loading state\n * @returns {Object} Loading state\n */\nexport const useAuthLoading = () => {\n  const loading = useAuthStore(state => state.loading);\n  return useMemo(() => ({ loading }), [loading]);\n};\n\n/**\n * Custom hook for auth error state\n * @returns {Object} Error state\n */\nexport const useAuthError = () => {\n  const error = useAuthStore(state => state.error);\n  return useMemo(() => ({ error }), [error]);\n};\n\n/**\n * Custom hook for authentication actions\n * Provides access to auth actions with stable reference using memoization\n * @returns {Object} Authentication actions\n */\nexport const useAuthActions = () => {\n  // Get action functions from the store\n  const login = useAuthStore(state => state.login);\n  const logout = useAuthStore(state => state.logout);\n  const register = useAuthStore(state => state.register);\n  const handleOAuthVerification = useAuthStore(state => state.handleOAuthVerification);\n  const clearError = useAuthStore(state => state.clearError);\n  \n  // Return memoized object to prevent recreation on each render\n  return useMemo(() => ({\n    login,\n    logout,\n    register,\n    handleOAuthVerification,\n    clearError\n  }), [login, logout, register, handleOAuthVerification, clearError]);\n};\n","import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { useNavigate } from 'react-router-dom';\nimport authService from '../../services/authService';\nimport profileService from '../../services/profileService';\nimport { useAuthStore } from '../../stores/authStore';\n\n/**\n * Hook to fetch the current user\n * @param {Object} options - Additional React Query options\n * @returns {Object} Query result containing current user data, loading and error states\n */\nexport const useCurrentUser = (options = {}) => {\n  return useQuery({\n    queryKey: ['currentUser'],\n    queryFn: authService.getCurrentUser,\n    staleTime: 300000, // 5 minutes\n    retry: (failureCount, error) => {\n      // Don't retry on 401 unauthorized errors\n      if (error?.response?.status === 401) return false;\n      return failureCount < 2; // Otherwise retry twice\n    },\n    ...options\n  });\n};\n\n/**\n * Hook for login handler\n * @returns {Object} Mutation object with login function and state\n */\nexport const useLogin = () => {\n  const queryClient = useQueryClient();\n  const login = useAuthStore(state => state.login);\n  \n  return useMutation({\n    mutationFn: login,\n    onSuccess: () => {\n      // After successful login, invalidate and refetch current user\n      queryClient.invalidateQueries({ queryKey: ['currentUser'] });\n      \n      // Prefetch profile data\n      queryClient.prefetchQuery({\n        queryKey: ['profile'],\n        queryFn: () => profileService.getProfile()\n      });\n    },\n    onError: (error) => {\n      console.error('Login error in React Query:', error);\n      // The actual error handling is done in the authStore\n    }\n  });\n};\n\n/**\n * Hook for registration handler\n * @returns {Object} Mutation object with register function and state\n */\nexport const useRegister = () => {\n  const queryClient = useQueryClient();\n  const register = useAuthStore(state => state.register);\n  \n  return useMutation({\n    mutationFn: register,\n    onSuccess: () => {\n      // After successful registration, invalidate and refetch current user\n      queryClient.invalidateQueries({ queryKey: ['currentUser'] });\n      \n      // Prefetch profile data\n      queryClient.prefetchQuery({\n        queryKey: ['profile'],\n        queryFn: () => profileService.getProfile()\n      });\n    },\n    onError: (error) => {\n      console.error('Registration error in React Query:', error);\n      // The actual error handling is done in the authStore\n    }\n  });\n};\n\n/**\n * Hook for logout handler\n * @returns {Object} Mutation object with logout function and state\n */\nexport const useLogout = () => {\n  const queryClient = useQueryClient();\n  const navigate = useNavigate();\n  const logout = useAuthStore(state => state.logout);\n  \n  return useMutation({\n    mutationFn: logout,\n    onSuccess: () => {\n      // Clear all authentication-related queries from cache\n      queryClient.invalidateQueries({ queryKey: ['currentUser'] });\n      queryClient.setQueryData(['currentUser'], null);\n      \n      // Remove profile and other user-specific data from cache\n      queryClient.removeQueries({ queryKey: ['profile'] });\n      queryClient.removeQueries({ queryKey: ['notifications'] });\n\n      // Redirect to home page after logout\n      navigate('/');\n    },\n    onError: (error) => {\n      console.error('Logout error in React Query:', error);\n      // The actual error handling is done in the authStore\n      // Even on error, we should clear local queries\n      queryClient.setQueryData(['currentUser'], null);\n      queryClient.removeQueries({ queryKey: ['profile'] });\n      queryClient.removeQueries({ queryKey: ['notifications'] });\n    }\n  });\n};\n\n/**\n * Hook for OAuth verification handler\n * @returns {Object} Mutation object with handleOAuthVerification function and state\n */\nexport const useOAuthVerification = () => {\n  const queryClient = useQueryClient();\n  const handleOAuthVerification = useAuthStore(state => state.handleOAuthVerification);\n  \n  return useMutation({\n    mutationFn: handleOAuthVerification,\n    onSuccess: () => {\n      // After successful OAuth login, invalidate and refetch current user\n      queryClient.invalidateQueries({ queryKey: ['currentUser'] });\n      \n      // Prefetch profile data\n      queryClient.prefetchQuery({\n        queryKey: ['profile'],\n        queryFn: () => profileService.getProfile()\n      });\n    },\n    onError: (error) => {\n      console.error('OAuth verification error in React Query:', error);\n      // The actual error handling is done in the authStore and UI components\n    }\n  });\n};\n\n// Export the original hook name for backward compatibility during migration\nexport const useOAuthSuccess = useOAuthVerification;\n","import React from 'react';\n\n// Generic skeleton loader component following the Single Responsibility Principle\n// Can be customized with different patterns based on the route/content type\nconst SkeletonLoader = ({ type = 'default' }) => {\n  // Common skeleton pulse animation class\n  const pulseClass = \"animate-pulse bg-gray-200 rounded\";\n  \n  // Different skeleton patterns based on content type\n  const renderSkeletonPattern = () => {\n    switch(type) {\n      case 'profile':\n        return (\n          <div className=\"w-full max-w-3xl mx-auto\">\n            {/* Header with avatar and name */}\n            <div className=\"flex items-center mb-8\">\n              <div className={`${pulseClass} h-16 w-16 rounded-full mr-4`}></div>\n              <div className=\"flex-1\">\n                <div className={`${pulseClass} h-6 w-48 mb-2`}></div>\n                <div className={`${pulseClass} h-4 w-32`}></div>\n              </div>\n            </div>\n            \n            {/* Content blocks */}\n            <div className=\"space-y-6\">\n              {[...Array(3)].map((_, i) => (\n                <div key={i} className=\"space-y-3\">\n                  <div className={`${pulseClass} h-5 w-32`}></div>\n                  <div className={`${pulseClass} h-24 w-full`}></div>\n                </div>\n              ))}\n            </div>\n          </div>\n        );\n\n      case 'mainProfile':\n        return (\n          <div className=\"w-full max-w-7xl mx-auto\">\n            {/* Main profile header with large avatar */}\n            <div className=\"bg-white shadow overflow-hidden sm:rounded-lg\">\n              <div className=\"px-6 py-6\">\n                {/* Avatar and profile header */}\n                <div className=\"flex flex-col sm:flex-row items-center sm:items-start mb-8\">\n                  <div className={`${pulseClass} h-24 w-24 rounded-full mb-4 sm:mb-0 sm:mr-6`}></div>\n                  <div className=\"flex-1 text-center sm:text-left\">\n                    <div className={`${pulseClass} h-7 w-64 mb-3 mx-auto sm:mx-0`}></div>\n                    <div className={`${pulseClass} h-4 w-48 mb-2 mx-auto sm:mx-0`}></div>\n                    <div className={`${pulseClass} h-4 w-32 mx-auto sm:mx-0`}></div>\n                  </div>\n                </div>\n                \n                {/* Completeness bar */}\n                <div className=\"mb-8\">\n                  <div className={`${pulseClass} h-5 w-40 mb-2`}></div>\n                  <div className={`${pulseClass} h-3 w-full mb-1`}></div>\n                  <div className=\"flex justify-between\">\n                    <div className={`${pulseClass} h-3 w-12`}></div>\n                    <div className={`${pulseClass} h-3 w-12`}></div>\n                  </div>\n                </div>\n                \n                {/* User details */}\n                <div className=\"mb-8\">\n                  <div className={`${pulseClass} h-6 w-32 mb-4`}></div>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className={`${pulseClass} h-12 w-full`}></div>\n                    <div className={`${pulseClass} h-12 w-full`}></div>\n                    <div className={`${pulseClass} h-12 w-full`}></div>\n                    <div className={`${pulseClass} h-12 w-full`}></div>\n                  </div>\n                </div>\n                \n                {/* Verification badges */}\n                <div className=\"mb-8\">\n                  <div className={`${pulseClass} h-6 w-48 mb-4`}></div>\n                  <div className=\"flex space-x-3\">\n                    <div className={`${pulseClass} h-10 w-10 rounded-full`}></div>\n                    <div className={`${pulseClass} h-10 w-10 rounded-full`}></div>\n                    <div className={`${pulseClass} h-10 w-10 rounded-full`}></div>\n                  </div>\n                </div>\n                \n                {/* Interests */}\n                <div className=\"mb-8\">\n                  <div className={`${pulseClass} h-6 w-32 mb-4`}></div>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {[...Array(5)].map((_, i) => (\n                      <div key={i} className={`${pulseClass} h-8 w-20 rounded-full`}></div>\n                    ))}\n                  </div>\n                </div>\n                \n                {/* Action buttons */}\n                <div className=\"border-t border-gray-200 pt-6 mt-6\">\n                  <div className=\"flex justify-center space-x-4\">\n                    <div className={`${pulseClass} h-10 w-32 rounded-md`}></div>\n                    <div className={`${pulseClass} h-10 w-32 rounded-md`}></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'userProfile':\n        return (\n          <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n            {/* User Profile Header */}\n            <div className=\"bg-white rounded-lg shadow-md overflow-hidden mb-8\">\n              <div className=\"p-6\">\n                <div className=\"flex flex-col md:flex-row\">\n                  {/* Profile Image */}\n                  <div className=\"md:mr-8 mb-4 md:mb-0 flex-shrink-0\">\n                    <div className=\"relative\">\n                      <div className={`${pulseClass} w-32 h-32 rounded-full`}></div>\n                      <div className=\"absolute bottom-0 right-0 bg-gray-200 p-1 rounded-full\">\n                        <div className={`${pulseClass} h-4 w-4 rounded-full`}></div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  {/* User Info */}\n                  <div className=\"flex-1\">\n                    <div className=\"flex flex-col md:flex-row md:items-center justify-between mb-4\">\n                      <div className={`${pulseClass} h-8 w-48 mb-2 md:mb-0`}></div>\n                      \n                      <div className=\"flex items-center space-x-4\">\n                        <div className=\"flex items-center\">\n                          <div className={`${pulseClass} h-4 w-4 mr-1 rounded-full`}></div>\n                          <div className={`${pulseClass} h-4 w-12`}></div>\n                        </div>\n                        \n                        <div className={`${pulseClass} h-4 w-32`}></div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex items-center mb-3\">\n                      <div className={`${pulseClass} h-4 w-4 mr-2 rounded-full`}></div>\n                      <div className={`${pulseClass} h-4 w-40`}></div>\n                    </div>\n                    \n                    <div className={`${pulseClass} h-16 w-full mb-4`}></div>\n                    \n                    <div className=\"mb-4\">\n                      <div className=\"flex flex-wrap gap-2\">\n                        {[...Array(4)].map((_, i) => (\n                          <div key={i} className={`${pulseClass} h-8 w-16 rounded-full`}></div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            {/* Stats Section */}\n            <div className=\"bg-white rounded-lg shadow-md overflow-hidden mb-8\">\n              <div className={`${pulseClass} h-6 w-32 mx-6 my-6`}></div>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 p-6 pt-0\">\n                {[...Array(4)].map((_, i) => (\n                  <div key={i} className=\"text-center\">\n                    <div className={`${pulseClass} h-12 w-12 mx-auto mb-2 rounded-full`}></div>\n                    <div className={`${pulseClass} h-5 w-20 mx-auto mb-1`}></div>\n                    <div className={`${pulseClass} h-4 w-16 mx-auto`}></div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        );\n        \n      case 'explorePage':\n        return (\n          <div className=\"w-full max-w-7xl mx-auto\">\n            {/* Search and filter bar */}\n            <div className=\"mb-8\">\n              <div className=\"flex flex-col md:flex-row items-start md:items-center justify-between mb-6\">\n                <div className={`${pulseClass} h-8 w-64 mb-4 md:mb-0`}></div>\n                <div className=\"flex space-x-3\">\n                  <div className={`${pulseClass} h-10 w-24 rounded-md`}></div>\n                  <div className={`${pulseClass} h-10 w-24 rounded-md`}></div>\n                </div>\n              </div>\n              \n              {/* Search bar */}\n              <div className={`${pulseClass} h-12 w-full rounded-full mb-6`}></div>\n              \n              {/* Filter chips */}\n              <div className=\"flex flex-wrap gap-2 mb-4\">\n                {[...Array(6)].map((_, i) => (\n                  <div key={i} className={`${pulseClass} h-8 w-20 rounded-full`}></div>\n                ))}\n              </div>\n            </div>\n            \n            {/* Events grid */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {[...Array(9)].map((_, i) => (\n                <div key={i} className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n                  {/* Event image */}\n                  <div className={`${pulseClass} h-48 w-full`}></div>\n                  \n                  {/* Event content */}\n                  <div className=\"p-4\">\n                    <div className={`${pulseClass} h-6 w-3/4 mb-2`}></div>\n                    \n                    {/* Event details */}\n                    <div className=\"space-y-3 mb-4\">\n                      <div className=\"flex items-center\">\n                        <div className={`${pulseClass} h-4 w-4 rounded-full mr-2`}></div>\n                        <div className={`${pulseClass} h-4 w-32`}></div>\n                      </div>\n                      <div className=\"flex items-center\">\n                        <div className={`${pulseClass} h-4 w-4 rounded-full mr-2`}></div>\n                        <div className={`${pulseClass} h-4 w-40`}></div>\n                      </div>\n                      <div className=\"flex items-center\">\n                        <div className={`${pulseClass} h-4 w-4 rounded-full mr-2`}></div>\n                        <div className={`${pulseClass} h-4 w-24`}></div>\n                      </div>\n                    </div>\n                    \n                    {/* Event footer */}\n                    <div className=\"flex justify-between items-center\">\n                      <div className=\"flex -space-x-2\">\n                        {[...Array(3)].map((_, j) => (\n                          <div key={j} className={`${pulseClass} h-8 w-8 rounded-full border-2 border-white`}></div>\n                        ))}\n                      </div>\n                      <div className={`${pulseClass} h-8 w-20 rounded-md`}></div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n            \n            {/* Pagination */}\n            <div className=\"flex justify-center mt-8\">\n              <div className=\"flex space-x-2\">\n                {[...Array(5)].map((_, i) => (\n                  <div key={i} className={`${pulseClass} h-10 w-10 rounded-md`}></div>\n                ))}\n              </div>\n            </div>\n          </div>\n        );\n        \n      case 'myEventsPage':\n        return (\n          <div className=\"w-full max-w-7xl mx-auto\">\n            {/* Page header with tabs */}\n            <div className=\"mb-8\">\n              <div className={`${pulseClass} h-8 w-48 mb-6`}></div>\n              \n              {/* Tabs */}\n              <div className=\"flex border-b mb-6\">\n                {[...Array(3)].map((_, i) => (\n                  <div key={i} className={`${pulseClass} h-10 ${i === 0 ? 'w-32 border-b-2 border-indigo-600' : 'w-28'} mr-6`}></div>\n                ))}\n              </div>\n            </div>\n            \n            {/* Event list with status indicators */}\n            <div className=\"space-y-6\">\n              {[...Array(5)].map((_, i) => (\n                <div key={i} className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n                  <div className=\"flex flex-col md:flex-row\">\n                    {/* Event image */}\n                    <div className={`${pulseClass} h-48 md:h-auto md:w-1/3 lg:w-1/4`}></div>\n                    \n                    {/* Event details */}\n                    <div className=\"p-4 flex-1\">\n                      <div className=\"flex flex-col md:flex-row md:items-center justify-between mb-4\">\n                        <div>\n                          <div className={`${pulseClass} h-6 w-48 mb-2`}></div>\n                          <div className={`${pulseClass} h-4 w-32 mb-4`}></div>\n                        </div>\n                        \n                        {/* Status badge */}\n                        <div className={`${pulseClass} h-8 w-24 rounded-full mt-2 md:mt-0`}></div>\n                      </div>\n                      \n                      {/* Event info */}\n                      <div className=\"space-y-3 mb-4\">\n                        <div className=\"flex items-center\">\n                          <div className={`${pulseClass} h-4 w-4 rounded-full mr-2`}></div>\n                          <div className={`${pulseClass} h-4 w-full max-w-sm`}></div>\n                        </div>\n                        <div className=\"flex items-center\">\n                          <div className={`${pulseClass} h-4 w-4 rounded-full mr-2`}></div>\n                          <div className={`${pulseClass} h-4 w-32`}></div>\n                        </div>\n                        <div className=\"flex items-center\">\n                          <div className={`${pulseClass} h-4 w-4 rounded-full mr-2`}></div>\n                          <div className={`${pulseClass} h-4 w-40`}></div>\n                        </div>\n                      </div>\n                      \n                      {/* Action buttons */}\n                      <div className=\"flex flex-wrap gap-2 mt-4\">\n                        <div className={`${pulseClass} h-10 w-28 rounded-md`}></div>\n                        <div className={`${pulseClass} h-10 w-28 rounded-md`}></div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n            \n            {/* Empty state for when list is empty */}\n            <div className=\"hidden\">\n              <div className=\"flex flex-col items-center justify-center py-16\">\n                <div className={`${pulseClass} h-24 w-24 rounded-full mb-6`}></div>\n                <div className={`${pulseClass} h-8 w-64 mb-4 mx-auto`}></div>\n                <div className={`${pulseClass} h-4 w-96 mb-6 mx-auto`}></div>\n                <div className={`${pulseClass} h-12 w-48 rounded-md mx-auto`}></div>\n              </div>\n            </div>\n          </div>\n        );\n        \n      case 'feed':\n        return (\n          <div className=\"w-full max-w-3xl mx-auto space-y-6\">\n            {/* Multiple post items */}\n            {[...Array(5)].map((_, i) => (\n              <div key={i} className=\"p-4 border rounded-lg shadow\">\n                <div className=\"flex items-center mb-4\">\n                  <div className={`${pulseClass} h-10 w-10 rounded-full mr-3`}></div>\n                  <div>\n                    <div className={`${pulseClass} h-4 w-32 mb-2`}></div>\n                    <div className={`${pulseClass} h-3 w-24`}></div>\n                  </div>\n                </div>\n                <div className={`${pulseClass} h-24 w-full mb-4`}></div>\n                <div className=\"flex space-x-4\">\n                  <div className={`${pulseClass} h-8 w-20`}></div>\n                  <div className={`${pulseClass} h-8 w-20`}></div>\n                </div>\n              </div>\n            ))}\n          </div>\n        );\n        \n      case 'chat':\n        return (\n          <div className=\"w-full max-w-3xl mx-auto\">\n            {/* Chat header */}\n            <div className=\"flex items-center p-4 border-b\">\n              <div className={`${pulseClass} h-10 w-10 rounded-full mr-3`}></div>\n              <div className={`${pulseClass} h-5 w-40`}></div>\n            </div>\n            \n            {/* Chat messages */}\n            <div className=\"p-4 space-y-4\">\n              {[...Array(6)].map((_, i) => (\n                <div key={i} className={`flex ${i % 2 === 0 ? 'justify-start' : 'justify-end'}`}>\n                  <div className={`${pulseClass} h-10 ${i % 2 === 0 ? 'w-48' : 'w-64'} rounded-lg`}></div>\n                </div>\n              ))}\n            </div>\n            \n            {/* Input area */}\n            <div className=\"p-4 border-t\">\n              <div className={`${pulseClass} h-12 w-full rounded-full`}></div>\n            </div>\n          </div>\n        );\n      \n      // Default skeleton for general pages\n      default:\n        return (\n          <div className=\"w-full max-w-4xl mx-auto space-y-6\">\n            {/* Header section */}\n            <div className={`${pulseClass} h-8 w-64 mb-8`}></div>\n            \n            {/* Main content blocks */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {[...Array(4)].map((_, i) => (\n                <div key={i} className=\"space-y-4\">\n                  <div className={`${pulseClass} h-40 w-full rounded-lg`}></div>\n                  <div className={`${pulseClass} h-5 w-3/4`}></div>\n                  <div className={`${pulseClass} h-4 w-1/2`}></div>\n                </div>\n              ))}\n            </div>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-white p-4\">\n      {renderSkeletonPattern()}\n    </div>\n  );\n};\n\nexport default SkeletonLoader;\n","/**\n * Mock data for Explore page\n * Following Single Responsibility Principle - this file only contains mock data\n */\n\n// Tables mock data\nexport const tablesData = [\n  {\n    id: '1',\n    title: 'Coffee Chat at Starbucks',\n    type: 'social',\n    category: 'social',\n    description: 'Join us for a casual coffee chat to discuss tech trends and networking opportunities.',\n    location: 'Starbucks Downtown',\n    distance: 2.3,\n    rating: 4.7,\n    participants: 8,\n    tags: ['Tech', 'Social', 'Networking'],\n    image: 'https://images.unsplash.com/photo-1501339847302-ac426a4a7cbb?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\n    host: {\n      id: '101',\n      name: 'Alex Johnson',\n      image: 'https://randomuser.me/api/portraits/women/12.jpg',\n      verified: true\n    }\n  },\n  {\n    id: '2',\n    title: 'Book Club Meetup',\n    type: 'club',\n    category: 'educational',\n    description: 'Monthly book club discussion on the latest bestsellers and classics.',\n    location: 'City Library',\n    distance: 1.5,\n    rating: 4.8,\n    participants: 12,\n    tags: ['Education', 'Social', 'Art'],\n    image: 'https://images.unsplash.com/photo-1495446815901-a7297e633e8d?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\n    host: {\n      id: '102',\n      name: 'Sarah Miller',\n      image: 'https://randomuser.me/api/portraits/women/22.jpg',\n      verified: true\n    }\n  },\n  {\n    id: '3',\n    title: 'Tech Startup Networking',\n    type: 'professional',\n    category: 'business',\n    description: 'Connect with other tech professionals and entrepreneurs in your city.',\n    location: 'WeWork Downtown',\n    distance: 3.8,\n    rating: 4.5,\n    participants: 25,\n    tags: ['Tech', 'Business', 'Networking'],\n    image: 'https://images.unsplash.com/photo-1540317580384-e5d43867caa4?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\n    host: {\n      id: '103',\n      name: 'David Chen',\n      image: 'https://randomuser.me/api/portraits/men/32.jpg',\n      verified: true\n    }\n  },\n  {\n    id: '4',\n    title: 'Dinner & Discussion',\n    type: 'social',\n    category: 'food',\n    description: 'Enjoy a great meal while discussing philosophy, art, and current events.',\n    location: 'Olive Garden',\n    distance: 4.2,\n    rating: 4.3,\n    participants: 6,\n    tags: ['Food', 'Social', 'Education'],\n    image: 'https://images.unsplash.com/photo-1559304822-9eb2813c9844?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\n    host: {\n      id: '104',\n      name: 'Michael Brown',\n      image: 'https://randomuser.me/api/portraits/men/42.jpg',\n      verified: false\n    }\n  }\n];\n\n// Events mock data\nexport const eventsData = [\n  {\n    id: '10',\n    title: 'Outdoor Yoga in the Park',\n    type: 'fitness',\n    category: 'fitness',\n    description: 'Join our community yoga session in Central Park - all levels welcome!',\n    location: 'Central Park',\n    date: '2023-06-15T09:00:00',\n    distance: 1.2,\n    rating: 4.9,\n    attendees: 32,\n    tags: ['Fitness', 'Outdoors', 'Social'],\n    image: 'https://images.unsplash.com/photo-1545205597-3d9d02c29597?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\n    host: {\n      id: '201',\n      name: 'Emma Wilson',\n      image: 'https://randomuser.me/api/portraits/women/32.jpg',\n      verified: true\n    }\n  },\n  {\n    id: '11',\n    title: 'Local Band Live Music',\n    type: 'entertainment',\n    category: 'music',\n    description: 'Live music performance by local artists featuring indie and folk music.',\n    location: 'The Basement Bar',\n    date: '2023-06-18T20:00:00',\n    distance: 5.1,\n    rating: 4.6,\n    attendees: 75,\n    tags: ['Music', 'Social', 'Art'],\n    image: 'https://images.unsplash.com/photo-1501281668745-f7f57925c3b4?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\n    host: {\n      id: '202',\n      name: 'Jake Martinez',\n      image: 'https://randomuser.me/api/portraits/men/62.jpg',\n      verified: true\n    }\n  },\n  {\n    id: '12',\n    title: 'Business Workshop: Digital Marketing',\n    type: 'workshop',\n    category: 'educational',\n    description: 'Learn effective digital marketing strategies for small businesses.',\n    location: 'Business Center',\n    date: '2023-06-20T14:00:00',\n    distance: 2.7,\n    rating: 4.7,\n    attendees: 45,\n    tags: ['Business', 'Tech', 'Education'],\n    image: 'https://images.unsplash.com/photo-1531482615713-2afd69097998?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\n    host: {\n      id: '203',\n      name: 'Rebecca Taylor',\n      image: 'https://randomuser.me/api/portraits/women/52.jpg',\n      verified: true\n    }\n  },\n  {\n    id: '13',\n    title: 'Community Cleanup Day',\n    type: 'volunteer',\n    category: 'community',\n    description: 'Join your neighbors to help clean up the local park and streets.',\n    location: 'Riverside Park',\n    date: '2023-06-25T09:00:00',\n    distance: 0.8,\n    rating: 4.9,\n    attendees: 20,\n    tags: ['Outdoors', 'Social', 'Education'],\n    image: 'https://images.unsplash.com/photo-1563311406-d18cfb30a8c9?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\n    host: {\n      id: '204',\n      name: 'Robert Lewis',\n      image: 'https://randomuser.me/api/portraits/men/72.jpg',\n      verified: false\n    }\n  }\n];\n\n// Circles mock data\nexport const circlesData = [\n  {\n    id: '5',\n    title: 'Local Fitness Group',\n    type: 'group',\n    category: 'fitness',\n    description: 'Regular workouts and fitness activities for people of all skill levels.',\n    location: 'City Gym',\n    distance: 2.0,\n    rating: 4.9,\n    members: 120,\n    tags: ['Fitness', 'Social', 'Outdoors'],\n    image: 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\n    admin: {\n      id: '301',\n      name: 'Chris Green',\n      image: 'https://randomuser.me/api/portraits/men/82.jpg',\n      verified: true\n    }\n  },\n  {\n    id: '6',\n    title: 'Photography Enthusiasts',\n    type: 'interest',\n    category: 'art',\n    description: 'Share your photography tips, tricks, and favorite spots in the city.',\n    location: 'Various Locations',\n    distance: 3.5,\n    rating: 4.7,\n    members: 85,\n    tags: ['Art', 'Outdoors', 'Travel'],\n    image: 'https://images.unsplash.com/photo-1452587925148-ce544e77e70d?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\n    admin: {\n      id: '302',\n      name: 'Amanda Kim',\n      image: 'https://randomuser.me/api/portraits/women/62.jpg',\n      verified: true\n    }\n  },\n  {\n    id: '7',\n    title: 'Game Night Club',\n    type: 'interest',\n    category: 'entertainment',\n    description: 'Weekly board games, card games, and casual video gaming meetups.',\n    location: 'The Game Store',\n    distance: 1.7,\n    rating: 4.8,\n    members: 60,\n    tags: ['Gaming', 'Social', 'Tech'],\n    image: 'https://images.unsplash.com/photo-1610890716171-6b1bb98ffd09?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\n    admin: {\n      id: '303',\n      name: 'Tyler Smith',\n      image: 'https://randomuser.me/api/portraits/men/92.jpg',\n      verified: false\n    }\n  },\n  {\n    id: '8',\n    title: 'Foodies Group',\n    type: 'interest',\n    category: 'food',\n    description: 'Explore new restaurants and cuisines together in our food-loving community.',\n    location: 'Various Restaurants',\n    distance: 2.8,\n    rating: 4.6,\n    members: 140,\n    tags: ['Food', 'Social', 'Travel'],\n    image: 'https://images.unsplash.com/photo-1576867757603-05b134ebc379?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\n    admin: {\n      id: '304',\n      name: 'Lisa Wong',\n      image: 'https://randomuser.me/api/portraits/women/72.jpg',\n      verified: true\n    }\n  }\n];\n\n// Helper function to generate filtered mock results based on tab, query, and filters\nexport const generateMockResults = (tab, query, appliedFilters) => {\n  let data;\n  \n  // Select data based on tab\n  switch (tab) {\n    case 'tables':\n      data = [...tablesData];\n      break;\n    case 'events':\n      data = [...eventsData];\n      break;\n    case 'circles':\n      data = [...circlesData];\n      break;\n    default:\n      data = [...tablesData];\n  }\n  \n  // Apply search filter if query exists\n  if (query) {\n    const lowercaseQuery = query.toLowerCase();\n    data = data.filter(item => \n      (item.title && item.title.toLowerCase().includes(lowercaseQuery)) ||\n      (item.description && item.description.toLowerCase().includes(lowercaseQuery))\n    );\n  }\n  \n  // Apply distance filter\n  if (appliedFilters.distance) {\n    data = data.filter(item => \n      item.distance && item.distance <= appliedFilters.distance\n    );\n  }\n  \n  // Apply sorting\n  if (appliedFilters.sortBy === 'distance') {\n    data.sort((a, b) => (a.distance || 0) - (b.distance || 0));\n  } else if (appliedFilters.sortBy === 'rating') {\n    data.sort((a, b) => (b.rating || 0) - (a.rating || 0));\n  }\n  \n  return data;\n};\n","import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport exploreService from '../../services/exploreService';\n\n/**\n * Custom hook for fetching explore items with optional filters\n * Following Single Responsibility Principle and Interface Segregation Principle\n * \n * @param {Object} filters - Filtering parameters (query, tags, distance, sortBy)\n * @param {Object} options - React Query options\n * @returns {Object} - React Query result object\n */\nexport const useExploreItems = (filters = {}, options = {}) => {\n  return useQuery({\n    queryKey: ['explore', filters],\n    queryFn: () => exploreService.getExploreItems(filters),\n    ...options\n  });\n};\n\n/**\n * Custom hook for fetching a specific explore item's details\n * \n * @param {string} id - Item ID\n * @param {string} type - Item type (event, table, circle)\n * @param {Object} options - React Query options\n * @returns {Object} - React Query result object\n */\nexport const useExploreItemDetails = (id, type, options = {}) => {\n  return useQuery({\n    queryKey: ['explore', type, id],\n    queryFn: () => exploreService.getItemDetails(id, type),\n    enabled: !!id && !!type,\n    ...options\n  });\n};\n\n/**\n * Custom hook for managing explore search state with React Query\n * This separates the concern of pagination from data fetching\n * \n * @param {Object} initialFilters - Initial filter state\n * @returns {Object} - Query state and handlers\n */\nexport const useExploreSearch = (initialFilters = {}) => {\n  const queryClient = useQueryClient();\n  \n  // Fetch explore items with current filters\n  const query = useExploreItems(initialFilters, {\n    keepPreviousData: true,\n  });\n  \n  // Optimized handler for updating filters that prevents unnecessary re-renders\n  const updateFilters = (newFilters) => {\n    // Prefetch the data with new filters\n    queryClient.prefetchQuery({\n      queryKey: ['explore', { ...initialFilters, ...newFilters }],\n      queryFn: () => exploreService.getExploreItems({ ...initialFilters, ...newFilters }),\n    });\n  };\n  \n  return {\n    ...query,\n    updateFilters,\n  };\n};\n","import React, { useEffect } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useCurrentUser } from '../../hooks/queries/useAuthQueries';\nimport SkeletonLoader from '../ui/SkeletonLoader';\n\n// Following Single Responsibility Principle - this component only handles route protection\n// Accept ...rest to forward all extra props to the child\nconst ProtectedRoute = ({ children, ...rest }) => {\n  const { data: user, isLoading: loading, error } = useCurrentUser();\n  const isAuthenticated = !!user;\n  const location = useLocation();\n\n  useEffect(() => {\n    console.log('ProtectedRoute state:', { isAuthenticated, loading, user });\n  }, [isAuthenticated, loading, user]);\n\n  // If authentication is still loading, show a skeleton loader based on the current route\n  if (loading) {\n    // Determine which skeleton type to show based on the current path\n    const path = location.pathname;\n    let skeletonType = 'default';\n    \n    if (path.includes('/profile')) {\n      skeletonType = 'profile';\n    } else if (path.includes('/feed')) {\n      skeletonType = 'feed';\n    } else if (path.includes('/chat') || path.includes('/messages')) {\n      skeletonType = 'chat';\n    }\n    \n    return <SkeletonLoader type={skeletonType} />;\n  }\n\n  // If there's an error or not authenticated, redirect to login page with the return URL\n  if (error || !isAuthenticated) {\n    console.log('User not authenticated, redirecting to login');\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  // If authenticated, clone and render the child with forwarded props\n  console.log('User authenticated, rendering protected content');\n  // If the child is a valid React element, clone it with the extra props\n  if (React.isValidElement(children)) {\n    return React.cloneElement(children, { ...rest });\n  }\n  // Otherwise, just render as is\n  return children;\n};\n\nexport default ProtectedRoute;\n","import React from 'react';\r\nimport { useCurrentUser } from '../../hooks/queries/useAuthQueries';\r\nimport SkeletonLoader from '../ui/SkeletonLoader';\r\n\r\n/**\r\n * PublicRoute Component\r\n * \r\n * This component allows access to routes whether the user is authenticated or not.\r\n * It still passes the user data to the child component if the user is authenticated.\r\n */\r\nconst PublicRoute = ({ children, ...rest }) => {\r\n  const { data: user, isLoading: loading } = useCurrentUser();\r\n  \r\n  // If authentication is still loading, show a skeleton loader\r\n  if (loading) {\r\n    return <SkeletonLoader type=\"default\" />;\r\n  }\r\n  \r\n  // If the child is a valid React element, clone it with the extra props\r\n  if (React.isValidElement(children)) {\r\n    return React.cloneElement(children, { \r\n      ...rest,\r\n      user: user || null // Pass user data if available, otherwise null\r\n    });\r\n  }\r\n  \r\n  // Otherwise, just render as is\r\n  return children;\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\n// Following Single Responsibility Principle - Footer only handles footer content\nconst Footer = () => {\n  const location = useLocation();\n\n  // Do not render footer on chat/message pages\n  if (location.pathname.startsWith('/messages')) {\n    return null;\n  }\n\n  return (\n    <footer className=\"bg-gray-800 text-white py-8 w-full mt-auto relative\">\n      <div className=\"w-full px-4\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8 max-w-7xl mx-auto\">\n          <div>\n            <h3 className=\"text-xl font-bold mb-4\">Tymout</h3>\n            <p className=\"text-gray-300\">\n              Your Next Adventure Starts Here\n            </p>\n          </div>\n          \n          <div>\n            <h4 className=\"text-lg font-semibold mb-4\">Quick Links</h4>\n            <ul className=\"space-y-2 text-gray-300\">\n              <li><Link to=\"/\" className=\"hover:text-white transition-colors\">Home</Link></li>\n              <li><Link to=\"/discover\" className=\"hover:text-white transition-colors\">Discover Tables</Link></li>\n              <li><Link to=\"/create\" className=\"hover:text-white transition-colors\">Host a Table</Link></li>\n              <li><Link to=\"/about\" className=\"hover:text-white transition-colors\">About Us</Link></li>\n            </ul>\n          </div>\n          \n          <div>\n            <h4 className=\"text-lg font-semibold mb-4\">Support</h4>\n            <ul className=\"space-y-2 text-gray-300\">\n              <li><Link to=\"/faq\" className=\"hover:text-white transition-colors\">FAQ</Link></li>\n              <li><Link to=\"/contact\" className=\"hover:text-white transition-colors\">Contact Us</Link></li>\n              <li><Link to=\"/safety\" className=\"hover:text-white transition-colors\">Safety</Link></li>\n              <li><Link to=\"/terms\" className=\"hover:text-white transition-colors\">Terms of Service</Link></li>\n            </ul>\n          </div>\n          \n          <div>\n            <h4 className=\"text-lg font-semibold mb-4\">Connect With Us</h4>\n            <div className=\"flex space-x-4\">\n              <a href=\"https://facebook.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-gray-300 hover:text-white transition-colors\">\n                <span className=\"sr-only\">Facebook</span>\n                <svg className=\"h-6 w-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                  <path fillRule=\"evenodd\" d=\"M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z\" clipRule=\"evenodd\" />\n                </svg>\n              </a>\n              <a href=\"https://instagram.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-gray-300 hover:text-white transition-colors\">\n                <span className=\"sr-only\">Instagram</span>\n                <svg className=\"h-6 w-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                  <path fillRule=\"evenodd\" d=\"M12.315 2c2.43 0 2.784.013 3.808.06 1.064.049 1.791.218 2.427.465a4.902 4.902 0 011.772 1.153 4.902 4.902 0 011.153 1.772c.247.636.416 1.363.465 2.427.048 1.067.06 1.407.06 4.123v.08c0 2.643-.012 2.987-.06 4.043-.049 1.064-.218 1.791-.465 2.427a4.902 4.902 0 01-1.153 1.772 4.902 4.902 0 01-1.772 1.153c-.636.247-1.363.416-2.427.465-1.067.048-1.407.06-4.123.06h-.08c-2.643 0-2.987-.012-4.043-.06-1.064-.049-1.791-.218-2.427-.465a4.902 4.902 0 01-1.772-1.153 4.902 4.902 0 01-1.153-1.772c-.247-.636-.416-1.363-.465-2.427-.047-1.024-.06-1.379-.06-3.808v-.63c0-2.43.013-2.784.06-3.808.049-1.064.218-1.791.465-2.427a4.902 4.902 0 011.153-1.772A4.902 4.902 0 015.45 2.525c.636-.247 1.363-.416 2.427-.465C8.901 2.013 9.256 2 11.685 2h.63zm-.081 1.802h-.468c-2.456 0-2.784.011-3.807.058-.975.045-1.504.207-1.857.344-.467.182-.8.398-1.15.748-.35.35-.566.683-.748 1.15-.137.353-.3.882-.344 1.857-.047 1.023-.058 1.351-.058 3.807v.468c0 2.456.011 2.784.058 3.807.045.975.207 1.504.344 1.857.182.466.399.8.748 1.15.35.35.683.566 1.15.748.353.137.882.3 1.857.344 1.054.048 1.37.058 4.041.058h.08c2.597 0 2.917-.01 3.96-.058.976-.045 1.505-.207 1.858-.344.466-.182.8-.398 1.15-.748.35-.35.566-.683.748-1.15.137-.353.3-.882.344-1.857.048-1.055.058-1.37.058-4.041v-.08c0-2.597-.01-2.917-.058-3.96-.045-.976-.207-1.505-.344-1.858a3.097 3.097 0 00-.748-1.15 3.098 3.098 0 00-1.15-.748c-.353-.137-.882-.3-1.857-.344-1.023-.047-1.351-.058-3.807-.058zM12 6.865a5.135 5.135 0 110 10.27 5.135 5.135 0 010-10.27zm0 1.802a3.333 3.333 0 100 6.666 3.333 3.333 0 000-6.666zm5.338-3.205a1.2 1.2 0 110 2.4 1.2 1.2 0 010-2.4z\" clipRule=\"evenodd\" />\n                </svg>\n              </a>\n              <a href=\"https://twitter.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-gray-300 hover:text-white transition-colors\">\n                <span className=\"sr-only\">Twitter</span>\n                <svg className=\"h-6 w-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                  <path d=\"M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84\" />\n                </svg>\n              </a>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"mt-8 pt-8 border-t border-gray-700 text-center text-gray-400 max-w-7xl mx-auto\">\n          <p>&copy; {new Date().getFullYear()} Tymout. All rights reserved.</p>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useMemo } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { FaCommentDots, FaUsers, FaUser } from 'react-icons/fa';\n\n// Combined navigation component that serves as both bottom nav on mobile and side nav on desktop\n// Following Single Responsibility Principle - This component handles all navigation in a unified way\nconst ResponsiveNavBar = () => {\n  const location = useLocation();\n  \n  // Navigation items configuration - memoized to prevent recreating on each render\n  const navItems = useMemo(() => [\n    { name: 'Experience', path: '/explore', icon: <FaUsers /> },\n    { name: 'Chats', path: '/myevents', icon: <FaCommentDots /> },\n    { name: 'Profile', path: '/profile', icon: <FaUser /> }\n  ], []);\n  \n  // Don't show nav on login or signup pages\n  const publicPages = ['/login', '/signup', '/'];\n  // Hide nav on auth pages\n  if (publicPages.includes(location.pathname)) {\n    return null;\n  }\n\n  // Hide nav on chat/message detail pages (e.g., /messages/123)\n  if (location.pathname.startsWith('/messages')) {\n    return null;\n  }\n\n  return (\n    <>\n      <style>{`\n        .glassy-nav {\n          background-color: rgba(255, 255, 255, 0.08);\n          backdrop-filter: blur(16px);\n          -webkit-backdrop-filter: blur(16px);\n          border-right: 1px solid rgba(255, 255, 255, 0.25);\n          box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.15);\n        }\n        \n        .glassy-nav-mobile {\n          background-color: rgba(255, 255, 255, 0.08);\n          backdrop-filter: blur(16px);\n          -webkit-backdrop-filter: blur(16px);\n          border-top: 1px solid rgba(255, 255, 255, 0.25);\n          box-shadow: 0 -8px 32px 0 rgba(31, 38, 135, 0.15);\n        }\n      `}</style>\n      {/* Desktop Left Side Navigation - hidden on mobile, visible on md+ screens */}\n      <nav className=\"hidden md:block w-64 h-screen glassy-nav p-6 fixed top-20 left-0 flex-col z-10\"> \n        <ul className=\"space-y-5\">\n          {navItems.map((item) => (\n            <li key={item.name}>\n              <NavLink\n                to={item.path}\n                className={({ isActive }) =>\n                  `flex items-center p-3 rounded-lg transition-colors ${\n                    isActive \n                      ? 'text-indigo-600 font-semibold' \n                      : 'text-gray-700 hover:bg-gray-200'\n                  }`\n                }\n              >\n                <span className=\"mr-3 text-xl\">{item.icon}</span>\n                {item.name}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      </nav>\n\n      {/* Mobile Bottom Navigation - visible on small screens, hidden on md+ */}\n      <nav className=\"md:hidden fixed bottom-0 left-0 right-0 glassy-nav-mobile z-50\">\n        <ul className=\"flex justify-between items-center p-2\">\n          {navItems.map((item) => (\n            <li key={item.name} className=\"flex-1 flex justify-center\">\n              <NavLink\n                to={item.path}\n                className={({ isActive }) =>\n                  `flex flex-col items-center w-full max-w-[80px] mx-auto p-2 ${\n                    isActive \n                      ? 'text-indigo-600' \n                      : 'text-gray-500 hover:text-gray-800'\n                  }`\n                }\n              >\n                <span className=\"text-xl mb-1\">{item.icon}</span>\n                <span className=\"text-xs text-center\">{item.name}</span>\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </>\n  );\n};\n\nexport default ResponsiveNavBar;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { FaMapMarkerAlt, FaSearch, FaSpinner } from 'react-icons/fa';\nimport { searchPlaces } from '../../services/googlePlacesService';\n\n/**\n * PlaceSearch Component\n * \n * A search input that uses TomTom API to find places in a specific city\n */\nconst PlaceSearch = ({ city, onPlaceSelect, error }) => {\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  const searchRef = useRef(null);\n  const resultsRef = useRef(null);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (\n        searchRef.current && \n        !searchRef.current.contains(event.target) &&\n        resultsRef.current && \n        !resultsRef.current.contains(event.target)\n      ) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // Search for places when query changes\n  useEffect(() => {\n    const searchTimeout = setTimeout(async () => {\n      if (query.length >= 2 && city) {\n        setIsLoading(true);\n        setIsOpen(true);\n        \n        try {\n          const places = await searchPlaces(query, city);\n          setResults(places);\n        } catch (error) {\n          console.error('Error searching places:', error);\n          setResults([]);\n        } finally {\n          setIsLoading(false);\n        }\n      } else {\n        setResults([]);\n      }\n    }, 500); // Debounce search requests\n\n    return () => clearTimeout(searchTimeout);\n  }, [query, city]);\n\n  const handleInputChange = (e) => {\n    setQuery(e.target.value);\n    if (e.target.value === '') {\n      setSelectedPlace(null);\n      onPlaceSelect(null);\n    }\n  };\n\n  const handlePlaceSelect = (place) => {\n    setSelectedPlace(place);\n    setQuery(place.name);\n    setIsOpen(false);\n    onPlaceSelect(place);\n  };\n\n  return (\n    <div className=\"relative\">\n      <div className=\"relative\" ref={searchRef}>\n        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n          <FaMapMarkerAlt className=\"h-5 w-5 text-gray-400\" />\n        </div>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={handleInputChange}\n          onFocus={() => query.length >= 2 && setIsOpen(true)}\n          placeholder=\"Search for a place...\"\n          className={`pl-10 block w-full rounded-md shadow-sm sm:text-sm ${\n            error\n              ? 'border-red-300 focus:ring-red-500 focus:border-red-500' \n              : 'border-gray-300 focus:ring-indigo-500 focus:border-indigo-500'\n          }`}\n          disabled={!city}\n        />\n        {isLoading && (\n          <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center\">\n            <FaSpinner className=\"h-5 w-5 text-gray-400 animate-spin\" />\n          </div>\n        )}\n      </div>\n      \n      {error && (\n        <p className=\"mt-1 text-sm text-red-600\">{error}</p>\n      )}\n      \n      {!city && (\n        <p className=\"mt-1 text-sm text-amber-600\">Please select a city first</p>\n      )}\n      \n      {isOpen && results.length > 0 && (\n        <div \n          ref={resultsRef}\n          className=\"absolute z-10 mt-1 w-full bg-white shadow-lg rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto max-h-60\"\n        >\n          {results.map((place) => (\n            <div\n              key={place.id}\n              onClick={() => handlePlaceSelect(place)}\n              className=\"cursor-pointer hover:bg-gray-100 px-4 py-2\"\n            >\n              <div className=\"font-medium\">{place.name}</div>\n              <div className=\"text-sm text-gray-500\">{place.address}</div>\n              {place.category && (\n                <div className=\"text-xs text-gray-400\">{place.category}</div>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n      \n      {isOpen && query.length >= 2 && results.length === 0 && !isLoading && (\n        <div className=\"absolute z-10 mt-1 w-full bg-white shadow-lg rounded-md py-4 text-center text-gray-500 ring-1 ring-black ring-opacity-5\">\n          No places found. Try a different search term.\n        </div>\n      )}\n    </div>\n  );\n};\n\nPlaceSearch.propTypes = {\n  city: PropTypes.string,\n  onPlaceSelect: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nexport default PlaceSearch;\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm, Controller } from 'react-hook-form';\nimport { FaCalendarAlt, FaMapMarkerAlt, FaClock, FaUsers, FaTags, FaImage, FaUpload, FaBuilding } from 'react-icons/fa';\n\n/**\n * EventCreationFormHookForm Component\n * \n * Modernized version of EventCreationForm using React Hook Form\n * Following Single Responsibility Principle: Handles only the UI and validation logic\n * Follows Interface Segregation Principle: Only accepts props it needs\n */\nimport { useAuthStore } from '../../stores/authStore';\nimport PlaceSearch from './PlaceSearch';\n\nconst EventCreationFormHookForm = ({ defaultValues, onSubmit, locations, isSubmitting, selectedTemplate }) => {\n  const [imagePreview, setImagePreview] = useState(null);\n  const [imageFile, setImageFile] = useState(null);\n  const [uploadError, setUploadError] = useState('');\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  const fileInputRef = useRef(null);\n  \n  // State for AM/PM selection\n  const [timeAmPm, setTimeAmPm] = useState('AM');\n  \n  // Format time from user input (HH:MM) and AM/PM to 24-hour format\n  const formatTimeFor24Hour = (timeInput, ampm) => {\n    if (!timeInput) return '';\n    \n    // If the time is already in 24-hour format, return it\n    if (timeInput.includes(':') && timeInput.length === 5) {\n      const [hours, minutes] = timeInput.split(':');\n      const hoursInt = parseInt(hours, 10);\n      \n      // If valid 24-hour format, return it\n      if (hoursInt >= 0 && hoursInt < 24) {\n        return timeInput;\n      }\n    }\n    \n    // Parse the time input - accept different formats\n    let hours = 0;\n    let minutes = 0;\n    \n    // Handle different formats (8:30, 8.30, 830, 8)\n    if (timeInput.includes(':')) {\n      [hours, minutes] = timeInput.split(':').map(num => parseInt(num, 10));\n    } else if (timeInput.includes('.')) {\n      [hours, minutes] = timeInput.split('.').map(num => parseInt(num, 10));\n    } else if (timeInput.length <= 2) {\n      // If just hours provided (e.g., \"8\")\n      hours = parseInt(timeInput, 10);\n      minutes = 0;\n    } else if (timeInput.length <= 4) {\n      // If time provided without separator (e.g., \"830\")\n      hours = parseInt(timeInput.substring(0, timeInput.length - 2), 10);\n      minutes = parseInt(timeInput.substring(timeInput.length - 2), 10);\n    }\n    \n    // Handle AM/PM conversion\n    if (ampm === 'PM' && hours < 12) {\n      hours += 12;\n    } else if (ampm === 'AM' && hours === 12) {\n      hours = 0;\n    }\n    \n    // Format to HH:MM\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\n  };\n  \n  const { \n    control, \n    handleSubmit, \n    formState: { errors }, \n    watch,\n    setValue \n  } = useForm({\n    defaultValues: defaultValues || {\n      title: '',\n      description: '',\n      date: '',\n      time: '',\n      city: '',\n      place: null,\n      duration: 60,\n      maxAttendees: 10,\n      isPublic: true,\n      isRecurring: false,\n      tags: [],\n      category: 'Food'\n    }\n  });\n  \n  // Watch for changes\n  const selectedCity = watch('city');\n  \n  // State for tag input\n  const [tagInput, setTagInput] = useState('');\n  \n  // Handle tag input change\n  const handleTagInputChange = (e) => {\n    setTagInput(e.target.value);\n  };\n  \n  // Add a tag when the plus button is clicked\n  const handleAddTag = (onChange, currentTags) => {\n    if (!tagInput.trim()) return;\n    \n    // Format tag with first letter capitalized and rest lowercase\n    const formattedTag = tagInput.trim().toLowerCase();\n    const capitalizedTag = formattedTag.charAt(0).toUpperCase() + formattedTag.slice(1);\n    \n    // Convert current tags string to array if it's a string\n    const currentTagsArray = typeof currentTags === 'string' \n      ? currentTags.split(',').map(tag => tag.trim()).filter(tag => tag)\n      : Array.isArray(currentTags) ? currentTags : [];\n    \n    // Check if tag already exists (case-insensitive)\n    const tagExists = currentTagsArray.some(tag => \n      tag.toLowerCase() === capitalizedTag.toLowerCase()\n    );\n    \n    // Add the new tag if it's not already in the array\n    if (!tagExists) {\n      const updatedTags = [...currentTagsArray, capitalizedTag];\n      \n      // Update the form value with the comma-separated string\n      onChange(updatedTags.join(', '));\n      \n      // Also store the array version\n      setValue('tagsArray', updatedTags);\n    }\n    \n    // Clear the input\n    setTagInput('');\n  };\n  \n  // Remove a tag\n  const handleRemoveTag = (tagToRemove, onChange, currentTags) => {\n    // Convert current tags string to array\n    const currentTagsArray = typeof currentTags === 'string' \n      ? currentTags.split(',').map(tag => tag.trim()).filter(tag => tag)\n      : Array.isArray(currentTags) ? currentTags : [];\n    \n    // Remove the tag\n    const updatedTags = currentTagsArray.filter(tag => tag !== tagToRemove);\n    \n    // Update the form value\n    onChange(updatedTags.join(', '));\n    \n    // Also update the array version\n    setValue('tagsArray', updatedTags);\n  };\n  \n  const user = useAuthStore(state => state.user);\n\n  // Handle image selection\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    console.log('[EventCreationForm] Selected file:', file ? { name: file.name, type: file.type, size: file.size } : 'No file');\n    \n    if (!file) {\n      console.log('[EventCreationForm] No file selected');\n      return;\n    }\n    \n    // Validate file type\n    const validTypes = ['image/jpeg', 'image/png', 'image/jpg'];\n    console.log('[EventCreationForm] File type validation:', { fileType: file.type, isValid: validTypes.includes(file.type) });\n    \n    if (!validTypes.includes(file.type)) {\n      console.log('[EventCreationForm] Invalid file type rejected');\n      setUploadError('Please select a valid image file (JPEG, PNG)');\n      return;\n    }\n    \n    // Validate file size (5MB max)\n    const maxSize = 5 * 1024 * 1024;\n    console.log('[EventCreationForm] File size validation:', { fileSize: file.size, maxSize, isValid: file.size <= maxSize });\n    \n    if (file.size > maxSize) {\n      console.log('[EventCreationForm] File too large rejected');\n      setUploadError('Image size should be less than 5MB');\n      return;\n    }\n    \n    console.log('[EventCreationForm] File passed all validations, setting as imageFile');\n    setUploadError('');\n    setImageFile(file);\n    \n    // Create preview\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      console.log('[EventCreationForm] Image preview created');\n      setImagePreview(reader.result);\n    };\n    reader.readAsDataURL(file);\n  };\n  \n  // Trigger file input click\n  const triggerFileInput = () => {\n    fileInputRef.current.click();\n  };\n\n  const processForm = async (data) => {\n    try {\n      // Transform form data to match backend schema\n      const startDateTime = new Date(`${data.date}T${data.time}`);\n      const endDateTime = new Date(startDateTime.getTime() + (data.duration || 60) * 60000);\n      const eventData = {\n        title: data.title,\n        description: data.description,\n        location: {\n          type: 'physical', // For now, assuming physical; can extend for virtual\n          city: data.city || '',\n          onlineLink: ''\n        },\n        place: selectedPlace ? {\n          placeId: selectedPlace.id,\n          name: selectedPlace.name,\n          address: selectedPlace.address,\n          coordinates: selectedPlace.coordinates,\n          category: selectedPlace.category.replace('_', ' '),  // Format Google category\n          city: data.city\n        } : null,\n        date: {\n          start: startDateTime,\n          end: endDateTime\n        },\n        host: {\n          userId: user && user.id ? user.id : '000000000000000000000000',\n          name: user && user.name ? user.name : 'Test Host'\n        },\n        attendees: [],\n        tags: typeof data.tags === 'string' ? data.tags.split(',').map(tag => tag.trim()).filter(tag => tag) : data.tags,\n        type: 'table',\n        status: 'pending',\n        maxAttendees: data.maxAttendees,\n        entryFee: data.entryFee || 0,\n        category: data.category,\n        access: data.isPublic ? 'public' : 'private',\n        isPublic: data.isPublic // Explicitly include the isPublic field\n      };\n      \n      // Include the image file if one was selected\n      if (imageFile) {\n        eventData.eventImage = imageFile;\n      }\n      \n      onSubmit(eventData, imageFile);\n    } catch (error) {\n      console.error('Error processing form:', error);\n      setUploadError('Error processing form. Please try again.');\n    }\n  };\n\n\n\n  return (\n    <div>\n      {selectedTemplate && (\n        <div className=\"mb-4\">\n          <span className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800\">\n            Using template: {selectedTemplate.name}\n          </span>\n        </div>\n      )}\n\n      <form onSubmit={handleSubmit(processForm)}>\n        <div className=\"space-y-6\">\n          {/* Title Field */}\n          <div>\n            <label htmlFor=\"title\" className=\"block text-base font-medium text-gray-700\">\n              Table Title*\n            </label>\n            <div className=\"mt-1\">\n              <Controller\n                name=\"title\"\n                control={control}\n                rules={{ required: 'Title is required' }}\n                render={({ field }) => (\n                  <input\n                    type=\"text\"\n                    id=\"title\"\n                    className={`block w-full rounded-md shadow-sm sm:text-sm border border-black ${\n                      errors.title \n                        ? 'border-red-300 focus:ring-red-500 focus:border-red-500' \n                        : 'focus:ring-indigo-500 focus:border-indigo-500'\n                    }`}\n                    {...field}\n                  />\n                )}\n              />\n              {errors.title && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.title.message}</p>\n              )}\n            </div>\n          </div>\n\n          {/* Description Field */}\n          <div>\n            <label htmlFor=\"description\" className=\"block text-base font-medium text-gray-700\">\n              Description*\n            </label>\n            <div className=\"mt-1\">\n              <Controller\n                name=\"description\"\n                control={control}\n                rules={{ required: 'Description is required' }}\n                render={({ field }) => (\n                  <textarea\n                    id=\"description\"\n                    rows=\"4\"\n                    className={`block w-full rounded-md shadow-sm sm:text-sm border border-black ${\n                      errors.description\n                        ? 'border-red-300 focus:ring-red-500 focus:border-red-500' \n                        : 'focus:ring-indigo-500 focus:border-indigo-500'\n                    }`}\n                    {...field}\n                  />\n                )}\n              />\n              {errors.description && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.description.message}</p>\n              )}\n            </div>\n            <p className=\"mt-1 text-sm text-gray-500\">\n              Describe what your table is about and what participants can expect.\n            </p>\n            \n            {/* Ready-made description suggestions */}\n            <div className=\"mt-3\">\n              <p className=\"text-sm font-medium text-gray-700 mb-2\">Category-based descriptions:</p>\n              <div className=\"flex flex-wrap gap-2\">\n                {/* Socialize description */}\n                <button\n                  type=\"button\"\n                  onClick={() => setValue('description', 'Join us for a social gathering at _______ where we can connect, share stories, and make new friends in a relaxed setting. Perfect for anyone looking to expand their social circle!')}\n                  className=\"text-xs px-3 py-1.5 bg-fuchsia-50 text-fuchsia-700 rounded-full hover:bg-fuchsia-100 transition-colors\"\n                >\n                  Socialize template\n                </button>\n                \n                {/* Food description */}\n                <button\n                  type=\"button\"\n                  onClick={() => setValue('description', 'Let\\'s enjoy delicious _______ cuisine together! This table is for food lovers who want to explore new flavors while making connections. All dietary preferences welcome!')}\n                  className=\"text-xs px-3 py-1.5 bg-rose-50 text-rose-700 rounded-full hover:bg-rose-100 transition-colors\"\n                >\n                  Food template\n                </button>\n                \n                {/* Play description */}\n                <button\n                  type=\"button\"\n                  onClick={() => setValue('description', 'Come join us for a fun _______ activity! Whether you\\'re experienced or a beginner, this is a great opportunity to stay active and meet like-minded people. All skill levels welcome!')}\n                  className=\"text-xs px-3 py-1.5 bg-violet-50 text-violet-700 rounded-full hover:bg-violet-100 transition-colors\"\n                >\n                  Play template\n                </button>\n                \n                {/* Travel description */}\n                <button\n                  type=\"button\"\n                  onClick={() => setValue('description', 'Explore _______ with a group of fellow travelers! We\\'ll discover hidden gems, share travel stories, and create memorable experiences together. Great for both locals and visitors!')}\n                  className=\"text-xs px-3 py-1.5 bg-cyan-50 text-cyan-700 rounded-full hover:bg-cyan-100 transition-colors\"\n                >\n                  Travel template\n                </button>\n              </div>\n              <p className=\"text-xs text-gray-500 mt-2\">Tip: Replace the blank spaces (______) with your specific details.</p>\n            </div>\n          </div>\n\n          {/* Date & Time Row */}\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n            {/* Date Field */}\n            <div>\n              <label htmlFor=\"date\" className=\"block text-base font-medium text-gray-700\">\n                <span className=\"inline-flex items-center\">\n                  <FaCalendarAlt className=\"mr-2 text-gray-400\" />\n                  Date*\n                </span>\n              </label>\n              <div className=\"mt-1\">\n                <Controller\n                  name=\"date\"\n                  control={control}\n                  rules={{ required: 'Date is required' }}\n                  render={({ field }) => (\n                    <input\n                      type=\"date\"\n                      id=\"date\"\n                      className={`block w-full rounded-md shadow-sm sm:text-sm border border-black ${\n                        errors.date\n                          ? 'border-red-300 focus:ring-red-500 focus:border-red-500' \n                          : 'focus:ring-indigo-500 focus:border-indigo-500'\n                      }`}\n                      {...field}\n                    />\n                  )}\n                />\n                {errors.date && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.date.message}</p>\n                )}\n              </div>\n            </div>\n\n            {/* Time Field */}\n            <div>\n              <label htmlFor=\"time\" className=\"block text-base font-medium text-gray-700\">\n                <span className=\"inline-flex items-center\">\n                  <FaClock className=\"mr-2 text-gray-400\" />\n                  Time*\n                </span>\n              </label>\n              <div className=\"mt-1\">\n                <Controller\n                  name=\"time\"\n                  control={control}\n                  rules={{ \n                    required: 'Time is required',\n                    validate: (value) => {\n                      // Validate that the input is a valid time\n                      if (!value) return 'Time is required';\n                      \n                      // The value should already be in 24-hour format from our handler\n                      const timeRegex = /^([01]?[0-9]|2[0-3]):[0-5][0-9]$/;\n                      return timeRegex.test(value) || 'Please enter a valid time';\n                    }\n                  }}\n                  render={({ field: { onChange, value, ...fieldProps } }) => {\n                    // Parse the 24-hour format time to display in 12-hour format\n                    let displayTime = '';\n                    let displayAmPm = timeAmPm;\n                    \n                    if (value) {\n                      const [hours, minutes] = value.split(':');\n                      const hoursInt = parseInt(hours, 10);\n                      \n                      // Determine AM/PM\n                      if (hoursInt >= 12) {\n                        displayAmPm = 'PM';\n                        const displayHours = hoursInt === 12 ? 12 : hoursInt - 12;\n                        displayTime = `${displayHours}:${minutes}`;\n                      } else {\n                        displayAmPm = 'AM';\n                        const displayHours = hoursInt === 0 ? 12 : hoursInt;\n                        displayTime = `${displayHours}:${minutes}`;\n                      }\n                      \n                      // Update the AM/PM state\n                      if (displayAmPm !== timeAmPm) {\n                        setTimeAmPm(displayAmPm);\n                      }\n                    }\n                                        // Extract hours and minutes for display\n                     let selectedHours = '';\n                     let selectedMinutes = '';\n                     \n                     if (displayTime) {\n                       const [hours, minutes] = displayTime.split(':');\n                       selectedHours = parseInt(hours, 10);\n                       selectedMinutes = minutes;\n                     }\n                     \n                     // Generate hours and minutes for selection\n                     const hoursOptions = Array.from({ length: 12 }, (_, i) => i + 1);\n                     const minutesOptions = ['00', '15', '30', '45'];\n                     \n                     return (\n                      <div className=\"flex flex-wrap gap-2\">\n                        <div className=\"flex rounded-md\">\n                          {/* Hours Selector */}\n                          <div className=\"relative\">\n                            <label htmlFor=\"timeHours\" className=\"sr-only\">Hours</label>\n                            <select\n                              id=\"timeHours\"\n                              className={`rounded-l-md pl-3 pr-8 py-2 border border-black text-sm ${errors.time \n                                ? 'border-red-300 focus:ring-red-500 focus:border-red-500' \n                                : 'focus:ring-indigo-500 focus:border-indigo-500'}`}\n                              value={selectedHours}\n                              onChange={(e) => {\n                                const hours = e.target.value;\n                                const minutes = selectedMinutes || '00';\n                                const time24 = formatTimeFor24Hour(`${hours}:${minutes}`, timeAmPm);\n                                onChange(time24);\n                              }}\n                            >\n                              <option value=\"\">Hour</option>\n                              {hoursOptions.map(hour => (\n                                <option key={hour} value={hour}>{hour}</option>\n                              ))}\n                            </select>\n                          </div>\n                          \n                          {/* Minutes Selector */}\n                          <div className=\"relative -ml-px\">\n                            <label htmlFor=\"timeMinutes\" className=\"sr-only\">Minutes</label>\n                            <select\n                              id=\"timeMinutes\"\n                              className={`pl-3 pr-8 py-2 border border-black text-sm ${errors.time \n                                ? 'border-red-300 focus:ring-red-500 focus:border-red-500' \n                                : 'focus:ring-indigo-500 focus:border-indigo-500'}`}\n                              value={selectedMinutes}\n                              onChange={(e) => {\n                                const hours = selectedHours || '12';\n                                const minutes = e.target.value;\n                                const time24 = formatTimeFor24Hour(`${hours}:${minutes}`, timeAmPm);\n                                onChange(time24);\n                              }}\n                            >\n                              <option value=\"\">Min</option>\n                              {minutesOptions.map(minute => (\n                                <option key={minute} value={minute}>{minute}</option>\n                              ))}\n                            </select>\n                          </div>\n                          \n                          {/* AM/PM Selector */}\n                          <div className=\"-ml-px\">\n                            <select\n                              id=\"timeAmPm\"\n                              className={`pl-2 pr-3 py-2 border border-black text-sm rounded-r-md ${errors.time \n                                ? 'border-red-300 focus:ring-red-500 focus:border-red-500' \n                                : 'focus:ring-indigo-500 focus:border-indigo-500'}`}\n                              value={timeAmPm}\n                              onChange={(e) => {\n                                const newAmPm = e.target.value;\n                                setTimeAmPm(newAmPm);\n                                if (selectedHours && selectedMinutes) {\n                                  const time24 = formatTimeFor24Hour(`${selectedHours}:${selectedMinutes}`, newAmPm);\n                                  onChange(time24);\n                                }\n                              }}\n                            >\n                              <option value=\"AM\">AM</option>\n                              <option value=\"PM\">PM</option>\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  }}\n                />\n                {errors.time && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.time.message}</p>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Duration & Max Attendees Row */}\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n            {/* Duration Field */}\n            <div>\n              <label htmlFor=\"duration\" className=\"block text-base font-medium text-gray-700\">\n                <span className=\"inline-flex items-center\">\n                  <FaClock className=\"mr-2 text-gray-400\" />\n                  Duration (minutes)\n                </span>\n              </label>\n              <div className=\"mt-1\">\n                <Controller\n                  name=\"duration\"\n                  control={control}\n                  rules={{ min: { value: 15, message: 'Duration must be at least 15 minutes' } }}\n                  render={({ field }) => (\n                    <input\n                      type=\"number\"\n                      id=\"duration\"\n                      min=\"15\"\n                      step=\"15\"\n                      placeholder=\"e.g., 60\"\n                      className=\"block w-full rounded-md border border-black shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                      {...field}\n                    />\n                  )}\n                />\n                {errors.duration && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.duration.message}</p>\n                )}\n              </div>\n            </div>\n\n            {/* Max Attendees Field */}\n            <div>\n              <label htmlFor=\"maxAttendees\" className=\"block text-base font-medium text-gray-700\">\n                <span className=\"inline-flex items-center\">\n                  <FaUsers className=\"mr-2 text-gray-400\" />\n                  Max Attendees (upto 10)\n                </span>\n              </label>\n              <div className=\"mt-1\">\n                <Controller\n                  name=\"maxAttendees\"\n                  control={control}\n                  rules={{ \n                    min: { value: 1, message: 'At least 1 attendee is required' },\n                    max: { value: 10, message: 'Maximum 10 attendees allowed' }\n                  }}\n                  render={({ field }) => (\n                    <input\n                      type=\"number\"\n                      id=\"maxAttendees\"\n                      min=\"1\"\n                      max=\"10\"\n                      placeholder=\"Maximum 10\"\n                      className=\"block w-full rounded-md border border-black shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                      {...field}\n                    />\n                  )}\n                />\n                {errors.maxAttendees && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.maxAttendees.message}</p>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* City Dropdown Field */}\n          <div>\n            <label htmlFor=\"city\" className=\"block text-base font-medium text-gray-700\">\n              <span className=\"inline-flex items-center\">\n                <FaBuilding className=\"mr-2 text-gray-400\" />\n                City*\n              </span>\n            </label>\n            <div className=\"mt-2\">\n              <Controller\n                name=\"city\"\n                control={control}\n                rules={{ required: 'City is required' }}\n                render={({ field }) => (\n                  <div className=\"flex flex-wrap gap-2\">\n                    {/* Agra Tag */}\n                    <button\n                      type=\"button\"\n                      onClick={() => field.onChange('Agra')}\n                      className={`px-2 py-1 rounded-full border flex items-center ${\n                        field.value === 'Agra'\n                          ? 'bg-indigo-600 text-white border-indigo-600'\n                          : 'bg-white text-indigo-600 border-indigo-200 hover:border-indigo-400'\n                      }`}\n                    >\n                      <span className=\"mr-1 text-xs\">🏙️</span>\n                      <span className=\"font-medium text-xs\">Agra</span>\n                    </button>\n                    \n                    {/* Gurugram Tag */}\n                    <button\n                      type=\"button\"\n                      onClick={() => field.onChange('Gurugram')}\n                      className={`px-2 py-1 rounded-full border flex items-center ${\n                        field.value === 'Gurugram'\n                          ? 'bg-indigo-600 text-white border-indigo-600'\n                          : 'bg-white text-indigo-600 border-indigo-200 hover:border-indigo-400'\n                      }`}\n                    >\n                      <span className=\"mr-1 text-xs\">🌆</span>\n                      <span className=\"font-medium text-xs\">Gurugram</span>\n                    </button>\n                  </div>\n                )}\n              />\n              {errors.city && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.city.message}</p>\n              )}\n            </div>\n          </div>\n          \n          {/* Place Search Field */}\n          <div>\n            <label htmlFor=\"place\" className=\"block text-base font-medium text-gray-700\">\n              <span className=\"inline-flex items-center\">\n                <FaMapMarkerAlt className=\"mr-2 text-gray-400\" />\n                Place*\n              </span>\n            </label>\n            <div className=\"mt-1\">\n              <Controller\n                name=\"place\"\n                control={control}\n                rules={{ \n                  validate: value => {\n                    if (!selectedPlace) return 'Please select a place';\n                    return true;\n                  } \n                }}\n                render={({ field }) => (\n                  <PlaceSearch \n                    city={selectedCity}\n                    onPlaceSelect={(place) => {\n                      setSelectedPlace(place);\n                      field.onChange(place ? place.name : '');\n                    }}\n                    error={errors.place?.message}\n                  />\n                )}\n              />\n            </div>\n            {selectedPlace && (\n              <div className=\"mt-2 p-3 bg-gray-50 rounded-md\">\n                <h4 className=\"font-medium text-gray-700\">{selectedPlace.name}</h4>\n                <p className=\"text-sm text-gray-500\">{selectedPlace.address}</p>\n                {selectedPlace.category && (\n                  <p className=\"text-xs text-gray-400 mt-1\">Category: {selectedPlace.category}</p>\n                )}\n              </div>\n            )}\n          </div>\n\n          {/* Category Field - Tag Style */}\n          <div>\n            <label className=\"block text-base font-medium text-gray-700\">\n              Category*\n            </label>\n            <div className=\"mt-2\">\n              <Controller\n                name=\"category\"\n                control={control}\n                rules={{ required: 'Category is required' }}\n                render={({ field }) => (\n                  <div className=\"flex flex-wrap gap-2\">\n                    {/* Food Tag */}\n                    <button\n                      type=\"button\"\n                      onClick={() => field.onChange('Food')}\n                      className={`px-2 py-1 rounded-full border flex items-center ${\n                        field.value === 'Food'\n                          ? 'bg-rose-600 text-white border-rose-600'\n                          : 'bg-white text-rose-600 border-rose-200 hover:border-rose-400'\n                      }`}\n                    >\n                      <span className=\"mr-1 text-xs\">🍽️</span>\n                      <span className=\"font-medium text-xs\">Food</span>\n                    </button>\n                    \n                    {/* Play Tag */}\n                    <button\n                      type=\"button\"\n                      onClick={() => field.onChange('Play')}\n                      className={`px-2 py-1 rounded-full border flex items-center ${\n                        field.value === 'Play'\n                          ? 'bg-violet-600 text-white border-violet-600'\n                          : 'bg-white text-violet-600 border-violet-200 hover:border-violet-400'\n                      }`}\n                    >\n                      <span className=\"mr-1 text-xs\">👟</span>\n                      <span className=\"font-medium text-xs\">Play</span>\n                    </button>\n                    \n                    {/* Socialize Tag */}\n                    <button\n                      type=\"button\"\n                      onClick={() => field.onChange('Socialize')}\n                      className={`px-2 py-1 rounded-full border flex items-center ${\n                        field.value === 'Socialize'\n                          ? 'bg-fuchsia-600 text-white border-fuchsia-600'\n                          : 'bg-white text-fuchsia-600 border-fuchsia-200 hover:border-fuchsia-400'\n                      }`}\n                    >\n                      <span className=\"mr-1 text-xs\">🎉</span>\n                      <span className=\"font-medium text-xs\">Socialize</span>\n                    </button>\n                    \n                    {/* Travel Tag */}\n                    <button\n                      type=\"button\"\n                      onClick={() => field.onChange('Travel')}\n                      className={`px-2 py-1 rounded-full border flex items-center ${\n                        field.value === 'Travel'\n                          ? 'bg-cyan-600 text-white border-cyan-600'\n                          : 'bg-white text-cyan-600 border-cyan-200 hover:border-cyan-400'\n                      }`}\n                    >\n                      <span className=\"mr-1 text-xs\">✈️</span>\n                      <span className=\"font-medium text-xs\">Travel</span>\n                    </button>\n                  </div>\n                )}\n              />\n              {errors.category && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.category.message}</p>\n              )}\n            </div>\n          </div>\n\n          {/* Capacity field removed - using maxAttendees instead */}\n\n          {/* Event Image Upload */}\n          <div>\n            <label htmlFor=\"eventImage\" className=\"block text-base font-medium text-gray-700\">\n              <span className=\"inline-flex items-center\">\n                <FaImage className=\"mr-2 text-gray-400\" />\n                Event Image\n              </span>\n            </label>\n            <div className=\"mt-1 flex items-center space-x-4\">\n              <input\n                type=\"file\"\n                id=\"eventImage\"\n                ref={fileInputRef}\n                accept=\"image/jpeg,image/png,image/jpg\"\n                onChange={handleImageChange}\n                className=\"hidden\"\n              />\n              <button\n                type=\"button\"\n                onClick={triggerFileInput}\n                className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                <FaUpload className=\"-ml-1 mr-2 h-4 w-4\" />\n                Upload Image\n              </button>\n              {imagePreview && (\n                <div className=\"relative\">\n                  <img\n                    src={imagePreview}\n                    alt=\"Event preview\"\n                    className=\"h-20 w-20 object-cover rounded-md\"\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setImagePreview(null);\n                      setImageFile(null);\n                    }}\n                    className=\"absolute -top-2 -right-2 bg-red-500 text-white rounded-full p-1 w-5 h-5 flex items-center justify-center text-xs\"\n                  >\n                    ×\n                  </button>\n                </div>\n              )}\n            </div>\n            {uploadError && (\n              <p className=\"mt-1 text-sm text-red-600\">{uploadError}</p>\n            )}\n            <p className=\"mt-1 text-sm text-gray-500\">\n              Upload an image for your table (JPEG, PNG, max 5MB)\n            </p>\n          </div>\n          \n          {/* Tags Field */}\n          <div>\n            <label htmlFor=\"tags\" className=\"block text-base font-medium text-gray-700\">\n              <span className=\"inline-flex items-center\">\n                <FaTags className=\"mr-2 text-gray-400\" />\n                Tags\n              </span>\n            </label>\n            <div className=\"mt-1\">\n              <Controller\n                name=\"tags\"\n                control={control}\n                render={({ field: { onChange, value } }) => (\n                  <div>\n                    {/* Tag input with plus button */}\n                    <div className=\"flex mb-2\">\n                      <input\n                        type=\"text\"\n                        id=\"tagInput\"\n                        value={tagInput}\n                        onChange={handleTagInputChange}\n                        placeholder=\"Enter a tag (e.g., coffee)\"\n                        className=\"block w-full rounded-l-md border border-r-0 border-black shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                        onKeyPress={(e) => {\n                          if (e.key === 'Enter') {\n                            e.preventDefault();\n                            handleAddTag(onChange, value);\n                          }\n                        }}\n                      />\n                      <button\n                        type=\"button\"\n                        onClick={() => handleAddTag(onChange, value)}\n                        className=\"inline-flex items-center px-3 py-2 border border-l-0 border-black text-sm leading-4 font-medium rounded-r-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                      >\n                        +\n                      </button>\n                    </div>\n                    \n                    {/* Display added tags */}\n                    <div className=\"flex flex-wrap gap-2 mt-2\">\n                      {(typeof value === 'string' ? value.split(',').map(tag => tag.trim()).filter(tag => tag) : value || []).map((tag, index) => (\n                        <div key={index} className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-indigo-100 text-indigo-800\">\n                          {tag}\n                          <button\n                            type=\"button\"\n                            onClick={() => handleRemoveTag(tag, onChange, value)}\n                            className=\"ml-1 text-indigo-500 hover:text-indigo-800 focus:outline-none\"\n                          >\n                            ×\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              />\n            </div>\n            <p className=\"mt-1 text-sm text-gray-500\">\n              Add relevant tags to help people find your table\n            </p>\n          </div>\n\n          {/* Table Type Toggle */}\n          <div className=\"space-y-4\">\n            <label className=\"block text-base font-medium text-gray-700\">Table Type</label>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-6\">\n              {/* Public */}\n              <label className=\"flex items-start cursor-pointer\">\n                <Controller\n                  name=\"isPublic\"\n                  control={control}\n                  render={({ field: { onChange, value } }) => (\n                    <input\n                      type=\"radio\"\n                      id=\"publicTable\"\n                      checked={value === true}\n                      onChange={() => onChange(true)}\n                      className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\n                    />\n                  )}\n                />\n                <span className=\"ml-2\">\n                  <span className=\"font-medium text-gray-700\">Public Table</span>\n                  <p className=\"text-gray-500 text-sm\">These tables will be visible on the Experience page after approval.</p>\n                </span>\n              </label>\n              {/* Private */}\n              <label className=\"flex items-start cursor-pointer\">\n                <Controller\n                  name=\"isPublic\"\n                  control={control}\n                  render={({ field: { onChange, value } }) => (\n                    <input\n                      type=\"radio\"\n                      id=\"privateTable\"\n                      checked={value === false}\n                      onChange={() => onChange(false)}\n                      className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\n                    />\n                  )}\n                />\n                <span className=\"ml-2\">\n                  <span className=\"font-medium text-gray-700\">Private Table</span>\n                  <p className=\"text-gray-500 text-sm\">These are not shown to other community members but you can share the link to your table.</p>\n                </span>\n              </label>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mt-8\">\n          <button\n            type=\"submit\"\n            disabled={isSubmitting}\n            className={`w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white ${\n              isSubmitting \n                ? 'bg-indigo-400 cursor-not-allowed' \n                : 'bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n            }`}\n          >\n            {isSubmitting ? 'Creating...' : 'Create Table'}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nEventCreationFormHookForm.propTypes = {\n  defaultValues: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    date: PropTypes.string,\n    time: PropTypes.string,\n    city: PropTypes.string,\n    place: PropTypes.object,\n    duration: PropTypes.number,\n    maxAttendees: PropTypes.number,\n    isPublic: PropTypes.bool,\n    isRecurring: PropTypes.bool,\n    tags: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string)\n    ])\n  }),\n  onSubmit: PropTypes.func.isRequired,\n  locations: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      address: PropTypes.string.isRequired\n    })\n  ),\n  isSubmitting: PropTypes.bool,\n  selectedTemplate: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired\n  })\n};\n\nEventCreationFormHookForm.defaultProps = {\n  defaultValues: null,\n  locations: [],\n  isSubmitting: false,\n  selectedTemplate: null\n};\n\nexport default EventCreationFormHookForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm, Controller } from 'react-hook-form';\nimport { FaCalendarAlt, FaRedo } from 'react-icons/fa';\n\n/**\n * RecurringEventSchedulerHookForm Component\n * \n * Following Single Responsibility Principle:\n * - This component is solely responsible for handling recurring event scheduling\n * - Uses React Hook Form for better form state management\n */\nconst RecurringEventSchedulerHookForm = ({ defaultValues, onSubmit, isSubmitting }) => {\n  const { \n    control, \n    handleSubmit, \n    watch, \n    formState: { errors } \n  } = useForm({\n    defaultValues: defaultValues || {\n      frequency: 'weekly',\n      interval: 1,\n      endDate: '',\n      daysOfWeek: []\n    }\n  });\n\n  // Watch frequency field to conditionally render UI\n  const frequency = watch('frequency');\n  \n  // Process form data\n  const processForm = (data) => {\n    onSubmit(data);\n  };\n\n  // Day of week options\n  const daysOfWeek = [\n    { value: 'monday', label: 'Monday' },\n    { value: 'tuesday', label: 'Tuesday' },\n    { value: 'wednesday', label: 'Wednesday' },\n    { value: 'thursday', label: 'Thursday' },\n    { value: 'friday', label: 'Friday' },\n    { value: 'saturday', label: 'Saturday' },\n    { value: 'sunday', label: 'Sunday' }\n  ];\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(processForm)}>\n        <div className=\"space-y-6\">\n          {/* Frequency Selection */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700\">\n              <span className=\"inline-flex items-center\">\n                <FaRedo className=\"mr-2 text-gray-400\" />\n                Frequency\n              </span>\n            </label>\n            <div className=\"mt-1\">\n              <Controller\n                name=\"frequency\"\n                control={control}\n                rules={{ required: 'Frequency is required' }}\n                render={({ field }) => (\n                  <select\n                    id=\"frequency\"\n                    className=\"block w-full rounded-md border-gray-300 shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    {...field}\n                  >\n                    <option value=\"daily\">Daily</option>\n                    <option value=\"weekly\">Weekly</option>\n                    <option value=\"monthly\">Monthly</option>\n                  </select>\n                )}\n              />\n              {errors.frequency && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.frequency.message}</p>\n              )}\n            </div>\n          </div>\n\n          {/* Interval */}\n          <div>\n            <label htmlFor=\"interval\" className=\"block text-sm font-medium text-gray-700\">\n              <span className=\"inline-flex items-center\">\n                Every\n              </span>\n            </label>\n            <div className=\"mt-1 flex items-center\">\n              <Controller\n                name=\"interval\"\n                control={control}\n                rules={{ \n                  required: 'Interval is required',\n                  min: { value: 1, message: 'Interval must be at least 1' }\n                }}\n                render={({ field }) => (\n                  <input\n                    type=\"number\"\n                    id=\"interval\"\n                    min=\"1\"\n                    className=\"inline-block w-16 rounded-md border-gray-300 shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm mr-2\"\n                    {...field}\n                  />\n                )}\n              />\n              <span className=\"text-sm text-gray-500\">\n                {frequency === 'daily' ? 'day(s)' : \n                  frequency === 'weekly' ? 'week(s)' : 'month(s)'}\n              </span>\n            </div>\n            {errors.interval && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.interval.message}</p>\n            )}\n          </div>\n\n          {/* Days of Week - only show for weekly frequency */}\n          {frequency === 'weekly' && (\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                On which days?\n              </label>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\n                {daysOfWeek.map(day => (\n                  <div key={day.value} className=\"flex items-center\">\n                    <Controller\n                      name=\"daysOfWeek\"\n                      control={control}\n                      render={({ field }) => (\n                        <input\n                          type=\"checkbox\"\n                          id={`day-${day.value}`}\n                          value={day.value}\n                          checked={field.value?.includes(day.value)}\n                          onChange={e => {\n                            const isChecked = e.target.checked;\n                            const currentDays = field.value || [];\n                            \n                            if (isChecked) {\n                              field.onChange([...currentDays, day.value]);\n                            } else {\n                              field.onChange(\n                                currentDays.filter(value => value !== day.value)\n                              );\n                            }\n                          }}\n                          className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded mr-2\"\n                        />\n                      )}\n                    />\n                    <label htmlFor={`day-${day.value}`} className=\"text-sm text-gray-700\">\n                      {day.label}\n                    </label>\n                  </div>\n                ))}\n              </div>\n              {errors.daysOfWeek && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.daysOfWeek.message}</p>\n              )}\n            </div>\n          )}\n\n          {/* End Date */}\n          <div>\n            <label htmlFor=\"endDate\" className=\"block text-sm font-medium text-gray-700\">\n              <span className=\"inline-flex items-center\">\n                <FaCalendarAlt className=\"mr-2 text-gray-400\" />\n                End Date\n              </span>\n            </label>\n            <div className=\"mt-1\">\n              <Controller\n                name=\"endDate\"\n                control={control}\n                render={({ field }) => (\n                  <input\n                    type=\"date\"\n                    id=\"endDate\"\n                    className=\"block w-full rounded-md border-gray-300 shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    {...field}\n                  />\n                )}\n              />\n              <p className=\"mt-1 text-sm text-gray-500\">\n                Leave blank for no end date\n              </p>\n            </div>\n          </div>\n\n          <div className=\"mt-6\">\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className={`inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white ${\n                isSubmitting \n                  ? 'bg-indigo-400 cursor-not-allowed' \n                  : 'bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n              }`}\n            >\n              Save Recurring Settings\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nRecurringEventSchedulerHookForm.propTypes = {\n  defaultValues: PropTypes.shape({\n    frequency: PropTypes.string,\n    interval: PropTypes.number,\n    endDate: PropTypes.string,\n    daysOfWeek: PropTypes.arrayOf(PropTypes.string)\n  }),\n  onSubmit: PropTypes.func.isRequired,\n  isSubmitting: PropTypes.bool\n};\n\nRecurringEventSchedulerHookForm.defaultProps = {\n  defaultValues: null,\n  isSubmitting: false\n};\n\nexport default RecurringEventSchedulerHookForm;\n","/**\n * Host Service\n * \n * Following Single Responsibility Principle:\n * - This service is responsible for all host-related API calls\n * - Each function handles a specific operation related to event creation and management\n */\nimport axios from 'axios';\nimport { uploadEventImage } from '../../services/eventImageService';\n\nconst hostService = {\n  /**\n   * Create a new event with optional image upload\n   * @param {Object} eventData - Event data to create\n   * @param {File} imageFile - Optional image file to upload\n   * @returns {Promise<Object>} Created event with image URL\n   */\n  createEvent: async (eventData, imageFile) => {\n    try {\n      console.log('[Host Service] ===== CREATE EVENT STARTED =====');\n      console.log('[Host Service] Creating event with data:', eventData);\n      console.log('[Host Service] imageFile received:', imageFile ? { \n        name: imageFile.name, \n        type: imageFile.type, \n        size: imageFile.size,\n        lastModified: new Date(imageFile.lastModified).toISOString()\n      } : 'No file');\n      \n      // Extract image file if present and remove from event data\n      const eventDataCopy = { ...eventData };\n      if (eventDataCopy.eventImage) {\n        console.log('[Host Service] Found eventImage in eventData, removing it');\n        delete eventDataCopy.eventImage;\n      }\n      \n      // Directly call event-service backend (bypassing API gateway)\n      const baseUrl = process.env.REACT_APP_EVENT_SERVICE_URL || 'http://localhost:3002';\n      const url = `${baseUrl}/events`;\n      console.log('[Host Service] Sending event creation request to:', url);\n      console.log('[Host Service] Request payload:', eventDataCopy);\n      \n      const response = await axios.post(url, eventDataCopy);\n      console.log('[Host Service] Event creation response:', response.data);\n      \n      let createdEvent = response.data.data || response.data;\n      console.log('[Host Service] Event created:', createdEvent);\n      console.log('[Host Service] Event ID:', createdEvent.id || createdEvent._id || 'No ID found');\n      \n      // If we have an image file and the event was created successfully\n      if (imageFile && createdEvent && (createdEvent.id || createdEvent._id)) {\n        console.log('[Host Service] ===== IMAGE UPLOAD STARTED =====');\n        const eventId = createdEvent.id || createdEvent._id;\n        console.log(`[Host Service] Uploading image for event ${eventId}`);\n        console.log('[Host Service] Image file to upload:', { \n          name: imageFile.name, \n          type: imageFile.type, \n          size: imageFile.size \n        });\n        \n        // Extract token from the authorization header, just like event creation\n        // Get the authorization header from the axios default headers\n        const authHeader = axios.defaults.headers.common['Authorization'];\n        console.log('[Host Service] Authorization header:', authHeader ? `${authHeader.substring(0, 15)}...` : 'Not found');\n        \n        // Extract the token from the Bearer format\n        let token = null;\n        if (authHeader && authHeader.startsWith('Bearer ')) {\n          token = authHeader.split(' ')[1];\n          console.log('[Host Service] Token extracted from Authorization header:', token ? `${token.substring(0, 10)}...` : 'Failed to extract');\n        }\n        \n        // Fallback to localStorage if header not available\n        if (!token) {\n          token = localStorage.getItem('token');\n          console.log('[Host Service] Fallback to localStorage token:', token ? 'Token found' : 'No token found');\n        }\n        \n        // If still no token, use a hardcoded token for development (from the server logs)\n        if (!token) {\n          console.log('[Host Service] Using hardcoded token for development');\n          token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4MDRkZjcxYzdiNWQ4MWJiMWRmMDhlNiIsImlhdCI6MTc0NTE0OTgwOSwiZXhwIjoxNzQ1MjM2MjA5fQ.cQ1z0TWTlYRnwOP2_aOo5iHkYKC2kLz6JcJPunk7pH8';\n        }\n        \n        if (!token) {\n          console.error('[Host Service] No authentication token found');\n          throw new Error('Authentication token is required for image upload');\n        }\n        \n        console.log('[Host Service] Using token for image upload:', token.substring(0, 10) + '...');\n        console.log('[Host Service] Token full length:', token.length);\n        \n        try {\n          console.log('[Host Service] Calling uploadEventImage function with:', {\n            imageFile: imageFile ? imageFile.name : 'No file',\n            eventId,\n            tokenProvided: !!token\n          });\n          \n          // Upload the image\n          const imageUrl = await uploadEventImage(imageFile, eventId, token);\n          console.log(`[Host Service] Image upload result:`, imageUrl ? `URL: ${imageUrl}` : 'No URL returned');\n          \n          // Update the event with the image URL\n          if (imageUrl) {\n            console.log(`[Host Service] Image uploaded successfully: ${imageUrl}`);\n            console.log('[Host Service] ===== EVENT UPDATE STARTED =====');\n            \n            // Create update payload with the correct field name\n            const updatePayload = { event_image: imageUrl };\n            console.log(`[Host Service] Updating event with:`, updatePayload);\n            \n            // Use the correct environment variable with REACT_APP_ prefix\n            const baseUrl = process.env.REACT_APP_EVENT_SERVICE_URL || 'http://localhost:3002';\n            const imageUpdateUrl = `${baseUrl}/events/${eventId}/image`;\n            console.log(`[Host Service] Update URL:`, imageUpdateUrl);\n            \n            try {\n              // Make sure the token is in the correct format for the Authorization header\n              // If it doesn't start with 'Bearer ', add it\n              let authToken = token;\n              if (token && !token.startsWith('Bearer ')) {\n                authToken = `Bearer ${token}`;\n                console.log('[Host Service] Added Bearer prefix to token for event update');\n              }\n              \n              console.log('[Host Service] Sending update request with headers:', {\n                'Authorization': authToken ? `${authToken.substring(0, 15)}...` : 'missing'\n              });\n              \n              // Update the event with the image URL using the dedicated image update endpoint\n              const updatedEventResponse = await axios.put(\n                imageUpdateUrl,\n                updatePayload,\n                { headers: { 'Authorization': authToken } }\n              );\n              \n              console.log('[Host Service] Update response:', updatedEventResponse.data);\n              const updatedEvent = updatedEventResponse.data.data || updatedEventResponse.data;\n              console.log(`[Host Service] Event updated successfully:`, updatedEvent);\n              console.log('[Host Service] Updated event_image field:', updatedEvent.event_image || 'Not set');\n              console.log('[Host Service] ===== EVENT UPDATE COMPLETED =====');\n              return updatedEvent;\n            } catch (updateError) {\n              console.error('[Host Service] Error updating event with image URL:', updateError);\n              console.error('[Host Service] Error details:', updateError.message);\n              if (updateError.response) {\n                console.error('[Host Service] Response status:', updateError.response.status);\n                console.error('[Host Service] Response data:', updateError.response.data);\n              }\n              console.log('[Host Service] ===== EVENT UPDATE FAILED =====');\n              // Return the created event even if the image update fails\n              return createdEvent;\n            }\n          } else {\n            console.log('[Host Service] No image URL returned, skipping event update');\n          }\n        } catch (imageError) {\n          console.error('[Host Service] Error uploading image:', imageError);\n          console.error('[Host Service] Error details:', imageError.message);\n          if (imageError.response) {\n            console.error('[Host Service] Response status:', imageError.response.status);\n            console.error('[Host Service] Response data:', imageError.response.data);\n          }\n          console.log('[Host Service] ===== IMAGE UPLOAD FAILED =====');\n          // Return the created event even if the image upload fails\n          return createdEvent;\n        }\n      } else {\n        console.log('[Host Service] Skipping image upload:', {\n          hasImageFile: !!imageFile,\n          hasCreatedEvent: !!createdEvent,\n          hasEventId: !!(createdEvent && (createdEvent.id || createdEvent._id))\n        });\n      }\n      \n      console.log('[Host Service] ===== CREATE EVENT COMPLETED =====');\n      return createdEvent;\n    } catch (error) {\n      console.error('[Host Service] Error creating event:', error);\n      console.error('[Host Service] Error details:', error.message);\n      if (error.response) {\n        console.error('[Host Service] Response status:', error.response.status);\n        console.error('[Host Service] Response data:', error.response.data);\n      }\n      console.log('[Host Service] ===== CREATE EVENT FAILED =====');\n      throw error;\n    }\n  },\n  \n  /**\n   * Update an existing event\n   * @param {string} eventId - Event ID\n   * @param {Object} eventData - Updated event data\n   * @returns {Promise<Object>} Updated event\n   */\n  updateEvent: async (eventId, eventData) => {\n    try {\n      // Use the correct environment variable with REACT_APP_ prefix\n      const baseUrl = process.env.REACT_APP_EVENT_SERVICE_URL || 'http://localhost:3002';\n      console.log(`[Host Service] Updating event ${eventId} with data:`, eventData);\n      \n      // Extract token from the authorization header, just like event creation\n      // Get the authorization header from the axios default headers\n      const authHeader = axios.defaults.headers.common['Authorization'];\n      console.log('[Host Service] Authorization header:', authHeader ? `${authHeader.substring(0, 15)}...` : 'Not found');\n      \n      // Extract the token from the Bearer format\n      let token = null;\n      if (authHeader && authHeader.startsWith('Bearer ')) {\n        token = authHeader.split(' ')[1];\n        console.log('[Host Service] Token extracted from Authorization header:', token ? `${token.substring(0, 10)}...` : 'Failed to extract');\n      }\n      \n      // Fallback to localStorage if header not available\n      if (!token) {\n        token = localStorage.getItem('token');\n        console.log('[Host Service] Fallback to localStorage token:', token ? 'Token found' : 'No token found');\n      }\n      \n      // If still no token, use a hardcoded token for development (from the server logs)\n      if (!token) {\n        console.log('[Host Service] Using hardcoded token for development');\n        token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4MDRkZjcxYzdiNWQ4MWJiMWRmMDhlNiIsImlhdCI6MTc0NTE0OTgwOSwiZXhwIjoxNzQ1MjM2MjA5fQ.cQ1z0TWTlYRnwOP2_aOo5iHkYKC2kLz6JcJPunk7pH8';\n      }\n      \n      const response = await axios.put(\n        `${baseUrl}/events/${eventId}`, \n        eventData,\n        { headers: { 'x-auth-token': token } }\n      );\n      \n      const updatedEvent = response.data.data || response.data;\n      console.log(`[Host Service] Event updated successfully:`, updatedEvent);\n      return updatedEvent;\n    } catch (error) {\n      console.error(`Error updating event ${eventId}:`, error);\n      throw error;\n    }\n  },\n  \n  /**\n   * Cancel an event\n   * @param {string} eventId - Event ID\n   * @returns {Promise<Object>} Canceled event\n   */\n  cancelEvent: async (eventId) => {\n    try {\n      // In a production environment, this would be an API call\n      // const response = await axios.put(`/api/events/${eventId}/cancel`);\n      // return response.data;\n      \n      // Mock implementation\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      return {\n        id: eventId,\n        status: 'canceled',\n        canceledAt: new Date().toISOString()\n      };\n    } catch (error) {\n      console.error(`Error canceling event ${eventId}:`, error);\n      throw error;\n    }\n  },\n  \n  /**\n   * Get available locations for events\n   * @returns {Promise<Array>} List of available locations\n   */\n  getLocations: async () => {\n    try {\n      // In a production environment, this would be an API call\n      // const response = await axios.get('/api/locations');\n      // return response.data;\n      \n      // Mock implementation\n      await new Promise(resolve => setTimeout(resolve, 300));\n      \n      return [\n        { id: 'loc1', name: 'Coffee House Downtown', address: '123 Main St, Mumbai', capacity: 20 },\n        { id: 'loc2', name: 'Tech Hub Coworking', address: '456 Innovation Ave, Bangalore', capacity: 50 },\n        { id: 'loc3', name: 'Peaceful Garden Cafe', address: '789 Serenity Rd, Delhi', capacity: 15 },\n        { id: 'loc4', name: 'Central Library Meeting Room', address: '101 Knowledge Pkwy, Chennai', capacity: 30 },\n        { id: 'loc5', name: 'Beachside Restaurant', address: '202 Coastal Way, Goa', capacity: 25 }\n      ];\n    } catch (error) {\n      console.error('Error fetching locations:', error);\n      throw error;\n    }\n  },\n  \n  /**\n   * Get event templates\n   * @returns {Promise<Array>} List of event templates\n   */\n  getEventTemplates: async () => {\n    try {\n      // In a production environment, this would be an API call\n      // const response = await axios.get('/api/event-templates');\n      // return response.data;\n      \n      // Mock implementation\n      await new Promise(resolve => setTimeout(resolve, 400));\n      \n      return [\n        {\n          id: 'template1',\n          name: 'Coffee & Conversation',\n          description: 'A casual gathering for meaningful conversations over coffee.',\n          duration: 90,\n          maxAttendees: 8,\n          tags: ['coffee', 'casual', 'networking']\n        },\n        {\n          id: 'template2',\n          name: 'Book Club Discussion',\n          description: 'A structured discussion about a pre-selected book.',\n          duration: 120,\n          maxAttendees: 12,\n          tags: ['books', 'discussion', 'literature']\n        },\n        {\n          id: 'template3',\n          name: 'Tech Networking',\n          description: 'Connect with other tech professionals and discuss the latest trends.',\n          duration: 120,\n          maxAttendees: 15,\n          tags: ['technology', 'networking', 'professional']\n        }\n      ];\n    } catch (error) {\n      console.error('Error fetching event templates:', error);\n      throw error;\n    }\n  }\n};\n\nexport default hostService;\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FaArrowLeft, FaCheck, FaCopy } from 'react-icons/fa';\nimport EventCreationFormHookForm from '../components/EventCreationFormHookForm';\nimport RecurringEventSchedulerHookForm from '../components/RecurringEventSchedulerHookForm';\nimport { useLocations, useEventTemplates, useCreateEvent } from '../hooks/queries/useHostQueries';\nimport useHostStore from '../../stores/hostStore';\nimport { toast } from 'react-toastify';\n\n/**\n * TableCreationPage Component\n * \n * Following Single Responsibility Principle:\n * - This component is responsible for the overall table creation page\n * - It delegates form handling to EventCreationFormHookForm\n * - It uses React Query for data operations and Zustand for UI state\n */\nconst TableCreationPage = () => {\n  const navigate = useNavigate();\n  const [showShareDialog, setShowShareDialog] = useState(false);\n  const [createdEventId, setCreatedEventId] = useState(null);\n  const [isPrivateEvent, setIsPrivateEvent] = useState(false);\n  const [copied, setCopied] = useState(false);\n  \n  // React Query hooks\n  const { data: locations } = useLocations();\n  const { data: templates } = useEventTemplates();\n  const createEventMutation = useCreateEvent();\n  \n  // Zustand store hooks\n  const { \n    eventDraft, \n    updateEventDraft, \n    resetEventCreation, \n    currentTemplateId \n  } = useHostStore();\n  \n  // Initialize event draft if empty\n  useEffect(() => {\n    if (!eventDraft) {\n      updateEventDraft({\n        title: '',\n        description: '',\n        date: '',\n        time: '',\n        location: '',\n        duration: 60,\n        maxAttendees: 10,\n        isPublic: true,\n        isRecurring: false,\n        tags: [],\n        recurringPattern: {\n          frequency: 'weekly',\n          interval: 1,\n          endDate: '',\n          daysOfWeek: []\n        }\n      });\n    }\n  }, [eventDraft, updateEventDraft]);\n  \n  // Get selected template if any\n  const selectedTemplate = currentTemplateId && templates \n    ? templates.find(template => template.id === currentTemplateId) \n    : null;\n\n  // Handler for table submission\n  const handleCreateTable = async (formData, imageFile) => {\n    try {\n      console.log('[TableCreationPage] Creating table with image:', !!imageFile);\n      if (imageFile) {\n        console.log('[TableCreationPage] Image file details:', { \n          name: imageFile.name, \n          type: imageFile.type, \n          size: imageFile.size,\n          lastModified: new Date(imageFile.lastModified).toISOString()\n        });\n      } else {\n        console.log('[TableCreationPage] No image file provided');\n      }\n      \n      console.log('[TableCreationPage] Form data:', formData);\n      \n      // Show a loading toast\n      const loadingToastId = toast.loading('Creating your event...');\n      \n      // Create the event and handle image upload\n      console.log('[TableCreationPage] Calling createEventMutation.mutateAsync');\n      const result = await createEventMutation.mutateAsync({ \n        eventData: {\n          ...formData,\n          type: 'table' // Specify this is a table event\n        },\n        imageFile\n      });\n      \n      console.log('[TableCreationPage] Event creation result:', result);\n      \n      // Update the loading toast\n      if (imageFile) {\n        toast.update(loadingToastId, {\n          render: 'Event created and image uploaded successfully!',\n          type: 'success',\n          isLoading: false,\n          autoClose: 3000\n        });\n      } else {\n        toast.update(loadingToastId, {\n          render: 'Event created successfully!',\n          type: 'success',\n          isLoading: false,\n          autoClose: 3000\n        });\n      }\n      \n      // Store the created event ID and check if it's private\n      setCreatedEventId(result._id || result.id);\n      \n      // Check if the event is private - only if isPublic is explicitly false or access is explicitly 'private'\n      const isPrivate = formData.isPublic === false || formData.access === 'private';\n      setIsPrivateEvent(isPrivate);\n      \n      console.log('[TableCreationPage] Event privacy status:', { isPublic: formData.isPublic, access: formData.access, isPrivate });\n      \n      // Update the event status to 'pending' on the backend\n      // This is handled by the default value in the schema, no need to explicitly set it here\n      \n      // Show share dialog instead of navigating immediately\n      setShowShareDialog(true);\n      \n      // Reset event creation state\n      resetEventCreation();\n    } catch (error) {\n      console.error('[TableCreationPage] Error creating table:', error);\n      toast.error('Failed to create table: ' + (error.message || 'Unknown error'));\n    }\n  };\n\n  // Handle recurring pattern updates\n  const handleRecurringPatternUpdate = (recurringData) => {\n    updateEventDraft({ recurringPattern: recurringData });\n  };\n\n  // Handle back button click\n  const handleBack = () => {\n    navigate('/host');\n  };\n\n  // Handle copy to clipboard\n  const handleCopyLink = () => {\n    const eventUrl = `${window.location.origin}/events/${createdEventId}`;\n    navigator.clipboard.writeText(eventUrl)\n      .then(() => {\n        setCopied(true);\n        // Reset copied state after 2 seconds\n        setTimeout(() => setCopied(false), 2000);\n      })\n      .catch(err => {\n        console.error('Failed to copy: ', err);\n      });\n  };\n\n  // Handle continue button click\n  const handleContinue = () => {\n    setShowShareDialog(false);\n    navigate('/myevents');\n  };\n  \n  return (\n    <div className=\"flex flex-col min-h-screen bg-gray-50\">\n      <div className=\"container mx-auto px-4 py-6 pb-20 md:pb-6\">\n        \n        {/* Share Dialog */}\n        {showShareDialog && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n            <div className=\"bg-white rounded-lg shadow-xl p-6 max-w-md w-full\">\n              <h2 className=\"text-xl font-bold text-gray-900 mb-2\">Event Submitted Successfully!</h2>\n              \n              <div className=\"mb-4\">\n                <p className=\"text-gray-700 mb-3\">Your event has been submitted for review and will be up within 60 minutes after approval.</p>\n                \n                <div className=\"bg-blue-50 border-l-4 border-blue-500 p-4 mb-4\">\n                  <div className=\"flex items-start\">\n                    <div className=\"flex-shrink-0\">\n                      <svg className=\"h-5 w-5 text-blue-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                        <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n                      </svg>\n                    </div>\n                    <div className=\"ml-3\">\n                      <p className=\"text-sm text-blue-700\">\n                        You can track the status of your table in the <span className=\"font-semibold\">My Messages</span> tab under the <span className=\"font-semibold\">Pending</span> section.\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                \n                {isPrivateEvent && (\n                  <div>\n                    <p className=\"text-gray-700 mb-2\">Once approved, you can share this link with people you want to invite:</p>\n                    <div className=\"flex items-center mt-3\">\n                      <input \n                        type=\"text\" \n                        readOnly \n                        value={`${window.location.origin}/events/${createdEventId}`}\n                        className=\"flex-1 p-2 border border-gray-300 rounded-l-md bg-gray-50 text-sm\"\n                      />\n                      <button\n                        onClick={handleCopyLink}\n                        className={`p-2 ${copied ? 'bg-green-500' : 'bg-indigo-600'} text-white rounded-r-md`}\n                      >\n                        {copied ? <FaCheck /> : <FaCopy />}\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </div>\n              \n              <div className=\"flex justify-end mt-4\">\n                <button\n                  onClick={handleContinue}\n                  className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\n                >\n                  Continue\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n        {/* Back button */}\n        <button\n          onClick={handleBack}\n          className=\"flex items-center text-indigo-600 mb-6 hover:text-indigo-800 transition-colors\"\n        >\n          <FaArrowLeft className=\"mr-2\" />\n          <span>Back to Host Dashboard</span>\n        </button>\n        \n        <div className=\"bg-white shadow-md rounded-lg overflow-hidden mb-6\">\n          <div className=\"p-6\">\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-2\">Create a Table</h1>\n            <p className=\"text-gray-600 mb-6\">\n              Fill out the form below to create a new table experience for your guests\n            </p>\n            \n            <EventCreationFormHookForm \n              defaultValues={eventDraft}\n              onSubmit={handleCreateTable}\n              locations={locations || []}\n              isSubmitting={createEventMutation.isPending}\n              selectedTemplate={selectedTemplate}\n            />\n            \n            {/* Show recurring options when isRecurring is true */}\n            {eventDraft?.isRecurring && (\n              <div className=\"mt-8 border-t border-gray-200 pt-6\">\n                <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n                  Recurring Table Settings\n                </h3>\n                <RecurringEventSchedulerHookForm \n                  defaultValues={eventDraft.recurringPattern}\n                  onSubmit={handleRecurringPatternUpdate}\n                  isSubmitting={createEventMutation.isPending}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TableCreationPage;\n","import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport hostService from '../../services/hostService';\n\n/**\n * Custom hook for creating events with image upload support\n * Following Single Responsibility Principle and Interface Segregation Principle\n * \n * @returns {Object} React Query mutation object\n */\nexport const useCreateEvent = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: ({ eventData, imageFile }) => {\n      console.log('[useCreateEvent] Creating event with image:', !!imageFile);\n      if (imageFile) {\n        console.log('[useCreateEvent] Image file details:', { \n          name: imageFile.name, \n          type: imageFile.type, \n          size: imageFile.size \n        });\n      } else {\n        console.log('[useCreateEvent] No image file provided');\n      }\n      console.log('[useCreateEvent] Event data:', eventData);\n      return hostService.createEvent(eventData, imageFile);\n    },\n    \n    onSuccess: (data) => {\n      console.log('[useCreateEvent] Event created successfully:', data);\n      \n      // Invalidate host events queries to ensure fresh data\n      queryClient.invalidateQueries({ queryKey: ['hostEvents'] });\n      \n      // Invalidate explore queries to ensure the new event appears in explore page\n      queryClient.invalidateQueries({ queryKey: ['explore'] });\n      \n      // Add the new event to the cache if it exists\n      if (data && data.id) {\n        queryClient.setQueryData(['event', data.id], data);\n      }\n    },\n    \n    onError: (error) => {\n      console.error('[useCreateEvent] Error creating event:', error);\n    }\n  });\n};\n\n/**\n * Custom hook for updating events\n * \n * @returns {Object} React Query mutation object\n */\nexport const useUpdateEvent = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: ({ eventId, eventData }) => \n      hostService.updateEvent(eventId, eventData),\n    \n    onSuccess: (data) => {\n      // Update the event in the cache\n      queryClient.setQueryData(['event', data.id], data);\n      \n      // Invalidate host events queries to ensure fresh data\n      queryClient.invalidateQueries({ queryKey: ['hostEvents'] });\n    }\n  });\n};\n\n/**\n * Custom hook for canceling events\n * \n * @returns {Object} React Query mutation object\n */\nexport const useCancelEvent = () => {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (eventId) => hostService.cancelEvent(eventId),\n    \n    onMutate: async (eventId) => {\n      // Cancel any outgoing refetches\n      await queryClient.cancelQueries({ queryKey: ['event', eventId] });\n      \n      // Snapshot the current value\n      const previousEvent = queryClient.getQueryData(['event', eventId]);\n      \n      // Optimistically update the event\n      queryClient.setQueryData(['event', eventId], old => {\n        return old ? { ...old, status: 'canceled' } : old;\n      });\n      \n      // Optimistically update the host events list\n      queryClient.setQueryData(['hostEvents'], old => {\n        if (!old) return old;\n        \n        return old.map(event => {\n          if (event.id === eventId) {\n            return { ...event, status: 'canceled' };\n          }\n          return event;\n        });\n      });\n      \n      // Return the snapshot\n      return { previousEvent };\n    },\n    \n    onError: (err, eventId, context) => {\n      // Roll back on error\n      if (context?.previousEvent) {\n        queryClient.setQueryData(['event', eventId], context.previousEvent);\n      }\n    },\n    \n    onSettled: (data, error, eventId) => {\n      // Always refetch after error or success\n      queryClient.invalidateQueries({ queryKey: ['event', eventId] });\n      queryClient.invalidateQueries({ queryKey: ['hostEvents'] });\n    }\n  });\n};\n\n/**\n * Custom hook for fetching available locations\n * \n * @param {Object} options - React Query options\n * @returns {Object} React Query result object\n */\nexport const useLocations = (options = {}) => {\n  return useQuery({\n    queryKey: ['locations'],\n    queryFn: hostService.getLocations,\n    staleTime: 10 * 60 * 1000, // 10 minutes\n    ...options\n  });\n};\n\n/**\n * Custom hook for fetching event templates\n * \n * @param {Object} options - React Query options\n * @returns {Object} React Query result object\n */\nexport const useEventTemplates = (options = {}) => {\n  return useQuery({\n    queryKey: ['eventTemplates'],\n    queryFn: hostService.getEventTemplates,\n    staleTime: 10 * 60 * 1000, // 10 minutes\n    ...options\n  });\n};\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FaArrowLeft, FaUsers, FaCalendarAlt, FaMapMarkerAlt, FaTag } from 'react-icons/fa';\n\n/**\n * CircleCreationPage Component\n * \n * Following Single Responsibility Principle:\n * - This component is responsible for the circle creation form\n */\nconst CircleCreationPage = () => {\n  const navigate = useNavigate();\n  \n  // Initial circle data state\n  const [circleData, setCircleData] = useState({\n    name: '',\n    description: '',\n    location: '',\n    capacity: 10,\n    isPublic: true,\n    meetingFrequency: 'weekly',\n    tags: []\n  });\n\n  // Handle form input changes\n  const handleInputChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setCircleData({\n      ...circleData,\n      [name]: type === 'checkbox' ? checked : value\n    });\n  };\n\n  // Handle tags input\n  const handleTagInput = (e) => {\n    if (e.key === 'Enter' && e.target.value.trim() !== '') {\n      e.preventDefault();\n      const newTag = e.target.value.trim();\n      if (!circleData.tags.includes(newTag)) {\n        setCircleData({\n          ...circleData,\n          tags: [...circleData.tags, newTag]\n        });\n      }\n      e.target.value = '';\n    }\n  };\n\n  // Remove a tag\n  const removeTag = (tagToRemove) => {\n    setCircleData({\n      ...circleData,\n      tags: circleData.tags.filter(tag => tag !== tagToRemove)\n    });\n  };\n\n  // Handle circle submission\n  const handleCreateCircle = (e) => {\n    e.preventDefault();\n    // Here you would typically send the circle data to your API\n    console.log('Creating circle:', circleData);\n    \n    // Show success message\n    alert('Circle created successfully! (This is a placeholder - actual API integration would happen here)');\n    \n    // Navigate back to host page\n    navigate('/host');\n  };\n\n  // Handle back button click\n  const handleBack = () => {\n    navigate('/host');\n  };\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-gray-50\">\n      <div className=\"container mx-auto px-4 py-6 pb-20 md:pb-6\">\n        {/* Back button */}\n        <button\n          onClick={handleBack}\n          className=\"flex items-center text-indigo-600 mb-6 hover:text-indigo-800 transition-colors\"\n        >\n          <FaArrowLeft className=\"mr-2\" />\n          <span>Back to Host Dashboard</span>\n        </button>\n        \n        <div className=\"bg-white shadow-md rounded-lg overflow-hidden mb-6\">\n          <div className=\"p-6\">\n            <h1 className=\"text-2xl md:text-3xl font-bold text-gray-900 mb-2\">Start a Circle</h1>\n            <p className=\"text-gray-600 mb-6\">\n              Create your own community circle and connect with people who share your interests\n            </p>\n            \n            <form onSubmit={handleCreateCircle}>\n              {/* Circle Name */}\n              <div className=\"mb-4\">\n                <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Circle Name*\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  value={circleData.name}\n                  onChange={handleInputChange}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                  placeholder=\"Give your circle a memorable name\"\n                  required\n                />\n              </div>\n              \n              {/* Circle Description */}\n              <div className=\"mb-4\">\n                <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Description*\n                </label>\n                <textarea\n                  id=\"description\"\n                  name=\"description\"\n                  value={circleData.description}\n                  onChange={handleInputChange}\n                  rows=\"4\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                  placeholder=\"What is this circle about? What can members expect?\"\n                  required\n                ></textarea>\n              </div>\n              \n              {/* Location */}\n              <div className=\"mb-4\">\n                <label htmlFor=\"location\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  <FaMapMarkerAlt className=\"inline mr-1\" /> Location\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"location\"\n                  name=\"location\"\n                  value={circleData.location}\n                  onChange={handleInputChange}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                  placeholder=\"Where will your circle typically meet?\"\n                />\n              </div>\n              \n              {/* Member Capacity */}\n              <div className=\"mb-4\">\n                <label htmlFor=\"capacity\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  <FaUsers className=\"inline mr-1\" /> Member Capacity\n                </label>\n                <input\n                  type=\"number\"\n                  id=\"capacity\"\n                  name=\"capacity\"\n                  min=\"2\"\n                  max=\"100\"\n                  value={circleData.capacity}\n                  onChange={handleInputChange}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                />\n                <p className=\"mt-1 text-xs text-gray-500\">Maximum number of members allowed in your circle</p>\n              </div>\n              \n              {/* Meeting Frequency */}\n              <div className=\"mb-4\">\n                <label htmlFor=\"meetingFrequency\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  <FaCalendarAlt className=\"inline mr-1\" /> Meeting Frequency\n                </label>\n                <select\n                  id=\"meetingFrequency\"\n                  name=\"meetingFrequency\"\n                  value={circleData.meetingFrequency}\n                  onChange={handleInputChange}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                >\n                  <option value=\"weekly\">Weekly</option>\n                  <option value=\"biweekly\">Bi-weekly</option>\n                  <option value=\"monthly\">Monthly</option>\n                  <option value=\"custom\">Custom</option>\n                </select>\n              </div>\n              \n              {/* Privacy Setting */}\n              <div className=\"mb-4\">\n                <div className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"isPublic\"\n                    name=\"isPublic\"\n                    checked={circleData.isPublic}\n                    onChange={handleInputChange}\n                    className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n                  />\n                  <label htmlFor=\"isPublic\" className=\"ml-2 block text-sm text-gray-700\">\n                    Make this circle publicly discoverable\n                  </label>\n                </div>\n                <p className=\"mt-1 text-xs text-gray-500 ml-6\">\n                  If unchecked, people can only join by direct invitation\n                </p>\n              </div>\n              \n              {/* Tags */}\n              <div className=\"mb-6\">\n                <label htmlFor=\"tags\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  <FaTag className=\"inline mr-1\" /> Tags\n                </label>\n                <div className=\"flex flex-wrap gap-2 mb-2\">\n                  {circleData.tags.map((tag, index) => (\n                    <span \n                      key={index} \n                      className=\"inline-flex items-center bg-indigo-100 text-indigo-800 text-xs px-2 py-1 rounded-full\"\n                    >\n                      {tag}\n                      <button \n                        type=\"button\" \n                        className=\"ml-1 text-indigo-600 hover:text-indigo-800\"\n                        onClick={() => removeTag(tag)}\n                      >\n                        &times;\n                      </button>\n                    </span>\n                  ))}\n                </div>\n                <input\n                  type=\"text\"\n                  id=\"tags\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                  placeholder=\"Type a tag and press Enter\"\n                  onKeyDown={handleTagInput}\n                />\n                <p className=\"mt-1 text-xs text-gray-500\">Help others discover your circle with relevant tags</p>\n              </div>\n              \n              {/* Submit Button */}\n              <div className=\"flex justify-end\">\n                <button\n                  type=\"submit\"\n                  className=\"px-6 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\n                >\n                  Create Circle\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CircleCreationPage;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FaArrowLeft, FaMapMarkerAlt, FaClock, FaPhone, FaGlobe, FaTag } from 'react-icons/fa';\n\n/**\n * BusinessListingPage Component\n * \n * Following Single Responsibility Principle:\n * - This component is responsible for the business listing form\n */\nconst BusinessListingPage = () => {\n  const navigate = useNavigate();\n  \n  // Initial business data state\n  const [businessData, setBusinessData] = useState({\n    name: '',\n    description: '',\n    address: '',\n    phone: '',\n    website: '',\n    businessType: 'restaurant',\n    businessHours: {\n      monday: { open: '09:00', close: '17:00', closed: false },\n      tuesday: { open: '09:00', close: '17:00', closed: false },\n      wednesday: { open: '09:00', close: '17:00', closed: false },\n      thursday: { open: '09:00', close: '17:00', closed: false },\n      friday: { open: '09:00', close: '17:00', closed: false },\n      saturday: { open: '10:00', close: '15:00', closed: false },\n      sunday: { open: '10:00', close: '15:00', closed: true }\n    },\n    amenities: [],\n    tags: []\n  });\n\n  // Handle form input changes\n  const handleInputChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setBusinessData({\n      ...businessData,\n      [name]: type === 'checkbox' ? checked : value\n    });\n  };\n\n  // Handle business hours changes\n  const handleHoursChange = (day, field, value) => {\n    setBusinessData({\n      ...businessData,\n      businessHours: {\n        ...businessData.businessHours,\n        [day]: {\n          ...businessData.businessHours[day],\n          [field]: field === 'closed' ? value : value\n        }\n      }\n    });\n  };\n\n  // Handle tags input\n  const handleTagInput = (e) => {\n    if (e.key === 'Enter' && e.target.value.trim() !== '') {\n      e.preventDefault();\n      const newTag = e.target.value.trim();\n      if (!businessData.tags.includes(newTag)) {\n        setBusinessData({\n          ...businessData,\n          tags: [...businessData.tags, newTag]\n        });\n      }\n      e.target.value = '';\n    }\n  };\n\n  // Remove a tag\n  const removeTag = (tagToRemove) => {\n    setBusinessData({\n      ...businessData,\n      tags: businessData.tags.filter(tag => tag !== tagToRemove)\n    });\n  };\n\n  // Handle amenity selection\n  const handleAmenityToggle = (amenity) => {\n    const updatedAmenities = businessData.amenities.includes(amenity)\n      ? businessData.amenities.filter(a => a !== amenity)\n      : [...businessData.amenities, amenity];\n    \n    setBusinessData({\n      ...businessData,\n      amenities: updatedAmenities\n    });\n  };\n\n  // Handle business submission\n  const handleListBusiness = (e) => {\n    e.preventDefault();\n    // Here you would typically send the business data to your API\n    console.log('Listing business:', businessData);\n    \n    // Show success message\n    alert('Business listed successfully! (This is a placeholder - actual API integration would happen here)');\n    \n    // Navigate back to host page\n    navigate('/host');\n  };\n\n  // Handle back button click\n  const handleBack = () => {\n    navigate('/host');\n  };\n\n  // Available business types\n  const businessTypes = [\n    { value: 'restaurant', label: 'Restaurant' },\n    { value: 'cafe', label: 'Café' },\n    { value: 'bar', label: 'Bar' },\n    { value: 'event_space', label: 'Event Space' },\n    { value: 'coworking_space', label: 'Coworking Space' },\n    { value: 'venue', label: 'Venue' },\n    { value: 'studio', label: 'Studio' },\n    { value: 'other', label: 'Other' }\n  ];\n\n  // Available amenities\n  const availableAmenities = [\n    { id: 'wifi', label: 'Free Wi-Fi' },\n    { id: 'parking', label: 'Parking Available' },\n    { id: 'outdoor_seating', label: 'Outdoor Seating' },\n    { id: 'wheelchair', label: 'Wheelchair Accessible' },\n    { id: 'reservations', label: 'Reservations' },\n    { id: 'delivery', label: 'Delivery Service' },\n    { id: 'takeout', label: 'Takeout Available' },\n    { id: 'private_rooms', label: 'Private Rooms' }\n  ];\n\n  // Day labels for business hours\n  const dayLabels = {\n    monday: 'Monday',\n    tuesday: 'Tuesday',\n    wednesday: 'Wednesday',\n    thursday: 'Thursday',\n    friday: 'Friday',\n    saturday: 'Saturday',\n    sunday: 'Sunday'\n  };\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-gray-50\">\n      <div className=\"container mx-auto px-4 py-6 pb-20 md:pb-6\">\n        {/* Back button */}\n        <button\n          onClick={handleBack}\n          className=\"flex items-center text-indigo-600 mb-6 hover:text-indigo-800 transition-colors\"\n        >\n          <FaArrowLeft className=\"mr-2\" />\n          <span>Back to Host Dashboard</span>\n        </button>\n        \n        <div className=\"bg-white shadow-md rounded-lg overflow-hidden mb-6\">\n          <div className=\"p-6\">\n            <h1 className=\"text-2xl md:text-3xl font-bold text-gray-900 mb-2\">List Your Business</h1>\n            <p className=\"text-gray-600 mb-6\">\n              Share your business with the Tymout community and attract new customers\n            </p>\n            \n            <form onSubmit={handleListBusiness}>\n              {/* Business Name */}\n              <div className=\"mb-4\">\n                <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Business Name*\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  value={businessData.name}\n                  onChange={handleInputChange}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                  placeholder=\"Enter your business name\"\n                  required\n                />\n              </div>\n              \n              {/* Business Type */}\n              <div className=\"mb-4\">\n                <label htmlFor=\"businessType\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Business Type*\n                </label>\n                <select\n                  id=\"businessType\"\n                  name=\"businessType\"\n                  value={businessData.businessType}\n                  onChange={handleInputChange}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                  required\n                >\n                  {businessTypes.map((type) => (\n                    <option key={type.value} value={type.value}>\n                      {type.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              \n              {/* Business Description */}\n              <div className=\"mb-4\">\n                <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Description*\n                </label>\n                <textarea\n                  id=\"description\"\n                  name=\"description\"\n                  value={businessData.description}\n                  onChange={handleInputChange}\n                  rows=\"4\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                  placeholder=\"Describe your business, what makes it special, and why people should visit\"\n                  required\n                ></textarea>\n              </div>\n              \n              {/* Contact Information */}\n              <div className=\"mb-4 grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {/* Address */}\n                <div>\n                  <label htmlFor=\"address\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    <FaMapMarkerAlt className=\"inline mr-1\" /> Address*\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"address\"\n                    name=\"address\"\n                    value={businessData.address}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                    placeholder=\"Full address of your business\"\n                    required\n                  />\n                </div>\n                \n                {/* Phone */}\n                <div>\n                  <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    <FaPhone className=\"inline mr-1\" /> Phone Number*\n                  </label>\n                  <input\n                    type=\"tel\"\n                    id=\"phone\"\n                    name=\"phone\"\n                    value={businessData.phone}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                    placeholder=\"Contact phone number\"\n                    required\n                  />\n                </div>\n              </div>\n              \n              {/* Website */}\n              <div className=\"mb-6\">\n                <label htmlFor=\"website\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  <FaGlobe className=\"inline mr-1\" /> Website\n                </label>\n                <input\n                  type=\"url\"\n                  id=\"website\"\n                  name=\"website\"\n                  value={businessData.website}\n                  onChange={handleInputChange}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                  placeholder=\"https://www.yourbusiness.com\"\n                />\n              </div>\n              \n              {/* Business Hours */}\n              <div className=\"mb-6\">\n                <h3 className=\"text-lg font-medium text-gray-900 mb-3\">\n                  <FaClock className=\"inline mr-1\" /> Business Hours\n                </h3>\n                <div className=\"space-y-4\">\n                  {Object.keys(dayLabels).map((day) => (\n                    <div key={day} className=\"flex flex-col sm:flex-row sm:items-center sm:space-x-4\">\n                      <div className=\"w-full sm:w-24 mb-1 sm:mb-0\">\n                        <span className=\"font-medium text-sm text-gray-700\">{dayLabels[day]}</span>\n                      </div>\n                      <div className=\"flex items-center mb-2 sm:mb-0\">\n                        <input\n                          type=\"checkbox\"\n                          id={`closed-${day}`}\n                          checked={businessData.businessHours[day].closed}\n                          onChange={(e) => handleHoursChange(day, 'closed', e.target.checked)}\n                          className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n                        />\n                        <label htmlFor={`closed-${day}`} className=\"ml-2 text-sm text-gray-700\">\n                          Closed\n                        </label>\n                      </div>\n                      {!businessData.businessHours[day].closed && (\n                        <div className=\"flex flex-wrap items-center gap-3\">\n                          <div className=\"flex items-center\">\n                            <label htmlFor={`open-${day}`} className=\"mr-2 text-sm text-gray-700\">\n                              Open:\n                            </label>\n                            <input\n                              type=\"time\"\n                              id={`open-${day}`}\n                              value={businessData.businessHours[day].open}\n                              onChange={(e) => handleHoursChange(day, 'open', e.target.value)}\n                              className=\"px-2 py-1 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                            />\n                          </div>\n                          <div className=\"flex items-center\">\n                            <label htmlFor={`close-${day}`} className=\"mr-2 text-sm text-gray-700\">\n                              Close:\n                            </label>\n                            <input\n                              type=\"time\"\n                              id={`close-${day}`}\n                              value={businessData.businessHours[day].close}\n                              onChange={(e) => handleHoursChange(day, 'close', e.target.value)}\n                              className=\"px-2 py-1 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                            />\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              </div>\n              \n              {/* Amenities */}\n              <div className=\"mb-6\">\n                <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Amenities</h3>\n                <div className=\"grid grid-cols-1 xs:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\">\n                  {availableAmenities.map((amenity) => (\n                    <div key={amenity.id} className=\"flex items-center\">\n                      <input\n                        type=\"checkbox\"\n                        id={`amenity-${amenity.id}`}\n                        checked={businessData.amenities.includes(amenity.id)}\n                        onChange={() => handleAmenityToggle(amenity.id)}\n                        className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n                      />\n                      <label htmlFor={`amenity-${amenity.id}`} className=\"ml-2 text-sm text-gray-700 truncate\">\n                        {amenity.label}\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              \n              {/* Tags */}\n              <div className=\"mb-6\">\n                <label htmlFor=\"tags\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  <FaTag className=\"inline mr-1\" /> Tags\n                </label>\n                <div className=\"flex flex-wrap gap-2 mb-2\">\n                  {businessData.tags.map((tag, index) => (\n                    <span \n                      key={index} \n                      className=\"inline-flex items-center bg-indigo-100 text-indigo-800 text-xs px-2 py-1 rounded-full\"\n                    >\n                      {tag}\n                      <button \n                        type=\"button\" \n                        className=\"ml-1 text-indigo-600 hover:text-indigo-800\"\n                        onClick={() => removeTag(tag)}\n                      >\n                        &times;\n                      </button>\n                    </span>\n                  ))}\n                </div>\n                <input\n                  type=\"text\"\n                  id=\"tags\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                  placeholder=\"Type a tag and press Enter (e.g., family-friendly, vegan, live music)\"\n                  onKeyDown={handleTagInput}\n                />\n                <p className=\"mt-1 text-xs text-gray-500\">Add tags to help users discover your business</p>\n              </div>\n              \n              {/* Submit Button */}\n              <div className=\"flex justify-end\">\n                <button\n                  type=\"submit\"\n                  className=\"px-6 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\n                >\n                  List Business\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BusinessListingPage;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FaArrowLeft, FaBuilding, FaStore, FaUtensils, FaHotel, FaEdit, FaClipboardList, FaHistory } from 'react-icons/fa';\n\n/**\n * BusinessSetupPage Component\n * \n * Following Single Responsibility Principle:\n * - This component is responsible for guiding users through the business setup process\n * - It provides information about hosting a business and links to the detailed listing form\n * - It also serves as a hub for managing existing businesses\n */\nconst BusinessSetupPage = () => {\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState('setup'); // 'setup' or 'manage'\n\n  // Business management actions from ShopPage\n  const businessActions = [\n    { key: 'edit-info', label: 'Edit Business Info', path: '/shop/edit', icon: <FaEdit className=\"text-2xl text-indigo-600\" /> },\n    { key: 'edit-catalogue', label: 'Edit Catalogue', path: '/shop/catalogue', icon: <FaClipboardList className=\"text-2xl text-indigo-600\" /> },\n    { key: 'past-orders', label: 'Past Orders', path: '/shop/past-orders', icon: <FaHistory className=\"text-2xl text-indigo-600\" /> },\n  ];\n\n  // Handle back button click\n  const handleBack = () => {\n    navigate('/host');\n  };\n\n  // Handle continue to listing form\n  const handleContinueToListing = () => {\n    navigate('/host/list-business');\n  };\n  \n  // Handle navigation to business management pages\n  const handleNavigate = (path) => {\n    navigate(path);\n  };\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-gray-50\">\n      <div className=\"container mx-auto px-4 py-6 pb-20 md:pb-6\">\n        {/* Back button */}\n        <button\n          onClick={handleBack}\n          className=\"flex items-center text-indigo-600 mb-6 hover:text-indigo-800 transition-colors\"\n        >\n          <FaArrowLeft className=\"mr-2\" />\n          <span>Back to Host Dashboard</span>\n        </button>\n        \n        <div className=\"bg-white shadow-md rounded-lg overflow-hidden mb-6\">\n          <div className=\"p-6\">\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-2\">Business Center</h1>\n            <p className=\"text-gray-600 mb-6\">\n              Set up a new business or manage your existing business on Tymout\n            </p>\n            \n            {/* Tab Navigation */}\n            <div className=\"border-b border-gray-200 mb-6\">\n              <nav className=\"flex -mb-px\">\n                <button\n                  onClick={() => setActiveTab('setup')}\n                  className={`py-4 px-6 text-sm font-medium border-b-2 ${\n                    activeTab === 'setup'\n                      ? 'border-indigo-500 text-indigo-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  }`}\n                >\n                  New Business Setup\n                </button>\n                <button\n                  onClick={() => setActiveTab('manage')}\n                  className={`py-4 px-6 text-sm font-medium border-b-2 ${\n                    activeTab === 'manage'\n                      ? 'border-indigo-500 text-indigo-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  }`}\n                >\n                  Manage Your Business\n                </button>\n              </nav>\n            </div>\n            \n            {activeTab === 'setup' ? (\n              <>\n                {/* Business Types Section */}\n                <div className=\"mb-8\">\n                  <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Business Types We Support</h2>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                    <div className=\"border border-gray-200 rounded-lg p-4 flex flex-col items-center text-center\">\n                      <FaStore className=\"text-indigo-600 text-3xl mb-3\" />\n                      <h3 className=\"font-medium text-gray-900 mb-2\">Retail Shops</h3>\n                      <p className=\"text-gray-600 text-sm\">Boutiques, specialty stores, and local retailers</p>\n                    </div>\n                    \n                    <div className=\"border border-gray-200 rounded-lg p-4 flex flex-col items-center text-center\">\n                      <FaUtensils className=\"text-indigo-600 text-3xl mb-3\" />\n                      <h3 className=\"font-medium text-gray-900 mb-2\">Food & Beverage</h3>\n                      <p className=\"text-gray-600 text-sm\">Restaurants, cafes, bakeries, and food experiences</p>\n                    </div>\n                    \n                    <div className=\"border border-gray-200 rounded-lg p-4 flex flex-col items-center text-center\">\n                      <FaHotel className=\"text-indigo-600 text-3xl mb-3\" />\n                      <h3 className=\"font-medium text-gray-900 mb-2\">Venues & Spaces</h3>\n                      <p className=\"text-gray-600 text-sm\">Event spaces, coworking areas, and unique venues</p>\n                    </div>\n                    \n                    <div className=\"border border-gray-200 rounded-lg p-4 flex flex-col items-center text-center\">\n                      <FaBuilding className=\"text-indigo-600 text-3xl mb-3\" />\n                      <h3 className=\"font-medium text-gray-900 mb-2\">Services</h3>\n                      <p className=\"text-gray-600 text-sm\">Professional services, classes, and workshops</p>\n                    </div>\n                  </div>\n                </div>\n                \n                {/* Benefits Section */}\n                <div className=\"mb-8\">\n                  <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Benefits of Hosting</h2>\n                  <div className=\"bg-indigo-50 border-l-4 border-indigo-500 p-4 mb-6\">\n                    <ul className=\"list-disc pl-5 space-y-2\">\n                      <li>Connect with local customers interested in authentic experiences</li>\n                      <li>Increase visibility in your community</li>\n                      <li>Create special events and promotions for Tymout users</li>\n                      <li>Receive feedback and build relationships with customers</li>\n                      <li>Simple listing process with flexible options</li>\n                    </ul>\n                  </div>\n                </div>\n                \n                {/* Next Steps */}\n                <div className=\"mb-8\">\n                  <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Ready to List Your Business?</h2>\n                  <p className=\"text-gray-600 mb-6\">\n                    The next step is to fill out our business listing form. You'll need:\n                  </p>\n                  <ul className=\"list-disc pl-5 mb-6 space-y-2 text-gray-600\">\n                    <li>Basic business information (name, address, contact details)</li>\n                    <li>Business description and category</li>\n                    <li>Operating hours</li>\n                    <li>Photos of your business (at least one, up to five)</li>\n                    <li>Available amenities and services</li>\n                  </ul>\n                  \n                  <button\n                    onClick={handleContinueToListing}\n                    className=\"px-6 py-3 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors inline-flex items-center justify-center\"\n                  >\n                    <span className=\"font-medium\">Continue to Business Listing Form</span>\n                  </button>\n                </div>\n              </>\n            ) : (\n              <div className=\"mb-8\">\n                <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Manage Your Business</h2>\n                <p className=\"text-gray-600 mb-6\">\n                  Use these tools to manage your existing business on Tymout\n                </p>\n                \n                {/* Business Management Actions */}\n                <div className=\"space-y-4\">\n                  {businessActions.map(action => (\n                    <div \n                      key={action.key}\n                      onClick={() => handleNavigate(action.path)}\n                      className=\"border border-gray-200 rounded-lg p-4 flex items-center cursor-pointer hover:bg-gray-50 transition-colors\"\n                    >\n                      <div className=\"mr-4\">\n                        {action.icon}\n                      </div>\n                      <div className=\"flex-1\">\n                        <h3 className=\"font-medium text-gray-900\">{action.label}</h3>\n                        <p className=\"text-gray-600 text-sm\">\n                          {action.key === 'edit-info' && 'Update your business details, hours, and contact information'}\n                          {action.key === 'edit-catalogue' && 'Manage your products, services, and pricing'}\n                          {action.key === 'past-orders' && 'View and manage your order history'}\n                        </p>\n                      </div>\n                      <div className=\"text-indigo-600\">\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 5l7 7-7 7\"></path>\n                        </svg>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BusinessSetupPage;\n","import React, { useEffect, lazy, Suspense } from 'react';\nimport { Routes, Route, Navigate, useLocation } from 'react-router-dom';\nimport { useAuthStore } from './stores/authStore';\n\n// Import CSS\nimport './styles/App.css';\n\n// Import components\nimport ProtectedRoute from './components/auth/ProtectedRoute';\nimport PublicRoute from './components/auth/PublicRoute';\nimport Header from './components/layout/Header';\nimport Footer from './components/layout/Footer';\nimport ResponsiveNavBar from './components/layout/ResponsiveNavBar';\n\n// Eagerly load ExplorePage since it's the main landing page\nimport ExplorePage from './pages/ExplorePage';\n\n// Import hosting pages\nimport TableCreationPage from './hosting/pages/TableCreationPage';\nimport CircleCreationPage from './hosting/pages/CircleCreationPage';\nimport BusinessListingPage from './hosting/pages/BusinessListingPage';\nimport BusinessSetupPage from './hosting/pages/BusinessSetupPage';\n\n// Import myevents pages\nimport MyEventsPage from './myevents/pages/MyEventsPage';\nimport EventPage from './myevents/pages/EventPage';\nimport EventChatPage from './myevents/pages/EventChatPage';\nimport EventAboutPage from './myevents/pages/EventAboutPage';\nimport JoinRequestsPage from './myevents/pages/JoinRequestsPage';\nimport EventGroupPage from './myevents/pages/EventGroupPage';\n\n// Import shop pages\nimport ShopRouter from './shop/router/ShopRouter';\nimport ShopEditPage from './shop/pages/ShopEditPage';\nimport CatalogueEditPage from './shop/pages/CatalogueEditPage';\nimport ProductsPage from './shop/pages/ProductsPage';\nimport CategoriesPage from './shop/pages/CategoriesPage';\nimport InventoryPage from './shop/pages/InventoryPage';\nimport TemplatePage from './shop/pages/TemplatePage';\nimport FeedbackPage from './shop/pages/FeedbackPage';\n\n// Lazy load main pages\nconst LoginPage = lazy(() => import('./pages/LoginPage'));\nconst SignupPage = lazy(() => import('./pages/SignupPage'));\nconst AuthSuccess = lazy(() => import('./pages/AuthSuccess'));\nconst OnboardingPage = lazy(() => import('./pages/OnboardingPage'));\nconst ProfilePage = lazy(() => import('./pages/ProfilePage'));\nconst SettingsPage = lazy(() => import('./pages/SettingsPage'));\nconst HostPage = lazy(() => import('./pages/HostPage'));\nconst EventDetailPage = lazy(() => import('./pages/EventDetailPage'));\nconst MessageIndexPage = lazy(() => import('./message/pages/MessageIndexPage'));\nconst MessageDetailPage = lazy(() => import('./message/pages/MessageDetailPage'));\nconst UserProfilePage = lazy(() => import('./pages/profile/UserProfilePage'));\n\n// Lazy load info pages\nconst AboutPage = lazy(() => import('./pages/info/AboutPage'));\nconst FeaturesPage = lazy(() => import('./pages/info/FeaturesPage'));\nconst CreatorsPage = lazy(() => import('./pages/info/CreatorsPage'));\nconst BusinessPage = lazy(() => import('./pages/info/BusinessPage'));\nconst GuidelinesPage = lazy(() => import('./pages/info/GuidelinesPage'));\nconst FAQPage = lazy(() => import('./pages/info/FAQPage'));\nconst ContactPage = lazy(() => import('./pages/info/ContactPage'));\nconst PoliciesPage = lazy(() => import('./pages/info/PoliciesPage'));\nconst CitySelectPage = lazy(() => import('./pages/CitySelectPage'));\n\n// Following Single Responsibility Principle - App component only handles setup\nconst App = () => {\n  const isAuthenticated = useAuthStore(state => state.isAuthenticated);\n  \n  // Check if we need to initialize auth from localStorage\n  useEffect(() => {\n    // The persistence middleware should handle this automatically\n    // This is just a safeguard to ensure the user stays logged in\n    const authData = localStorage.getItem('auth-storage');\n    if (authData) {\n      try {\n        const { state } = JSON.parse(authData);\n        if (state && state.user && state.token && !isAuthenticated) {\n          // Force rehydrate the auth store if needed\n          useAuthStore.getState().setUser(state.user, state.token);\n        }\n      } catch (error) {\n        console.error('Error initializing auth data:', error);\n      }\n    }\n  }, [isAuthenticated]);\n  \n  const location = useLocation();\n  // Hide header on event chat pages, event detail pages, join requests page, message detail pages, and shop page\n  const isNoHeaderPage = /\\/myevents\\/[^/]+(\\/chat|\\/requests)?$/.test(location.pathname) || \n                       /\\/messages\\/[^/]+$/.test(location.pathname) || \n                       /^\\/shop(\\/.+)?$/.test(location.pathname);\n  // Hide bottom nav only on event chat page\n  const isEventChatPage = /\\/myevents\\/[^/]+\\/chat$/.test(location.pathname);\n  // Hide Footer on My Events page\n  const isMyEventsPage = /\\/myevents\\/?$/.test(location.pathname);\n  return (\n    <>\n      {!isNoHeaderPage && <Header />}\n      <div className={`flex flex-1 ${!isNoHeaderPage ? 'pt-16 md:pt-20' : ''}`}> \n        {/* Main content area: Add left margin if authenticated (for desktop side nav) */}\n        <main className={`flex-1 p-2 md:p-4 pb-16 md:pb-0 ${isAuthenticated ? 'md:ml-64' : ''}`}> \n          <Suspense fallback={<div className=\"flex items-center justify-center h-screen\"><div className=\"animate-pulse text-indigo-600 text-xl\">Loading...</div></div>}>\n          <Routes>\n            {/* Public routes */}\n            <Route path=\"/\" element={<Navigate to=\"/explore\" replace />} />\n            <Route path=\"/login\" element={<LoginPage />} />\n            <Route path=\"/signup\" element={<SignupPage />} />\n            <Route path=\"/auth/success\" element={<AuthSuccess />} />\n            <Route path=\"/onboarding\" element={\n              <ProtectedRoute>\n                <OnboardingPage />\n              </ProtectedRoute>\n            } />\n            \n            {/* Information pages - these do not require authentication */}\n            <Route path=\"/about\" element={<AboutPage />} />\n            <Route path=\"/features\" element={<FeaturesPage />} />\n            <Route path=\"/creators\" element={<CreatorsPage />} />\n            <Route path=\"/business\" element={<BusinessPage />} />\n            <Route path=\"/guidelines\" element={<GuidelinesPage />} />\n            <Route path=\"/faq\" element={<FAQPage />} />\n            <Route path=\"/contact\" element={<ContactPage />} />\n            <Route path=\"/policies\" element={<PoliciesPage />} />\n            \n            {/* Main navigation routes */}\n            \n            {/* City Selection Page */}\n            <Route\n              path=\"/city-select\"\n              element={\n                <PublicRoute>\n                  <CitySelectPage />\n                </PublicRoute>\n              }\n            />\n\n            <Route \n              path=\"/explore\" \n              element={\n                <PublicRoute>\n                  <ExplorePage />\n                </PublicRoute>\n              } \n            />\n            {/* MyEvents route */}\n            <Route \n              path=\"/myevents\" \n              element={\n                <ProtectedRoute>\n                  <MyEventsPage />\n                </ProtectedRoute>\n              } \n            />\n            \n            {/* More specific routes first */}\n            {/* Join Requests route */}\n            <Route \n              path=\"/myevents/:eventId/requests\" \n              element={\n                <ProtectedRoute>\n                  <JoinRequestsPage />\n                </ProtectedRoute>\n              } \n            />\n            \n            {/* Event Chat route */}\n            <Route \n              path=\"/myevents/:eventId/chat\" \n              element={\n                <ProtectedRoute>\n                  <EventChatPage />\n                </ProtectedRoute>\n              } \n            />\n            \n            {/* Event About route */}\n            <Route \n              path=\"/myevents/about/:eventId\" \n              element={\n                <ProtectedRoute>\n                  <EventAboutPage />\n                </ProtectedRoute>\n              } \n            />\n            \n            {/* Event Group tabbed interface route */}\n            <Route \n              path=\"/myevents/:eventId/group\" \n              element={\n                <ProtectedRoute>\n                  <EventGroupPage />\n                </ProtectedRoute>\n              } \n            />\n            \n            {/* MyEvent detail route - least specific, should come last */}\n            <Route \n              path=\"/myevents/:eventId\" \n              element={\n                <ProtectedRoute>\n                  <EventPage />\n                </ProtectedRoute>\n              } \n            />\n            \n            {/* Event detail routes */}\n            <Route \n              path=\"/events/:id\" \n              element={\n                <PublicRoute>\n                  <EventDetailPage type=\"events\" />\n                </PublicRoute>\n              } \n            />\n            <Route \n              path=\"/tables/:id\" \n              element={\n                <ProtectedRoute>\n                  <EventDetailPage type=\"tables\" />\n                </ProtectedRoute>\n              } \n            />\n            <Route \n              path=\"/circles/:id\" \n              element={\n                <ProtectedRoute>\n                  <EventDetailPage type=\"circles\" />\n                </ProtectedRoute>\n              } \n            />\n            \n            {/* User profile routes */}\n            <Route \n              path=\"/profile\" \n              element={\n                <ProtectedRoute>\n                  <ProfilePage />\n                </ProtectedRoute>\n              } \n            />\n            <Route \n              path=\"/users/:id\" \n              element={\n                <PublicRoute>\n                  <UserProfilePage />\n                </PublicRoute>\n              } \n            />\n            \n            {/* Shop routes */}\n            <Route \n              path=\"/shop/edit\" \n              element={\n                <ProtectedRoute>\n                  <ShopEditPage />\n                </ProtectedRoute>\n              } \n            />\n            <Route \n              path=\"/shop/catalogue\" \n              element={\n                <ProtectedRoute>\n                  <CatalogueEditPage />\n                </ProtectedRoute>\n              } \n            />\n            {/* Catalogue section pages */}\n            <Route \n              path=\"/shop/catalogue/products\" \n              element={\n                <ProtectedRoute>\n                  <ProductsPage />\n                </ProtectedRoute>\n              } \n            />\n            <Route \n              path=\"/shop/catalogue/categories\" \n              element={\n                <ProtectedRoute>\n                  <CategoriesPage />\n                </ProtectedRoute>\n              } \n            />\n            <Route \n              path=\"/shop/catalogue/inventory\" \n              element={\n                <ProtectedRoute>\n                  <InventoryPage />\n                </ProtectedRoute>\n              } \n            />\n            <Route \n              path=\"/shop/catalogue/template\" \n              element={\n                <ProtectedRoute>\n                  <TemplatePage />\n                </ProtectedRoute>\n              } \n            />\n            <Route \n              path=\"/shop/:shopId/feedback\" \n              element={\n                <ProtectedRoute>\n                  <FeedbackPage />\n                </ProtectedRoute>\n              } \n            />\n            <Route \n              path=\"/shop/*\" \n              element={\n                <ProtectedRoute>\n                  <ShopRouter />\n                </ProtectedRoute>\n              } \n            />\n            \n            {/* Messages routes */}\n            <Route \n              path=\"/messages\" \n              element={\n                <ProtectedRoute>\n                  <MessageIndexPage />\n                </ProtectedRoute>\n              } \n            />\n            <Route \n              path=\"/messages/:threadId\" \n              element={\n                <ProtectedRoute>\n                  <MessageDetailPage />\n                </ProtectedRoute>\n              } \n            />\n            \n            {/* Host routes */}\n            <Route \n              path=\"/host\" \n              element={\n                <ProtectedRoute>\n                  <HostPage />\n                </ProtectedRoute>\n              } \n            />\n            <Route \n              path=\"/host/create-table\" \n              element={\n                <ProtectedRoute>\n                  <TableCreationPage />\n                </ProtectedRoute>\n              } \n            />\n            <Route \n              path=\"/host/start-circle\" \n              element={\n                <ProtectedRoute>\n                  <CircleCreationPage />\n                </ProtectedRoute>\n              } \n            />\n            <Route \n              path=\"/host/business\" \n              element={\n                <ProtectedRoute>\n                  <BusinessSetupPage />\n                </ProtectedRoute>\n              } \n            />\n            <Route \n              path=\"/host/list-business\" \n              element={\n                <ProtectedRoute>\n                  <BusinessListingPage />\n                </ProtectedRoute>\n              } \n            />\n            \n            {/* Settings route */}\n            <Route \n              path=\"/settings\" \n              element={\n                <ProtectedRoute>\n                  <SettingsPage />\n                </ProtectedRoute>\n              } \n            />\n            \n            {/* Default redirect for unmatched routes */}\n            <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n          </Routes>\n          </Suspense>\n        </main>\n      </div>\n      {!isEventChatPage && <ResponsiveNavBar />}\n      {/* Hide Footer on specific routes */}\n      {(() => {\n        // Hide Footer on basic system pages\n        if (isEventChatPage || isMyEventsPage) return null;\n        \n        // Hide Footer on ExplorePage\n        if (location.pathname === '/explore' || location.pathname === '/city-select') return null;\n        \n        // Hide Footer on event detail pages\n        if (/^\\/(events|tables|circles)\\/[^/]+$/.test(location.pathname)) return null;\n        \n        // Hide Footer on host dashboard and host subpages\n        if (/^\\/host(\\/.*)?$/.test(location.pathname)) return null;\n        \n        // Hide Footer on ALL profile pages (both main profile and user profiles)\n        if (location.pathname === '/profile' || /^\\/profile\\/.*$/.test(location.pathname)) return null;\n        \n        // Hide Footer on EventGroupPage\n        if (/^\\/myevents\\/[^/]+\\/group$/.test(location.pathname)) return null;\n        \n        // Hide Footer on shop pages\n        if (/^\\/shop(\\/.*)?$/.test(location.pathname)) return null;\n        \n        // Show Footer on all other pages\n        return <Footer />;\n      })()}\n\n      {/* Only show Footer when user is NOT authenticated */}\n      {/* Removed this line as it is redundant */}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\n\n/**\n * ExploreSearch Component\n * \n * Following Single Responsibility Principle:\n * - This component only handles the search functionality\n */\nconst ExploreSearch = ({ query, onSearch }) => {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSearch(e.target.search.value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"relative\">\n        <input\n          type=\"text\"\n          name=\"search\"\n          placeholder=\"Search tables, events, or circles...\"\n          className=\"w-full px-4 py-2 bg-white border border-indigo-300 text-indigo-700 placeholder-indigo-400 rounded-md focus:ring-indigo-500 focus:border-indigo-600 text-sm shadow-sm\"\n          defaultValue={query}\n        />\n        <button\n          type=\"submit\"\n          className=\"absolute right-2 top-1.5 bg-transparent text-indigo-600 p-1 hover:text-indigo-700\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n          </svg>\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExploreSearch;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../hooks/stores/useAuthStoreHooks';\nimport { FaPlus, FaBars, FaTimes } from 'react-icons/fa';\n\n// Following Single Responsibility Principle - Header only handles navigation and its own UI state\nconst Header = () => {\n  // Destructuring to get the primitive value directly\n  const { isAuthenticated } = useAuth();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [logoText, setLogoText] = useState(\"Take a Tymout\");\n  const [isAnimating, setIsAnimating] = useState(false);\n  \n  // Animation effect for the logo text\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsAnimating(true);\n      \n      // After animation starts, change text after a delay\n      const textTimer = setTimeout(() => {\n        setLogoText(\"Tymout\");\n      }, 600); // Adjusted timing for the improved animation\n      \n      return () => clearTimeout(textTimer);\n    }, 1500); // Delay before animation starts\n    \n    return () => clearTimeout(timer);\n  }, []);\n\n  // Close menu when location changes\n  useEffect(() => {\n    if (isMenuOpen) {\n      setIsMenuOpen(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  // Handle logo click based on authentication status\n  const handleLogoClick = useCallback((e) => {\n    if (isAuthenticated) {\n      e.preventDefault(); // Prevent default navigation for authenticated users\n      navigate('/explore'); // Navigate to the Explore page\n    }\n  }, [isAuthenticated, navigate]);\n\n  // Toggle menu open/close\n  const toggleMenu = useCallback(() => {\n    setIsMenuOpen(prevState => !prevState);\n  }, []);\n\n  // Handle menu item click - navigate to the page and close the menu\n  const handleMenuItemClick = useCallback((path) => {\n    navigate(path);\n    setIsMenuOpen(false);\n  }, [navigate]);\n\n  return (\n    <>\n      {/* Blurred background div that doesn't contain any content */}\n      <div \n        className=\"fixed top-0 left-0 right-0 h-[70px] md:h-[80px] z-40 transition-all duration-300 bg-white/30 backdrop-blur-md rounded-b-lg shadow-md\"\n      />\n      \n      {/* Animation styles */}\n      <style jsx=\"true\">{`\n        @keyframes logoTransition {\n          0% { \n            width: 180px; \n            opacity: 1;\n            transform: translateX(0);\n          }\n          40% { \n            opacity: 0.3;\n            transform: translateX(10px);\n          }\n          60% { \n            width: 100px; \n            opacity: 0.3;\n            transform: translateX(-5px);\n          }\n          100% { \n            width: 80px; \n            opacity: 1;\n            transform: translateX(0);\n          }\n        }\n        \n        .logo-container {\n          display: inline-block;\n          overflow: hidden;\n          white-space: nowrap;\n          position: relative;\n        }\n        \n        .animating {\n          animation: logoTransition 1.5s cubic-bezier(0.68, -0.55, 0.27, 1.55) forwards;\n        }\n      `}</style>\n      \n      {/* Actual header content with transparent background */}\n      <header \n        className=\"fixed top-0 left-0 right-0 z-50 bg-transparent transition-all duration-300\"\n      >\n        <div className=\"container mx-auto px-3 py-3 md:px-4 md:py-4 flex justify-between items-center relative\">\n          {/* Left side - App name */}\n          <div className=\"flex items-center relative\">\n            <span \n              className=\"absolute -top-2 -right-2 text-[8px] transition-colors duration-300 text-indigo-600\"\n            >\n              TM\n            </span>\n            <Link \n              to=\"/\" \n              className=\"text-xl md:text-2xl font-bold transition-colors duration-300 text-indigo-600\"\n              onClick={handleLogoClick}\n            >\n              <span className={`logo-container ${isAnimating ? 'animating' : ''}`}>\n                {logoText}\n              </span>\n            </Link>\n          </div>\n          \n          {/* Right side - Host button, and Hamburger menu (only if not authenticated) */}\n          <div className=\"flex items-center flex-grow justify-end\">\n            {isAuthenticated && (\n              <>\n                <Link \n                  to=\"/host\"\n                  className=\"mr-6 flex flex-col items-center focus:outline-none hover:opacity-80 transition-all duration-300 text-indigo-600\"\n                  aria-label=\"Host a Table\"\n                >\n                  <div className=\"w-7 h-7 rounded-full bg-indigo-600 flex items-center justify-center mb-1\">\n                    <FaPlus className=\"text-lg text-white\" />\n                  </div>\n                  <span className=\"text-xs font-medium\">Host a Table</span>\n                </Link>\n              </>\n            )}\n            \n            {/* Hamburger Menu Button - Only show if not authenticated */}\n            {!isAuthenticated && (\n              <button\n                onClick={toggleMenu}\n                className=\"ml-4 focus:outline-none hover:opacity-80 transition-all duration-300 text-indigo-600\"\n                aria-label=\"Menu\"\n              >\n                {isMenuOpen ? \n                  <FaTimes className=\"text-2xl\" /> : \n                  <FaBars className=\"text-2xl\" />\n                }\n              </button>\n            )}\n          </div>\n        </div>\n        \n        {/* Hamburger Menu Overlay */}\n        <div \n          className={`fixed inset-0 bg-black bg-opacity-50 z-40 transition-opacity duration-300 ${\n            isMenuOpen ? 'opacity-100' : 'opacity-0 pointer-events-none'\n          }`}\n          onClick={toggleMenu}\n        />\n        \n        {/* Hamburger Menu Content */}\n        <div \n          className={`fixed top-0 right-0 w-64 h-full bg-white shadow-lg z-50 transform transition-transform duration-300 ease-in-out ${\n            isMenuOpen ? 'translate-x-0' : 'translate-x-full'\n          } overflow-y-auto`}\n        >\n          <div className=\"p-5\">\n            <div className=\"flex justify-between items-center mb-8\">\n              <h2 className=\"text-xl font-bold text-indigo-600\">Menu</h2>\n              <button \n                onClick={toggleMenu} \n                className=\"text-gray-500 hover:text-indigo-600 focus:outline-none\"\n                aria-label=\"Close menu\"\n              >\n                <FaTimes className=\"text-xl\" />\n              </button>\n            </div>\n            \n            <nav>\n              <ul className=\"space-y-4\">\n                <li>\n                  <button \n                    onClick={() => handleMenuItemClick('/about')}\n                    className=\"block w-full text-left py-2 text-gray-700 hover:text-indigo-600 border-b border-gray-200\"\n                  >\n                    About\n                  </button>\n                </li>\n                <li>\n                  <button \n                    onClick={() => handleMenuItemClick('/creators')}\n                    className=\"block w-full text-left py-2 text-gray-700 hover:text-indigo-600 border-b border-gray-200\"\n                  >\n                    Creators\n                  </button>\n                </li>\n                <li>\n                  <button \n                    onClick={() => handleMenuItemClick('/login')}\n                    className=\"block w-full text-left py-2 text-gray-700 hover:text-indigo-600 border-b border-gray-200\"\n                  >\n                    Login\n                  </button>\n                </li>\n                <li>\n                  <button \n                    onClick={() => handleMenuItemClick('/signup')}\n                    className=\"block w-full text-left py-2 text-gray-700 hover:text-indigo-600 border-b border-gray-200\"\n                  >\n                    Sign Up\n                  </button>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </div>\n      </header>\n    </>\n  );\n};\n\nexport default Header;\n"],"names":["useAuth","isAuthenticated","useAuthStore","state","useMemo","useUserData","user","useAuthActions","login","logout","register","handleOAuthVerification","clearError","useCurrentUser","options","arguments","length","undefined","useQuery","_objectSpread","queryKey","queryFn","authService","getCurrentUser","staleTime","retry","failureCount","error","_error$response","response","status","useLogout","queryClient","useQueryClient","navigate","useNavigate","useMutation","mutationFn","onSuccess","invalidateQueries","setQueryData","removeQueries","onError","useOAuthVerification","prefetchQuery","profileService","getProfile","_ref","type","pulseClass","_jsx","className","children","renderSkeletonPattern","_jsxs","concat","Array","map","_","i","j","tablesData","id","title","category","description","location","distance","rating","participants","tags","image","host","name","verified","eventsData","date","attendees","circlesData","members","admin","useExploreSearch","initialFilters","query","filters","exploreService","getExploreItems","useExploreItems","keepPreviousData","updateFilters","newFilters","rest","_objectWithoutProperties","_excluded","data","isLoading","loading","useLocation","useEffect","path","pathname","skeletonType","includes","SkeletonLoader","Navigate","to","from","replace","React","Footer","startsWith","Link","href","target","rel","fill","viewBox","fillRule","d","clipRule","Date","getFullYear","ResponsiveNavBar","navItems","icon","FaUsers","FaCommentDots","FaUser","_Fragment","item","NavLink","isActive","_ref2","city","onPlaceSelect","setQuery","useState","results","setResults","setIsLoading","isOpen","setIsOpen","selectedPlace","setSelectedPlace","searchRef","useRef","resultsRef","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","searchTimeout","setTimeout","async","places","searchPlaces","clearTimeout","ref","FaMapMarkerAlt","value","onChange","e","onFocus","placeholder","disabled","FaSpinner","place","onClick","handlePlaceSelect","address","EventCreationFormHookForm","defaultValues","onSubmit","locations","isSubmitting","selectedTemplate","imagePreview","setImagePreview","imageFile","setImageFile","uploadError","setUploadError","fileInputRef","timeAmPm","setTimeAmPm","formatTimeFor24Hour","timeInput","ampm","hours","minutes","split","hoursInt","parseInt","num","substring","toString","padStart","control","handleSubmit","formState","errors","watch","setValue","useForm","time","duration","maxAttendees","isPublic","isRecurring","selectedCity","tagInput","setTagInput","handleTagInputChange","handleAddTag","currentTags","trim","formattedTag","toLowerCase","capitalizedTag","charAt","toUpperCase","slice","currentTagsArray","tag","filter","isArray","some","updatedTags","join","startDateTime","endDateTime","getTime","eventData","onlineLink","placeId","coordinates","start","end","userId","entryFee","access","eventImage","htmlFor","Controller","rules","required","render","field","message","_ref3","rows","FaCalendarAlt","_ref4","FaClock","validate","test","_ref5","displayTime","displayAmPm","selectedHours","selectedMinutes","hoursOptions","time24","hour","minute","newAmPm","min","_ref6","step","max","_ref7","FaBuilding","_ref8","_ref9","_errors$place","PlaceSearch","_ref0","FaImage","accept","file","files","size","reader","FileReader","onloadend","result","readAsDataURL","triggerFileInput","click","FaUpload","src","alt","FaTags","_ref1","onKeyPress","key","preventDefault","index","handleRemoveTag","tagToRemove","_ref10","checked","_ref11","defaultProps","RecurringEventSchedulerHookForm","frequency","interval","endDate","daysOfWeek","FaRedo","label","day","_field$value","isChecked","currentDays","createEvent","eventDataCopy","url","process","axios","post","createdEvent","_id","eventId","authHeader","defaults","headers","common","token","localStorage","getItem","Error","imageUrl","uploadEventImage","updatePayload","event_image","imageUpdateUrl","authToken","updatedEventResponse","put","updateError","imageError","updateEvent","baseUrl","cancelEvent","Promise","resolve","canceledAt","toISOString","getLocations","capacity","getEventTemplates","TableCreationPage","showShareDialog","setShowShareDialog","createdEventId","setCreatedEventId","isPrivateEvent","setIsPrivateEvent","copied","setCopied","hostService","useLocations","templates","useEventTemplates","createEventMutation","useCreateEvent","eventDraft","updateEventDraft","resetEventCreation","currentTemplateId","useHostStore","recurringPattern","find","template","xmlns","readOnly","window","origin","handleCopyLink","eventUrl","navigator","clipboard","writeText","then","catch","err","FaCheck","FaCopy","handleContinue","handleBack","FaArrowLeft","formData","loadingToastId","toast","mutateAsync","update","autoClose","isPrivate","isPending","recurringData","CircleCreationPage","circleData","setCircleData","meetingFrequency","handleInputChange","alert","FaTag","removeTag","onKeyDown","newTag","BusinessListingPage","businessData","setBusinessData","phone","website","businessType","businessHours","monday","open","close","closed","tuesday","wednesday","thursday","friday","saturday","sunday","amenities","handleHoursChange","dayLabels","FaPhone","FaGlobe","Object","keys","amenity","updatedAmenities","a","handleAmenityToggle","BusinessSetupPage","activeTab","setActiveTab","businessActions","FaEdit","FaClipboardList","FaHistory","FaStore","FaUtensils","FaHotel","handleContinueToListing","action","handleNavigate","stroke","strokeLinecap","strokeLinejoin","strokeWidth","LoginPage","lazy","SignupPage","AuthSuccess","OnboardingPage","ProfilePage","SettingsPage","HostPage","EventDetailPage","MessageIndexPage","MessageDetailPage","UserProfilePage","AboutPage","FeaturesPage","CreatorsPage","BusinessPage","GuidelinesPage","FAQPage","ContactPage","PoliciesPage","CitySelectPage","App","authData","JSON","parse","getState","setUser","isNoHeaderPage","isEventChatPage","isMyEventsPage","Header","Suspense","fallback","Routes","Route","element","ProtectedRoute","PublicRoute","ExplorePage","MyEventsPage","JoinRequestsPage","EventChatPage","EventAboutPage","EventGroupPage","EventPage","ShopEditPage","CatalogueEditPage","ProductsPage","CategoriesPage","InventoryPage","TemplatePage","FeedbackPage","ShopRouter","onSearch","search","defaultValue","isMenuOpen","setIsMenuOpen","logoText","setLogoText","isAnimating","setIsAnimating","timer","textTimer","handleLogoClick","useCallback","toggleMenu","prevState","handleMenuItemClick","jsx","FaPlus","FaTimes","FaBars"],"sourceRoot":""}