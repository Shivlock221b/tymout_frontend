{"version":3,"file":"static/js/539.a1b8ed41.chunk.js","mappings":"2LAaA,MAyJA,EAzJkBA,IAA+G,IAA9G,YAAEC,EAAW,aAAEC,EAAe,GAAE,mBAAEC,EAAkB,iBAAEC,EAAmB,KAAI,gBAAEC,GAAkB,GAAOL,EAEzH,MAAMM,GAAkBC,EAAAA,EAAAA,IAAaC,GAASA,EAAMF,mBAG7CG,EAAkBC,KAFRC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OAC+BC,EAAAA,EAAAA,WAAS,IAanDC,EAAY,CAChB,KAAQ,qBACR,KAAQ,eACR,UAAa,eACb,OAAU,eACV,SAAY,gBAIRC,EAAY,CAChB,KAAQ,CACNC,GAAI,gBACJC,OAAQ,oBACRC,KAAM,mBAER,KAAQ,CACNF,GAAI,cACJC,OAAQ,kBACRC,KAAM,iBAER,UAAa,CACXF,GAAI,cACJC,OAAQ,kBACRC,KAAM,iBAER,OAAU,CACRF,GAAI,eACJC,OAAQ,mBACRC,KAAM,kBAER,SAAY,CACVF,GAAI,gBACJC,OAAQ,oBACRC,KAAM,oBAKJC,EAAcC,OAAOC,KAAKP,GAyChC,OACEQ,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAAD,SAAA,4IAOEnB,IACAiB,EAAAA,EAAAA,MAAA,OAAKI,UAAU,uBAAsBF,SAAA,CAGlCL,EAAYQ,KAAIC,IACfH,EAAAA,EAAAA,KAAA,OAAeC,UAAU,WAAUF,UACjCC,EAAAA,EAAAA,KAAA,UACEI,QAASA,IAtDCD,KAClB1B,EAAa,KAAO0B,EAEtB3B,EAAY,IAGZA,EAAY,CAAC2B,GACf,EA+C2BE,CAAeF,GAC9BF,UAAS,kIAAAK,OAEL7B,EAAa8B,SAASJ,GAAI,GAAAG,OACrBhB,EAAUa,GAAKZ,GAAE,KAAAe,OAAIhB,EAAUa,GAAKV,KAAI,gBAAAa,OAAehB,EAAUa,GAAKX,OAAM,iBAC/E,6DAA4D,sBAChEO,UAEFF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,0CAAyCF,SAAA,EACtDC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcF,SAAEV,EAAUc,MAC1CH,EAAAA,EAAAA,KAAA,QAAMC,UAAU,0BAAyBF,SAAEI,UAZvCA,MAoBZH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQF,SACpBf,IAAqBH,IACpBgB,EAAAA,EAAAA,MAAA,OAAKI,UAAU,mHAAkHF,SAAA,CAAC,2CAEhIC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oHAMxB,C","sources":["components/explore/TagFilter.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useAuthStore } from '../../stores/authStore';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\n/**\n * TagFilter Component\n * \n * Following Single Responsibility Principle:\n * - This component handles only tag filtering functionality\n * - It provides a visually appealing UI with rounded borders\n * - Allows selection of multiple tags for filtering content\n */\nconst TagFilter = ({ onTagSelect, selectedTags = [], onSpecialTagSelect, activeSpecialTag = null, hideRegularTags = false }) => {\n  // Get authentication status from auth store\n  const isAuthenticated = useAuthStore(state => state.isAuthenticated);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [showLoginTooltip, setShowLoginTooltip] = useState(false);\n  \n  // Popular tags used for filtering - all possible tags for backend logic\n  // Many are hidden from UI but kept for backend functionality\n  /* eslint-disable no-unused-vars */\n  const availableTags = [\n    'Only For You', 'Food', 'Play', 'Art', 'Learn', 'Serve', \n    'Socialize', 'Travel', 'Culture', 'Wellness'\n  ];\n  /* eslint-enable no-unused-vars */\n  \n  // Tags with emojis that should be visible in the UI\n  // Excluding 'Only For You', 'Learn', 'Art', 'Serve', and 'Culture' as requested\n  const tagEmojis = {\n    'Food': '🍽️',\n    'Play': '👟', // Changed to shoes emoji\n    'Socialize': '🎉', // Changed to party emoji\n    'Travel': '✈️',\n    'Wellness': '🧘'\n  };\n  \n  // Color schemes for each tag when selected\n  const tagColors = {\n    'Food': {\n      bg: 'bg-orange-100',\n      border: 'border-orange-400',\n      text: 'text-orange-700'\n    },\n    'Play': {\n      bg: 'bg-blue-100',\n      border: 'border-blue-400',\n      text: 'text-blue-700'\n    },\n    'Socialize': {\n      bg: 'bg-pink-100',\n      border: 'border-pink-400',\n      text: 'text-pink-700'\n    },\n    'Travel': {\n      bg: 'bg-green-100',\n      border: 'border-green-400',\n      text: 'text-green-700'\n    },\n    'Wellness': {\n      bg: 'bg-purple-100',\n      border: 'border-purple-400',\n      text: 'text-purple-700'\n    }\n  };\n  \n  // Only show tags that have emojis assigned (our visible tags)\n  const visibleTags = Object.keys(tagEmojis);\n\n  // Handle single tag selection/deselection (single-select)\n  const handleTagClick = (tag) => {\n    if (selectedTags[0] === tag) {\n      // Deselect if already selected\n      onTagSelect([]);\n    } else {\n      // Only one tag can be selected at a time\n      onTagSelect([tag]);\n    }\n  };\n\n  // Simplified function for handling special tags like 'Only For You'\n  // This is kept for the hidden functionality but not directly exposed in UI\n  // NOTE: This function is intentionally preserved but currently unused.\n  // It will be called programmatically from ExplorePage.js when needed\n  // through the onSpecialTagSelect prop to maintain the 'Only For You' functionality\n  /* eslint-disable no-unused-vars */\n  const handleSpecialTag = (tag) => {\n    // Keep this function to maintain special tag functionality\n    // even though the UI elements are hidden\n    if (tag === 'Only For You') {\n      if (!isAuthenticated) {\n        setShowLoginTooltip(true);\n        setTimeout(() => {\n          navigate('/login', { \n            state: { \n              from: location,\n              message: 'Please log in to see personalized recommendations' \n            } \n          });\n        }, 800);\n        return;\n      }\n      \n      // Pass the special tag to parent component for processing\n      onSpecialTagSelect('Only For You');\n    }\n  };\n\n  return (\n    <>\n      <style>{`\n        .backdrop-blur-sm {\n          backdrop-filter: blur(8px);\n          -webkit-backdrop-filter: blur(8px);\n        }\n      `}</style>\n      {/* Only show regular tag filter section if not hiding regular tags */}\n      {!hideRegularTags && (\n        <div className=\"tag-scroll-container\">\n          \n          {/* Only display visible tags (excludes 'Only For You') */}\n          {visibleTags.map(tag => (\n            <div key={tag} className=\"relative\">\n              <button\n                onClick={() => handleTagClick(tag)}\n                className={`\n                  tag-item px-5 py-3 text-lg transition-all duration-200 flex items-center justify-center\n                  ${selectedTags.includes(tag)\n                    ? `${tagColors[tag].bg} ${tagColors[tag].text} border-b-2 ${tagColors[tag].border} rounded-t-lg` \n                    : 'bg-white text-gray-700 hover:bg-gray-50 hover:rounded-t-lg'}\n                `}\n              >\n                <div className=\"flex items-center justify-center h-full\">\n                  <span className=\"text-xl mr-1\">{tagEmojis[tag]}</span>\n                  <span className=\"font-bold text-gray-800\">{tag}</span>\n                </div>\n              </button>\n            </div>\n          ))}\n          \n          {/* Keep 'Only For You' functionality but hide the button */}\n          {/* This is a hidden element that maintains the functionality */}\n          <div className=\"hidden\">\n            {showLoginTooltip && !isAuthenticated && (\n              <div className=\"absolute -top-12 left-0 right-0 mx-auto w-48 bg-indigo-600 text-white text-xs rounded py-1 px-2 z-50 text-center\">\n                Login required for personalized content\n                <div className=\"absolute bottom-0 left-1/2 transform -translate-x-1/2 translate-y-1/2 rotate-45 w-2 h-2 bg-indigo-600\"></div>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nTagFilter.propTypes = {\n  onTagSelect: PropTypes.func.isRequired,\n  selectedTags: PropTypes.array,\n  onSpecialTagSelect: PropTypes.func.isRequired,\n  activeSpecialTag: PropTypes.string,\n  hideRegularTags: PropTypes.bool\n};\n\nexport default TagFilter;\n"],"names":["_ref","onTagSelect","selectedTags","onSpecialTagSelect","activeSpecialTag","hideRegularTags","isAuthenticated","useAuthStore","state","showLoginTooltip","setShowLoginTooltip","useNavigate","useLocation","useState","tagEmojis","tagColors","bg","border","text","visibleTags","Object","keys","_jsxs","_Fragment","children","_jsx","className","map","tag","onClick","handleTagClick","concat","includes"],"sourceRoot":""}