{"version":3,"file":"static/js/390.05fe1a9e.chunk.js","mappings":"qMAMA,MAkGA,EAlGoBA,KAClB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACVC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,OAG3BC,OAAQC,EAAW,UAAEC,EAAS,UAAEC,EAAS,QAAEC,EAASP,MAAOQ,IAAcC,EAAAA,EAAAA,MAG3EC,GAAkBC,EAAAA,EAAAA,IAAaC,GAASA,EAAMF,kBA+CpD,OA7CAG,EAAAA,EAAAA,YAAU,KACYC,WAElB,MAAMC,EAAQ,IAAIC,gBAAgBlB,EAASmB,QACrCC,EAAQH,EAAMI,IAAI,SAClBC,EAAeL,EAAMI,IAAI,gBAE/B,IAAKD,EAIH,OAFAjB,EAAS,kDACToB,YAAW,IAAMzB,EAAS,WAAW,KAMvCQ,EAAY,CAAEc,QAAOE,gBAAe,EAGtCE,EAAa,GACZ,CAACxB,EAAUM,EAAaR,KAG3BiB,EAAAA,EAAAA,YAAU,KACR,GAAIP,GAAaI,EAAiB,CAEhC,MAAMa,EAAOZ,EAAAA,EAAaa,WAAWD,KAGjCA,GAAQA,EAAKE,aAAe,GAE9B7B,EAAS,eAGTA,EAAS,WAEb,CAEIW,GAAWC,IAEbP,EAAS,4CACToB,YAAW,IAAMzB,EAAS,WAAW,KACvC,GACC,CAACU,EAAWC,EAASC,EAAWZ,EAAUc,IAEzCL,GAEAqB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yDAAwDC,UACrEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8EACfD,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iCAAgCC,SAAC,0CAMlD5B,GAEA0B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yDAAwDC,UACrEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gCAA+BC,UAC5CF,EAAAA,EAAAA,KAAA,OAAKI,MAAM,6BAA6BH,UAAU,oBAAoBI,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAAcL,UACzHF,EAAAA,EAAAA,KAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,2DAGzEX,EAAAA,EAAAA,KAAA,KAAGC,UAAU,uCAAsCC,SAAE5B,KACrD0B,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iCAAgCC,SAAC,uCAOpDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yDAAwDC,UACrEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kCAAiCC,UAC9CF,EAAAA,EAAAA,KAAA,OAAKI,MAAM,6BAA6BH,UAAU,oBAAoBI,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAAcL,UACzHF,EAAAA,EAAAA,KAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,wBAGzEX,EAAAA,EAAAA,KAAA,KAAGC,UAAU,yCAAwCC,SAAC,gCACtDF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iCAAgCC,SAAC,yCAE5C,C","sources":["pages/AuthSuccess.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { useOAuthVerification } from '../hooks/queries/useAuthQueries';\r\nimport { useAuthStore } from '../stores/authStore';\r\n\r\n// Following Single Responsibility Principle - this component only handles auth commit callback\r\nconst AuthSuccess = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Use the React Query mutation hook \r\n  const { mutate: verifyOAuth, isLoading, isSuccess, isError, error: authError } = useOAuthVerification();\r\n  \r\n  // Check authentication status from the store for redirect decision\r\n  const isAuthenticated = useAuthStore(state => state.isAuthenticated);\r\n\r\n  useEffect(() => {\r\n    const processAuth = async () => {\r\n      // Extract tokens from URL query parameters\r\n      const query = new URLSearchParams(location.search);\r\n      const token = query.get('token');\r\n      const refreshToken = query.get('refreshToken');\r\n      \r\n      if (!token) {\r\n        console.error('No token found in URL');\r\n        setError('Authentication failed - no token received');\r\n        setTimeout(() => navigate('/login'), 2000);\r\n        return;\r\n      }\r\n\r\n      console.log('Tokens found in URL, verifying with backend...');\r\n      // Call the mutation function with both tokens\r\n      verifyOAuth({ token, refreshToken });\r\n    };\r\n\r\n    processAuth();\r\n  }, [location, verifyOAuth, navigate]);\r\n\r\n  // Handle success and error states\r\n  useEffect(() => {\r\n    if (isSuccess || isAuthenticated) {\r\n      console.log('Authentication successful, checking profile completeness');\r\n      const user = useAuthStore.getState().user;\r\n      \r\n      // Check if this is a new user or profile is incomplete\r\n      if (user && user.completeness < 50) {\r\n        console.log('Profile incomplete, redirecting to onboarding');\r\n        navigate('/onboarding');\r\n      } else {\r\n        console.log('Profile complete, redirecting to explore');\r\n        navigate('/explore');\r\n      }\r\n    }\r\n    \r\n    if (isError && authError) {\r\n      console.error('Error processing authentication:', authError);\r\n      setError('Authentication failed - please try again');\r\n      setTimeout(() => navigate('/login'), 2000);\r\n    }\r\n  }, [isSuccess, isError, authError, navigate, isAuthenticated]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-white\">\r\n        <div className=\"p-8 bg-white shadow-md rounded-lg\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600 mx-auto\"></div>\r\n          <p className=\"text-center mt-4 text-gray-700\">Verifying your authentication...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-white\">\r\n        <div className=\"p-8 bg-white shadow-md rounded-lg\">\r\n          <div className=\"text-red-500 text-center mb-4\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-10 w-10 mx-auto\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n            </svg>\r\n          </div>\r\n          <p className=\"text-center text-red-600 font-medium\">{error}</p>\r\n          <p className=\"text-center mt-2 text-gray-600\">Redirecting to login page...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-white\">\r\n      <div className=\"p-8 bg-white shadow-md rounded-lg\">\r\n        <div className=\"text-green-500 text-center mb-4\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-10 w-10 mx-auto\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n          </svg>\r\n        </div>\r\n        <p className=\"text-center text-green-600 font-medium\">Authentication successful!</p>\r\n        <p className=\"text-center mt-2 text-gray-600\">Redirecting to your dashboard...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthSuccess;\r\n"],"names":["AuthSuccess","navigate","useNavigate","location","useLocation","error","setError","useState","mutate","verifyOAuth","isLoading","isSuccess","isError","authError","useOAuthVerification","isAuthenticated","useAuthStore","state","useEffect","async","query","URLSearchParams","search","token","get","refreshToken","setTimeout","processAuth","user","getState","completeness","_jsx","className","children","_jsxs","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d"],"sourceRoot":""}